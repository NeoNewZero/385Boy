
usb_kb.elf:     file format elf32-littlenios2
usb_kb.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000000

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x0000ebac memsz 0x0000ebac flags r-x
    LOAD off    0x0000fbac vaddr 0x0800ebac paddr 0x0800f6f0 align 2**12
         filesz 0x00000b44 memsz 0x00000b44 flags rw-
    LOAD off    0x00011234 vaddr 0x08010234 paddr 0x08010234 align 2**12
         filesz 0x00000000 memsz 0x00020058 flags rw-
    LOAD off    0x00011000 vaddr 0x10201000 paddr 0x10201000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10201000  10201000  00011000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000000  10201020  10201020  00011020  2**0
                  CONTENTS
  2 .text         0000e870  08000000  08000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000033c  0800e870  0800e870  0000f870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000b44  0800ebac  0800f6f0  0000fbac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00020058  08010234  08010234  00011234  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  0803028c  0803028c  00011020  2**0
                  CONTENTS
  7 .onchip_memory 00000000  10201020  10201020  00011020  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00011020  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000d28  00000000  00000000  00011048  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00021f07  00000000  00000000  00011d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008339  00000000  00000000  00033c77  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000a759  00000000  00000000  0003bfb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001d98  00000000  00000000  0004670c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00002f1e  00000000  00000000  000484a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00016ed8  00000000  00000000  0004b3c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  0006229c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001770  00000000  00000000  000622d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00066756  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00066759  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00066765  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00066766  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  00066767  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  00066770  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  00066779  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000b  00000000  00000000  00066782  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000010  00000000  00000000  0006678d  2**0
                  CONTENTS, READONLY
 27 .jdi          000046a1  00000000  00000000  0006679d  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0007d340  00000000  00000000  0006ae3e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10201000 l    d  .entry	00000000 .entry
10201020 l    d  .exceptions	00000000 .exceptions
08000000 l    d  .text	00000000 .text
0800e870 l    d  .rodata	00000000 .rodata
0800ebac l    d  .rwdata	00000000 .rwdata
08010234 l    d  .bss	00000000 .bss
0803028c l    d  .sdram	00000000 .sdram
10201020 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../usb_kb_bsp//obj/HAL/src/crt0.o
08000048 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0800e8d2 l     O .rodata	00000010 zeroes.4255
08002b0c l     F .text	000000bc __sbprintf
0800e8e2 l     O .rodata	00000010 blanks.4254
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
08002d1c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
080048d8 l     F .text	00000008 __fp_lock
080048e0 l     F .text	00000008 __fp_unlock
080048f4 l     F .text	0000019c __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0800ebac l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0800eff0 l     O .rwdata	00000020 lc_ctype_charset
0800efd0 l     O .rwdata	00000020 lc_message_charset
0800f010 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0800e914 l     O .rodata	0000000c p05.2710
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
08007d64 l     F .text	000000fc __sprint_r.part.0
0800ea48 l     O .rodata	00000010 blanks.4199
0800ea38 l     O .rodata	00000010 zeroes.4200
0800916c l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0800a670 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0800cd9c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0800cebc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0800cee8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0800cfe8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0800d0dc l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0800d1c0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0800d39c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0800f6ec l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0800d5f8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0800d740 l     F .text	00000038 alt_dev_reg
0800f5f8 l     O .rwdata	0000002c jtag_uart
0800f624 l     O .rwdata	0000002c buttons
0800f650 l     O .rwdata	00000054 pixel_buffer_dma
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0800dc40 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0800de1c l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0800df54 l     F .text	00000050 alt_get_errno
0800dfa4 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
080073dc g     F .text	00000074 _mprec_log10
080074c8 g     F .text	0000008c __any_on
080096d8 g     F .text	00000054 _isatty_r
0800e920 g     O .rodata	00000028 __mprec_tinytens
0800d2e4 g     F .text	00000078 alt_main
08000a44 g     F .text	000000a8 _puts_r
0800972c g     F .text	0000005c _lseek_r
0800f6f0 g       *ABS*	00000000 __flash_rwdata_start
0800b904 g     F .text	00000084 .hidden __eqdf2
0803028c g       *ABS*	00000000 __alt_heap_start
08000a08 g     F .text	0000003c printf
08009938 g     F .text	0000009c _wcrtomb_r
08007c5c g     F .text	0000005c __sseek
08004c28 g     F .text	00000010 __sinit
080097e4 g     F .text	00000138 __swbuf_r
080056d4 g     F .text	0000007c _setlocale_r
08004a90 g     F .text	00000068 __sfmoreglue
0800d37c g     F .text	00000020 __malloc_unlock
08006334 g     F .text	0000015c memmove
08004c10 g     F .text	00000018 _cleanup
080065b4 g     F .text	000000a8 _Balloc
08010238 g     O .bss	00000004 n
0800b988 g     F .text	000000e0 .hidden __gtdf2
00000000  w      *UND*	00000000 __errno
10201000 g     F .entry	0000001c __reset
0800f6b4 g     O .rwdata	00000004 address
10201020 g       *ABS*	00000000 __flash_exceptions_start
08009680 g     F .text	00000058 _fstat_r
08010254 g     O .bss	00000004 errno
08007bd8 g     F .text	00000008 __seofread
0801025c g     O .bss	00000004 alt_argv
080176a4 g       *ABS*	00000000 _gp
0800f478 g     O .rwdata	00000180 alt_fd_list
0800e1e8 g     F .text	00000090 alt_find_dev
080061fc g     F .text	00000138 memcpy
080048e8 g     F .text	0000000c _cleanup_r
0800cbc4 g     F .text	000000d0 .hidden __floatsidf
0800dedc g     F .text	00000078 alt_io_redirect
0800ba68 g     F .text	000000e0 .hidden __ltdf2
0800e870 g       *ABS*	00000000 __DTOR_END__
08000aec g     F .text	00000014 puts
08007abc g     F .text	00000074 __fpclassifyd
08007338 g     F .text	000000a4 __ratio
08009148 g     F .text	00000024 __vfiprintf_internal
0800da84 g     F .text	000000e4 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
080009dc g     F .text	0000002c _printf_r
0800a78c g     F .text	00000008 .hidden __udivsi3
0800d038 g     F .text	000000a4 isatty
0800e970 g     O .rodata	000000c8 __mprec_tens
08005750 g     F .text	0000000c __locale_charset
0800e440 g     F .text	0000008c alt_icache_flush
08010250 g     O .bss	00000004 __malloc_top_pad
080002b4 g     F .text	00000728 build_gb_screen
0800f6c4 g     O .rwdata	00000004 __mb_cur_max
08005780 g     F .text	0000000c _localeconv_r
080069c0 g     F .text	0000003c __i2b
0800508c g     F .text	000004c0 __sfvwrite_r
08007b30 g     F .text	00000054 _sbrk_r
08009788 g     F .text	0000005c _read_r
0800f6e4 g     O .rwdata	00000004 alt_max_fd
0800939c g     F .text	000000f0 _fclose_r
08010234 g     O .bss	00000004 line
080048a8 g     F .text	00000030 fflush
0801024c g     O .bss	00000004 __malloc_max_sbrked_mem
0800a79c g     F .text	0000089c .hidden __adddf3
080070e0 g     F .text	0000011c __b2d
0800a0e0 g     F .text	00000590 .hidden __umoddi3
0800d210 g     F .text	000000d4 lseek
0800f6b8 g     O .rwdata	00000004 data_in
0800f6bc g     O .rwdata	00000004 _global_impure_ptr
08007554 g     F .text	00000568 _realloc_r
0803028c g       *ABS*	00000000 __bss_end
08009b20 g     F .text	000005c0 .hidden __udivdi3
080094a0 g     F .text	00000184 _fputwc_r
0800e948 g     O .rodata	00000028 __mprec_bigtens
080067a4 g     F .text	00000104 __s2b
0800cc94 g     F .text	000000a4 .hidden __floatunsidf
08006e88 g     F .text	00000060 __mcmp
08004c48 g     F .text	00000018 __fp_lock_all
0800f450 g     O .rwdata	00000028 alt_dev_null
0800dbfc g     F .text	00000044 alt_dcache_flush_all
080068a8 g     F .text	00000068 __hi0bits
0800cb3c g     F .text	00000088 .hidden __fixdfsi
0800f6f0 g       *ABS*	00000000 __ram_rwdata_end
10201000 g       *ABS*	00000000 __alt_mem_onchip_memory
0800f6dc g     O .rwdata	00000008 alt_dev_list
0800d648 g     F .text	000000f8 write
0800ebac g       *ABS*	00000000 __ram_rodata_end
0800cf38 g     F .text	000000b0 fstat
0800ba68 g     F .text	000000e0 .hidden __ledf2
08006bf8 g     F .text	00000140 __pow5mult
08007e78 g     F .text	000012d0 ___vfiprintf_internal_r
08010244 g     O .bss	00000004 __nlocale_changed
0800a794 g     F .text	00000008 .hidden __umodsi3
0803028c g       *ABS*	00000000 end
0800004c g     F .text	00000040 getGbMem
0800e870 g       *ABS*	00000000 __CTOR_LIST__
10000000 g       *ABS*	00000000 __alt_stack_pointer
0800cd38 g     F .text	00000064 .hidden __clzsi2
0800db68 g     F .text	00000094 altera_avalon_jtag_uart_write
08004c38 g     F .text	00000004 __sfp_lock_acquire
08006114 g     F .text	000000e8 memchr
08000b98 g     F .text	00001f50 ___vfprintf_internal_r
08004d9c g     F .text	000002f0 _free_r
0800575c g     F .text	00000010 __locale_mb_cur_max
08000194 g     F .text	00000074 getColorBG
0800e6a8 g     F .text	00000194 __call_exitprocs
08010240 g     O .bss	00000004 __mlocale_changed
0800f6c8 g     O .rwdata	00000004 __malloc_sbrk_base
08000000 g     F .text	0000004c _start
08006d38 g     F .text	00000150 __lshift
0800d3ec g     F .text	000000fc read
0800d7ac g     F .text	00000218 alt_sys_init
0800e594 g     F .text	00000114 __register_exitproc
080069fc g     F .text	000001fc __multiply
0800ebac g       *ABS*	00000000 __ram_rwdata_start
0800e870 g       *ABS*	00000000 __ram_rodata_start
08010264 g     O .bss	00000028 __malloc_current_mallinfo
080071fc g     F .text	0000013c __d2b
0800d9c4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0800e38c g     F .text	000000b4 alt_get_fd
08009284 g     F .text	00000054 _close_r
0800e518 g     F .text	0000007c memcmp
0803028c g       *ABS*	00000000 __alt_stack_base
08002bc8 g     F .text	00000154 __swsetup_r
0800b038 g     F .text	000008cc .hidden __divdf3
08004af8 g     F .text	00000118 __sfp
08007450 g     F .text	00000078 __copybits
0800f048 g     O .rwdata	00000408 __malloc_av_
08004c44 g     F .text	00000004 __sinit_lock_release
0800bb48 g     F .text	00000724 .hidden __muldf3
08007b84 g     F .text	00000054 __sread
0800e278 g     F .text	00000114 alt_find_file
0800dc90 g     F .text	000000a4 alt_dev_llist_insert
0800d35c g     F .text	00000020 __malloc_lock
0800d548 g     F .text	000000b0 sbrk
0800484c g     F .text	0000005c _fflush_r
080092d8 g     F .text	000000c4 _calloc_r
08010234 g       *ABS*	00000000 __bss_start
08006490 g     F .text	00000124 memset
0800008c g     F .text	00000108 main
08010260 g     O .bss	00000004 alt_envp
08010248 g     O .bss	00000004 __malloc_max_total_mem
0800da24 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0800991c g     F .text	0000001c __swbuf
0800f6a8 g     O .rwdata	00000004 back_buffer_reg
08007cb8 g     F .text	00000008 __sclose
10000000 g       *ABS*	00000000 __alt_heap_limit
0800948c g     F .text	00000014 fclose
08002f1c g     F .text	00001728 _dtoa_r
0800596c g     F .text	000007a8 _malloc_r
08009a94 g     F .text	00000030 __ascii_wctomb
0800f6e8 g     O .rwdata	00000004 alt_errno
0800554c g     F .text	000000c4 _fwalk
0800a6dc g     F .text	00000054 .hidden __divsi3
08004c78 g     F .text	00000124 _malloc_trim_r
0800e870 g       *ABS*	00000000 __CTOR_END__
08007cc0 g     F .text	000000a4 strcmp
0800e870 g       *ABS*	00000000 __flash_rodata_start
0800e870 g       *ABS*	00000000 __DTOR_LIST__
0800b904 g     F .text	00000084 .hidden __nedf2
0800d778 g     F .text	00000034 alt_irq_init
0800d4e8 g     F .text	00000060 alt_release_fd
0800ea58 g     O .rodata	00000100 .hidden __clz_tab
0801023c g     O .bss	00000004 _PathLocale
0800f6a4 g     O .rwdata	00000004 pixel_buffer
0800e4cc g     F .text	00000014 atexit
08000208 g     F .text	000000ac getColorSprite
08009228 g     F .text	0000005c _write_r
0800578c g     F .text	0000001c setlocale
0800f6c0 g     O .rwdata	00000004 _impure_ptr
08010258 g     O .bss	00000004 alt_argc
08004644 g     F .text	00000208 __sflush_r
0800dd90 g     F .text	0000005c _do_dtors
08005778 g     F .text	00000008 __locale_cjk_lang
08007080 g     F .text	00000060 __ulp
08004c60 g     F .text	00000018 __fp_unlock_all
0800f6d4 g     O .rwdata	00000008 alt_fs_list
0800f6ac g     O .rwdata	00000004 buffer_reg
10201020 g       *ABS*	00000000 __ram_exceptions_start
080057a8 g     F .text	0000000c localeconv
0800f6b0 g     O .rwdata	00000004 back_buffer
0800f6f0 g       *ABS*	00000000 _edata
0803028c g       *ABS*	00000000 _end
10201020 g       *ABS*	00000000 __ram_exceptions_end
0801028c g     O .bss	00020000 gbDisplay
08007be0 g     F .text	0000007c __swrite
0800f6cc g     O .rwdata	00000004 __malloc_trim_threshold
0800e1c8 g     F .text	00000020 altera_nios2_qsys_irq_init
0800576c g     F .text	0000000c __locale_msgcharset
0800e4e0 g     F .text	00000038 exit
08005610 g     F .text	000000c4 _fwalk_reent
08006ee8 g     F .text	00000198 __mdiff
0800a730 g     F .text	0000005c .hidden __modsi3
10000000 g       *ABS*	00000000 __alt_data_end
08004c3c g     F .text	00000004 __sfp_lock_release
08000000 g       *ABS*	00000000 __alt_mem_sdram
0800e83c g     F .text	00000034 _exit
080057b4 g     F .text	000001b8 __smakebuf_r
08000b00 g     F .text	00000098 strlen
0800e070 g     F .text	00000158 open
0800b988 g     F .text	000000e0 .hidden __gedf2
0800f6d0 g     O .rwdata	00000004 __wctomb
08007e60 g     F .text	00000018 __sprint_r
0800ddec g     F .text	00000030 alt_icache_flush_all
08002ae8 g     F .text	00000024 __vfprintf_internal
08009ac4 g     F .text	0000005c _wctomb_r
0800c26c g     F .text	000008d0 .hidden __subdf3
08006910 g     F .text	000000b0 __lo0bits
0800dd34 g     F .text	0000005c _do_ctors
080099d4 g     F .text	000000c0 wcrtomb
0800cdec g     F .text	000000d0 close
0800d140 g     F .text	00000080 alt_load
08009624 g     F .text	0000005c fputwc
00000000  w      *UND*	00000000 free
08004c40 g     F .text	00000004 __sinit_lock_acquire
08006684 g     F .text	00000120 __multadd
0800665c g     F .text	00000028 _Bfree



Disassembly of section .entry:

10201000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10201000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10201004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10201008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1020100c:	00bffd16 	blt	zero,r2,10201004 <__flash_exceptions_start+0xffffffe4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10201010:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
10201014:	08400014 	ori	at,at,0
    jmp r1
10201018:	0800683a 	jmp	at
1020101c:	00000000 	call	10000000 <__alt_data_end>

Disassembly of section .text:

08000000 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 8000000:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 8000004:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 8000008:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 800000c:	00bffd16 	blt	zero,r2,8000004 <__flash_exceptions_start+0xf7dfefe4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000010:	06c40034 	movhi	sp,4096
    ori sp, sp, %lo(__alt_stack_pointer)
 8000014:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8000018:	06820074 	movhi	gp,2049
    ori gp, gp, %lo(_gp)
 800001c:	d69da914 	ori	gp,gp,30372
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000020:	00820074 	movhi	r2,2049
    ori r2, r2, %lo(__bss_start)
 8000024:	10808d14 	ori	r2,r2,564

    movhi r3, %hi(__bss_end)
 8000028:	00c200f4 	movhi	r3,2051
    ori r3, r3, %lo(__bss_end)
 800002c:	18c0a314 	ori	r3,r3,652

    beq r2, r3, 1f
 8000030:	10c00326 	beq	r2,r3,8000040 <_start+0x40>

0:
    stw zero, (r2)
 8000034:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8000038:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 800003c:	10fffd36 	bltu	r2,r3,8000034 <__flash_exceptions_start+0xf7dff014>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000040:	800d1400 	call	800d140 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000044:	800d2e40 	call	800d2e4 <alt_main>

08000048 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8000048:	003fff06 	br	8000048 <__flash_exceptions_start+0xf7dff028>

0800004c <getGbMem>:
  	volatile uchar * line = (uchar *)0x0;
	short gbDisplay[65536];

int n;
uchar getGbMem(unsigned short addr)
{
 800004c:	defffe04 	addi	sp,sp,-8
 8000050:	df000115 	stw	fp,4(sp)
 8000054:	df000104 	addi	fp,sp,4
 8000058:	2005883a 	mov	r2,r4
 800005c:	e0bfff0d 	sth	r2,-4(fp)
	int i;
	IOWR_ALTERA_AVALON_PIO_DATA(0x10203020, addr);
 8000060:	e0ffff0b 	ldhu	r3,-4(fp)
 8000064:	00840834 	movhi	r2,4128
 8000068:	108c0804 	addi	r2,r2,12320
 800006c:	10c00035 	stwio	r3,0(r2)
	return (uchar) IORD_ALTERA_AVALON_PIO_DATA(0x10203030);
 8000070:	00840834 	movhi	r2,4128
 8000074:	108c0c04 	addi	r2,r2,12336
 8000078:	10800037 	ldwio	r2,0(r2)

}
 800007c:	e037883a 	mov	sp,fp
 8000080:	df000017 	ldw	fp,0(sp)
 8000084:	dec00104 	addi	sp,sp,4
 8000088:	f800283a 	ret

0800008c <main>:
int main(void)
{
 800008c:	defffc04 	addi	sp,sp,-16
 8000090:	dfc00315 	stw	ra,12(sp)
 8000094:	df000215 	stw	fp,8(sp)
 8000098:	df000204 	addi	fp,sp,8
	int i,j;
	printf("STARTEd");
 800009c:	01020074 	movhi	r4,2049
 80000a0:	213a1c04 	addi	r4,r4,-6032
 80000a4:	8000a080 	call	8000a08 <printf>
	for(i=0;i<320;i++)
 80000a8:	e03ffe15 	stw	zero,-8(fp)
 80000ac:	00001306 	br	80000fc <main+0x70>
			for(j=0;j<240;j++)
 80000b0:	e03fff15 	stw	zero,-4(fp)
 80000b4:	00000b06 	br	80000e4 <main+0x58>
				pixel_buffer[i+j*320]=RGB2COLOR(0x00,0x00,0x00);
 80000b8:	d0e00017 	ldw	r3,-32768(gp)
 80000bc:	e0bfff17 	ldw	r2,-4(fp)
 80000c0:	11005024 	muli	r4,r2,320
 80000c4:	e0bffe17 	ldw	r2,-8(fp)
 80000c8:	2085883a 	add	r2,r4,r2
 80000cc:	1085883a 	add	r2,r2,r2
 80000d0:	1885883a 	add	r2,r3,r2
 80000d4:	1000000d 	sth	zero,0(r2)
int main(void)
{
	int i,j;
	printf("STARTEd");
	for(i=0;i<320;i++)
			for(j=0;j<240;j++)
 80000d8:	e0bfff17 	ldw	r2,-4(fp)
 80000dc:	10800044 	addi	r2,r2,1
 80000e0:	e0bfff15 	stw	r2,-4(fp)
 80000e4:	e0bfff17 	ldw	r2,-4(fp)
 80000e8:	10803c10 	cmplti	r2,r2,240
 80000ec:	103ff21e 	bne	r2,zero,80000b8 <__flash_exceptions_start+0xf7dff098>
}
int main(void)
{
	int i,j;
	printf("STARTEd");
	for(i=0;i<320;i++)
 80000f0:	e0bffe17 	ldw	r2,-8(fp)
 80000f4:	10800044 	addi	r2,r2,1
 80000f8:	e0bffe15 	stw	r2,-8(fp)
 80000fc:	e0bffe17 	ldw	r2,-8(fp)
 8000100:	10805010 	cmplti	r2,r2,320
 8000104:	103fea1e 	bne	r2,zero,80000b0 <__flash_exceptions_start+0xf7dff090>

		int ad;
	//	scanf("%x",&ad);
		//uchar val = getGbMem((unsigned short)ad);
		//printf("\naddr: %x \nval:%x\n",(unsigned short)ad,val);
		build_gb_screen();
 8000108:	80002b40 	call	80002b4 <build_gb_screen>

		for(i=0;i<160;i++)
 800010c:	e03ffe15 	stw	zero,-8(fp)
 8000110:	00001c06 	br	8000184 <main+0xf8>
			for(j=0;j<144;j++)
 8000114:	e03fff15 	stw	zero,-4(fp)
 8000118:	00001406 	br	800016c <main+0xe0>
				pixel_buffer[i+j*320]=gbDisplay[i+j*256];
 800011c:	d0e00017 	ldw	r3,-32768(gp)
 8000120:	e0bfff17 	ldw	r2,-4(fp)
 8000124:	11005024 	muli	r4,r2,320
 8000128:	e0bffe17 	ldw	r2,-8(fp)
 800012c:	2085883a 	add	r2,r4,r2
 8000130:	1085883a 	add	r2,r2,r2
 8000134:	1889883a 	add	r4,r3,r2
 8000138:	e0bfff17 	ldw	r2,-4(fp)
 800013c:	1006923a 	slli	r3,r2,8
 8000140:	e0bffe17 	ldw	r2,-8(fp)
 8000144:	1887883a 	add	r3,r3,r2
 8000148:	00820074 	movhi	r2,2049
 800014c:	1080a304 	addi	r2,r2,652
 8000150:	18c7883a 	add	r3,r3,r3
 8000154:	10c5883a 	add	r2,r2,r3
 8000158:	1080000b 	ldhu	r2,0(r2)
 800015c:	2080000d 	sth	r2,0(r4)
		//uchar val = getGbMem((unsigned short)ad);
		//printf("\naddr: %x \nval:%x\n",(unsigned short)ad,val);
		build_gb_screen();

		for(i=0;i<160;i++)
			for(j=0;j<144;j++)
 8000160:	e0bfff17 	ldw	r2,-4(fp)
 8000164:	10800044 	addi	r2,r2,1
 8000168:	e0bfff15 	stw	r2,-4(fp)
 800016c:	e0bfff17 	ldw	r2,-4(fp)
 8000170:	10802410 	cmplti	r2,r2,144
 8000174:	103fe91e 	bne	r2,zero,800011c <__flash_exceptions_start+0xf7dff0fc>
	//	scanf("%x",&ad);
		//uchar val = getGbMem((unsigned short)ad);
		//printf("\naddr: %x \nval:%x\n",(unsigned short)ad,val);
		build_gb_screen();

		for(i=0;i<160;i++)
 8000178:	e0bffe17 	ldw	r2,-8(fp)
 800017c:	10800044 	addi	r2,r2,1
 8000180:	e0bffe15 	stw	r2,-8(fp)
 8000184:	e0bffe17 	ldw	r2,-8(fp)
 8000188:	10802810 	cmplti	r2,r2,160
 800018c:	103fe11e 	bne	r2,zero,8000114 <__flash_exceptions_start+0xf7dff0f4>
			for(j=0;j<144;j++)
				pixel_buffer[i+j*320]=gbDisplay[i+j*256];
	}
 8000190:	003fdd06 	br	8000108 <__flash_exceptions_start+0xf7dff0e8>

08000194 <getColorBG>:
}
short getColorBG(uchar gbidx)
{
 8000194:	defffe04 	addi	sp,sp,-8
 8000198:	df000115 	stw	fp,4(sp)
 800019c:	df000104 	addi	fp,sp,4
 80001a0:	2005883a 	mov	r2,r4
 80001a4:	e0bfff05 	stb	r2,-4(fp)
	switch(gbidx)
 80001a8:	e0bfff03 	ldbu	r2,-4(fp)
 80001ac:	10c00060 	cmpeqi	r3,r2,1
 80001b0:	18000b1e 	bne	r3,zero,80001e0 <getColorBG+0x4c>
 80001b4:	10c00088 	cmpgei	r3,r2,2
 80001b8:	1800021e 	bne	r3,zero,80001c4 <getColorBG+0x30>
 80001bc:	10000626 	beq	r2,zero,80001d8 <getColorBG+0x44>
 80001c0:	00000d06 	br	80001f8 <getColorBG+0x64>
 80001c4:	10c000a0 	cmpeqi	r3,r2,2
 80001c8:	1800071e 	bne	r3,zero,80001e8 <getColorBG+0x54>
 80001cc:	108000e0 	cmpeqi	r2,r2,3
 80001d0:	1000071e 	bne	r2,zero,80001f0 <getColorBG+0x5c>
 80001d4:	00000806 	br	80001f8 <getColorBG+0x64>
	{
	case 0x00:
		return RGB2COLOR(0xFF,0xff,0xff);
 80001d8:	00bfffc4 	movi	r2,-1
 80001dc:	00000606 	br	80001f8 <getColorBG+0x64>


	break;
	case 0x01:
		return RGB2COLOR(100,100,100);
 80001e0:	0098cb04 	movi	r2,25388
 80001e4:	00000406 	br	80001f8 <getColorBG+0x64>
	break;
	case 0x02:
		return RGB2COLOR(50,50,50);
 80001e8:	008c6184 	movi	r2,12678
 80001ec:	00000206 	br	80001f8 <getColorBG+0x64>
	break;
	case 0x03:
		return RGB2COLOR(0,0,0);
 80001f0:	0005883a 	mov	r2,zero
 80001f4:	00000006 	br	80001f8 <getColorBG+0x64>

	break;
	}
}
 80001f8:	e037883a 	mov	sp,fp
 80001fc:	df000017 	ldw	fp,0(sp)
 8000200:	dec00104 	addi	sp,sp,4
 8000204:	f800283a 	ret

08000208 <getColorSprite>:
short getColorSprite(uchar gbid,uchar x,uchar y,uchar pallet_num)
{
 8000208:	defffb04 	addi	sp,sp,-20
 800020c:	df000415 	stw	fp,16(sp)
 8000210:	df000404 	addi	fp,sp,16
 8000214:	2011883a 	mov	r8,r4
 8000218:	2809883a 	mov	r4,r5
 800021c:	3007883a 	mov	r3,r6
 8000220:	3805883a 	mov	r2,r7
 8000224:	e23ffc05 	stb	r8,-16(fp)
 8000228:	e13ffd05 	stb	r4,-12(fp)
 800022c:	e0fffe05 	stb	r3,-8(fp)
 8000230:	e0bfff05 	stb	r2,-4(fp)
	switch(gbid)
 8000234:	e0bffc03 	ldbu	r2,-16(fp)
 8000238:	10c00060 	cmpeqi	r3,r2,1
 800023c:	1800131e 	bne	r3,zero,800028c <getColorSprite+0x84>
 8000240:	10c00088 	cmpgei	r3,r2,2
 8000244:	1800021e 	bne	r3,zero,8000250 <getColorSprite+0x48>
 8000248:	10000626 	beq	r2,zero,8000264 <getColorSprite+0x5c>
 800024c:	00001506 	br	80002a4 <getColorSprite+0x9c>
 8000250:	10c000a0 	cmpeqi	r3,r2,2
 8000254:	18000f1e 	bne	r3,zero,8000294 <getColorSprite+0x8c>
 8000258:	108000e0 	cmpeqi	r2,r2,3
 800025c:	10000f1e 	bne	r2,zero,800029c <getColorSprite+0x94>
 8000260:	00001006 	br	80002a4 <getColorSprite+0x9c>
	{
	case 0:
		return gbDisplay[x+y*256];
 8000264:	e0fffd03 	ldbu	r3,-12(fp)
 8000268:	e0bffe03 	ldbu	r2,-8(fp)
 800026c:	1004923a 	slli	r2,r2,8
 8000270:	1887883a 	add	r3,r3,r2
 8000274:	00820074 	movhi	r2,2049
 8000278:	1080a304 	addi	r2,r2,652
 800027c:	18c7883a 	add	r3,r3,r3
 8000280:	10c5883a 	add	r2,r2,r3
 8000284:	1080000b 	ldhu	r2,0(r2)
 8000288:	00000606 	br	80002a4 <getColorSprite+0x9c>

	break;
	case 1:
		return RGB2COLOR(200,200,200);
 800028c:	00b39644 	movi	r2,-12711
 8000290:	00000406 	br	80002a4 <getColorSprite+0x9c>
	break;
	case 2:
		return RGB2COLOR(70,70,70);
 8000294:	00908a04 	movi	r2,16936
 8000298:	00000206 	br	80002a4 <getColorSprite+0x9c>
	break;
	case 3:
		return RGB2COLOR(0,0,0);
 800029c:	0005883a 	mov	r2,zero
 80002a0:	00000006 	br	80002a4 <getColorSprite+0x9c>
	break;
	}
}
 80002a4:	e037883a 	mov	sp,fp
 80002a8:	df000017 	ldw	fp,0(sp)
 80002ac:	dec00104 	addi	sp,sp,4
 80002b0:	f800283a 	ret

080002b4 <build_gb_screen>:
void build_gb_screen()
{
 80002b4:	deffec04 	addi	sp,sp,-80
 80002b8:	dfc01315 	stw	ra,76(sp)
 80002bc:	df001215 	stw	fp,72(sp)
 80002c0:	dc001115 	stw	r16,68(sp)
 80002c4:	df001204 	addi	fp,sp,72
	int i,j,k,l;
	unsigned short tilePtr;
	tilePtr = 0x8800;
 80002c8:	00a20004 	movi	r2,-30720
 80002cc:	e0bff40d 	sth	r2,-48(fp)
	unsigned short bgTileMap = 0x9800;
 80002d0:	00a60004 	movi	r2,-26624
 80002d4:	e0bff20d 	sth	r2,-56(fp)
	unsigned short windowTileMap = 0x9800;
 80002d8:	00a60004 	movi	r2,-26624
 80002dc:	e0bff48d 	sth	r2,-46(fp)
	unsigned short bgWindowTileData = 0x8800;
 80002e0:	00a20004 	movi	r2,-30720
 80002e4:	e0bff28d 	sth	r2,-54(fp)
	uchar LCDC = getGbMem(0xff40);
 80002e8:	013fd014 	movui	r4,65344
 80002ec:	800004c0 	call	800004c <getGbMem>
 80002f0:	e0bff505 	stb	r2,-44(fp)
	uchar dispBackground = LCDC & 0x01; //b0
 80002f4:	e0bff503 	ldbu	r2,-44(fp)
 80002f8:	1080004c 	andi	r2,r2,1
 80002fc:	e0bff545 	stb	r2,-43(fp)
	uchar dispSprite = LCDC & 0x02;  //b1
 8000300:	e0bff503 	ldbu	r2,-44(fp)
 8000304:	1080008c 	andi	r2,r2,2
 8000308:	e0bff585 	stb	r2,-42(fp)
	uchar spriteSize = LCDC &0x04; //b2
 800030c:	e0bff503 	ldbu	r2,-44(fp)
 8000310:	1080010c 	andi	r2,r2,4
 8000314:	e0bff5c5 	stb	r2,-41(fp)
	uchar signedIndex = LCDC & 0x08;
 8000318:	e0bff503 	ldbu	r2,-44(fp)
 800031c:	1080020c 	andi	r2,r2,8
 8000320:	e0bff605 	stb	r2,-40(fp)
	if(LCDC & 0x08)
 8000324:	e0bff503 	ldbu	r2,-44(fp)
 8000328:	1080020c 	andi	r2,r2,8
 800032c:	10000226 	beq	r2,zero,8000338 <build_gb_screen+0x84>
		bgTileMap = 0x9800;
 8000330:	00a60004 	movi	r2,-26624
 8000334:	e0bff20d 	sth	r2,-56(fp)
	if(LCDC & 0x10)
 8000338:	e0bff503 	ldbu	r2,-44(fp)
 800033c:	1080040c 	andi	r2,r2,16
 8000340:	10000226 	beq	r2,zero,800034c <build_gb_screen+0x98>
		bgWindowTileData = 0x8000;
 8000344:	00a00004 	movi	r2,-32768
 8000348:	e0bff28d 	sth	r2,-54(fp)
	uchar dispWindow = LCDC &0x20;
 800034c:	e0bff503 	ldbu	r2,-44(fp)
 8000350:	1080080c 	andi	r2,r2,32
 8000354:	e0bff645 	stb	r2,-39(fp)
	if(LCDC & 0x40)   //b
 8000358:	e0bff503 	ldbu	r2,-44(fp)
 800035c:	1080100c 	andi	r2,r2,64
 8000360:	10000226 	beq	r2,zero,800036c <build_gb_screen+0xb8>
		windowTileMap = 0x9C00;
 8000364:	00a70004 	movi	r2,-25600
 8000368:	e0bff48d 	sth	r2,-46(fp)
	uchar doLcd = LCDC & 0x80;
 800036c:	e0fff503 	ldbu	r3,-44(fp)
 8000370:	00bfe004 	movi	r2,-128
 8000374:	1884703a 	and	r2,r3,r2
 8000378:	e0bff685 	stb	r2,-38(fp)


		if(dispBackground)
 800037c:	e0bff543 	ldbu	r2,-43(fp)
 8000380:	10008126 	beq	r2,zero,8000588 <build_gb_screen+0x2d4>
		{
			printf("bg\n");
 8000384:	01020074 	movhi	r4,2049
 8000388:	213a1e04 	addi	r4,r4,-6024
 800038c:	8000aec0 	call	8000aec <puts>

			for(i=0;i<32;i++)
 8000390:	e03fee15 	stw	zero,-72(fp)
 8000394:	00007906 	br	800057c <build_gb_screen+0x2c8>
				for(j=0;j<32;j++)
 8000398:	e03fef15 	stw	zero,-68(fp)
 800039c:	00007106 	br	8000564 <build_gb_screen+0x2b0>
				{
					short bgtileoffset;
					if(signedIndex)
 80003a0:	e0bff603 	ldbu	r2,-40(fp)
 80003a4:	10001126 	beq	r2,zero,80003ec <build_gb_screen+0x138>
						bgtileoffset = (char) (getGbMem(bgTileMap+i+32*j))+128;
 80003a8:	e0bfee17 	ldw	r2,-72(fp)
 80003ac:	1007883a 	mov	r3,r2
 80003b0:	e0bff20b 	ldhu	r2,-56(fp)
 80003b4:	1885883a 	add	r2,r3,r2
 80003b8:	1007883a 	mov	r3,r2
 80003bc:	e0bfef17 	ldw	r2,-68(fp)
 80003c0:	1004917a 	slli	r2,r2,5
 80003c4:	1885883a 	add	r2,r3,r2
 80003c8:	10bfffcc 	andi	r2,r2,65535
 80003cc:	1009883a 	mov	r4,r2
 80003d0:	800004c0 	call	800004c <getGbMem>
 80003d4:	10803fcc 	andi	r2,r2,255
 80003d8:	1080201c 	xori	r2,r2,128
 80003dc:	10bfe004 	addi	r2,r2,-128
 80003e0:	10802004 	addi	r2,r2,128
 80003e4:	e0bff30d 	sth	r2,-52(fp)
 80003e8:	00000d06 	br	8000420 <build_gb_screen+0x16c>
					else
						bgtileoffset = (getGbMem(bgTileMap+i+32*j));
 80003ec:	e0bfee17 	ldw	r2,-72(fp)
 80003f0:	1007883a 	mov	r3,r2
 80003f4:	e0bff20b 	ldhu	r2,-56(fp)
 80003f8:	1885883a 	add	r2,r3,r2
 80003fc:	1007883a 	mov	r3,r2
 8000400:	e0bfef17 	ldw	r2,-68(fp)
 8000404:	1004917a 	slli	r2,r2,5
 8000408:	1885883a 	add	r2,r3,r2
 800040c:	10bfffcc 	andi	r2,r2,65535
 8000410:	1009883a 	mov	r4,r2
 8000414:	800004c0 	call	800004c <getGbMem>
 8000418:	10803fcc 	andi	r2,r2,255
 800041c:	e0bff30d 	sth	r2,-52(fp)
				//	printf("%d X %d : %x\n",i,j,bgTileMap+bgtileoffset);
					int baseOffset=bgWindowTileData+bgtileoffset*16;
 8000420:	e0fff28b 	ldhu	r3,-54(fp)
 8000424:	e0bff30f 	ldh	r2,-52(fp)
 8000428:	1004913a 	slli	r2,r2,4
 800042c:	1885883a 	add	r2,r3,r2
 8000430:	e0bff715 	stw	r2,-36(fp)
					for(k=0;k<8;k++)
 8000434:	e03ff015 	stw	zero,-64(fp)
 8000438:	00004406 	br	800054c <build_gb_screen+0x298>
						for(l=0;l<8;l++)
 800043c:	e03ff115 	stw	zero,-60(fp)
 8000440:	00003c06 	br	8000534 <build_gb_screen+0x280>
						{
							int shiftidx=7-k;
 8000444:	00c001c4 	movi	r3,7
 8000448:	e0bff017 	ldw	r2,-64(fp)
 800044c:	1885c83a 	sub	r2,r3,r2
 8000450:	e0bff815 	stw	r2,-32(fp)

							uchar lb = ((getGbMem(baseOffset+l*2))>>shiftidx)&0x01;
 8000454:	e0bff117 	ldw	r2,-60(fp)
 8000458:	1085883a 	add	r2,r2,r2
 800045c:	1007883a 	mov	r3,r2
 8000460:	e0bff717 	ldw	r2,-36(fp)
 8000464:	1885883a 	add	r2,r3,r2
 8000468:	10bfffcc 	andi	r2,r2,65535
 800046c:	1009883a 	mov	r4,r2
 8000470:	800004c0 	call	800004c <getGbMem>
 8000474:	10c03fcc 	andi	r3,r2,255
 8000478:	e0bff817 	ldw	r2,-32(fp)
 800047c:	1885d83a 	sra	r2,r3,r2
 8000480:	1080004c 	andi	r2,r2,1
 8000484:	e0bff905 	stb	r2,-28(fp)
							uchar hb = ((getGbMem(baseOffset+l*2+1))>>shiftidx)&0x01;
 8000488:	e0bff117 	ldw	r2,-60(fp)
 800048c:	1085883a 	add	r2,r2,r2
 8000490:	1007883a 	mov	r3,r2
 8000494:	e0bff717 	ldw	r2,-36(fp)
 8000498:	1885883a 	add	r2,r3,r2
 800049c:	10800044 	addi	r2,r2,1
 80004a0:	10bfffcc 	andi	r2,r2,65535
 80004a4:	1009883a 	mov	r4,r2
 80004a8:	800004c0 	call	800004c <getGbMem>
 80004ac:	10c03fcc 	andi	r3,r2,255
 80004b0:	e0bff817 	ldw	r2,-32(fp)
 80004b4:	1885d83a 	sra	r2,r3,r2
 80004b8:	1080004c 	andi	r2,r2,1
 80004bc:	e0bff945 	stb	r2,-27(fp)
							uchar thecolor = ((hb<<1)&0x02) | lb;
 80004c0:	e0bff943 	ldbu	r2,-27(fp)
 80004c4:	1085883a 	add	r2,r2,r2
 80004c8:	1080008c 	andi	r2,r2,2
 80004cc:	1007883a 	mov	r3,r2
 80004d0:	e0bff903 	ldbu	r2,-28(fp)
 80004d4:	1884b03a 	or	r2,r3,r2
 80004d8:	e0bff985 	stb	r2,-26(fp)

						//	printf("\n%x\n\n",getGbMem(baseOffset));

							gbDisplay[(i*8+k)+(l+j*8)*256] = getColorBG(thecolor);
 80004dc:	e0bfee17 	ldw	r2,-72(fp)
 80004e0:	100690fa 	slli	r3,r2,3
 80004e4:	e0bff017 	ldw	r2,-64(fp)
 80004e8:	1887883a 	add	r3,r3,r2
 80004ec:	e0bfef17 	ldw	r2,-68(fp)
 80004f0:	100890fa 	slli	r4,r2,3
 80004f4:	e0bff117 	ldw	r2,-60(fp)
 80004f8:	2085883a 	add	r2,r4,r2
 80004fc:	1004923a 	slli	r2,r2,8
 8000500:	18a1883a 	add	r16,r3,r2
 8000504:	e0bff983 	ldbu	r2,-26(fp)
 8000508:	1009883a 	mov	r4,r2
 800050c:	80001940 	call	8000194 <getColorBG>
 8000510:	1009883a 	mov	r4,r2
 8000514:	00820074 	movhi	r2,2049
 8000518:	1080a304 	addi	r2,r2,652
 800051c:	8407883a 	add	r3,r16,r16
 8000520:	10c5883a 	add	r2,r2,r3
 8000524:	1100000d 	sth	r4,0(r2)
					else
						bgtileoffset = (getGbMem(bgTileMap+i+32*j));
				//	printf("%d X %d : %x\n",i,j,bgTileMap+bgtileoffset);
					int baseOffset=bgWindowTileData+bgtileoffset*16;
					for(k=0;k<8;k++)
						for(l=0;l<8;l++)
 8000528:	e0bff117 	ldw	r2,-60(fp)
 800052c:	10800044 	addi	r2,r2,1
 8000530:	e0bff115 	stw	r2,-60(fp)
 8000534:	e0bff117 	ldw	r2,-60(fp)
 8000538:	10800210 	cmplti	r2,r2,8
 800053c:	103fc11e 	bne	r2,zero,8000444 <__flash_exceptions_start+0xf7dff424>
						bgtileoffset = (char) (getGbMem(bgTileMap+i+32*j))+128;
					else
						bgtileoffset = (getGbMem(bgTileMap+i+32*j));
				//	printf("%d X %d : %x\n",i,j,bgTileMap+bgtileoffset);
					int baseOffset=bgWindowTileData+bgtileoffset*16;
					for(k=0;k<8;k++)
 8000540:	e0bff017 	ldw	r2,-64(fp)
 8000544:	10800044 	addi	r2,r2,1
 8000548:	e0bff015 	stw	r2,-64(fp)
 800054c:	e0bff017 	ldw	r2,-64(fp)
 8000550:	10800210 	cmplti	r2,r2,8
 8000554:	103fb91e 	bne	r2,zero,800043c <__flash_exceptions_start+0xf7dff41c>
		if(dispBackground)
		{
			printf("bg\n");

			for(i=0;i<32;i++)
				for(j=0;j<32;j++)
 8000558:	e0bfef17 	ldw	r2,-68(fp)
 800055c:	10800044 	addi	r2,r2,1
 8000560:	e0bfef15 	stw	r2,-68(fp)
 8000564:	e0bfef17 	ldw	r2,-68(fp)
 8000568:	10800810 	cmplti	r2,r2,32
 800056c:	103f8c1e 	bne	r2,zero,80003a0 <__flash_exceptions_start+0xf7dff380>

		if(dispBackground)
		{
			printf("bg\n");

			for(i=0;i<32;i++)
 8000570:	e0bfee17 	ldw	r2,-72(fp)
 8000574:	10800044 	addi	r2,r2,1
 8000578:	e0bfee15 	stw	r2,-72(fp)
 800057c:	e0bfee17 	ldw	r2,-72(fp)
 8000580:	10800810 	cmplti	r2,r2,32
 8000584:	103f841e 	bne	r2,zero,8000398 <__flash_exceptions_start+0xf7dff378>

							gbDisplay[(i*8+k)+(l+j*8)*256] = getColorBG(thecolor);
					}
				}
		}
		if(dispSprite)
 8000588:	e0bff583 	ldbu	r2,-42(fp)
 800058c:	10010826 	beq	r2,zero,80009b0 <build_gb_screen+0x6fc>
		{
			printf("sprite\n");
 8000590:	01020074 	movhi	r4,2049
 8000594:	213a1f04 	addi	r4,r4,-6020
 8000598:	8000aec0 	call	8000aec <puts>

			for(i=0;i<40;i++)
 800059c:	e03fee15 	stw	zero,-72(fp)
 80005a0:	00010006 	br	80009a4 <build_gb_screen+0x6f0>
			{
				uchar x,y,tileNum,attributes,priority,x_flip,y_flip,pallet_num;
				short spriteBase = 0x8000;
 80005a4:	00a00004 	movi	r2,-32768
 80005a8:	e0bffa0d 	sth	r2,-24(fp)
				 x = getGbMem(0xFE00+4*i);
 80005ac:	e0bfee17 	ldw	r2,-72(fp)
 80005b0:	108fe004 	addi	r2,r2,16256
 80005b4:	1085883a 	add	r2,r2,r2
 80005b8:	1085883a 	add	r2,r2,r2
 80005bc:	10bfffcc 	andi	r2,r2,65535
 80005c0:	1009883a 	mov	r4,r2
 80005c4:	800004c0 	call	800004c <getGbMem>
 80005c8:	e0bffa85 	stb	r2,-22(fp)
				 y = getGbMem(0xFE00+4*i+1);
 80005cc:	e0bfee17 	ldw	r2,-72(fp)
 80005d0:	108fe004 	addi	r2,r2,16256
 80005d4:	1085883a 	add	r2,r2,r2
 80005d8:	1085883a 	add	r2,r2,r2
 80005dc:	10800044 	addi	r2,r2,1
 80005e0:	10bfffcc 	andi	r2,r2,65535
 80005e4:	1009883a 	mov	r4,r2
 80005e8:	800004c0 	call	800004c <getGbMem>
 80005ec:	e0bffac5 	stb	r2,-21(fp)
				 if((x+y)==0)  //sprite is hidden
 80005f0:	e0fffa83 	ldbu	r3,-22(fp)
 80005f4:	e0bffac3 	ldbu	r2,-21(fp)
 80005f8:	1885883a 	add	r2,r3,r2
 80005fc:	1000011e 	bne	r2,zero,8000604 <build_gb_screen+0x350>
					 continue;
 8000600:	0000e506 	br	8000998 <build_gb_screen+0x6e4>
				 x-=8;
 8000604:	e0bffa83 	ldbu	r2,-22(fp)
 8000608:	10bffe04 	addi	r2,r2,-8
 800060c:	e0bffa85 	stb	r2,-22(fp)
				 y-=16;
 8000610:	e0bffac3 	ldbu	r2,-21(fp)
 8000614:	10bffc04 	addi	r2,r2,-16
 8000618:	e0bffac5 	stb	r2,-21(fp)
				 if(getGbMem(0xFE00+4*i+2))
 800061c:	e0bfee17 	ldw	r2,-72(fp)
 8000620:	108fe004 	addi	r2,r2,16256
 8000624:	1085883a 	add	r2,r2,r2
 8000628:	1085883a 	add	r2,r2,r2
 800062c:	10800084 	addi	r2,r2,2
 8000630:	10bfffcc 	andi	r2,r2,65535
 8000634:	1009883a 	mov	r4,r2
 8000638:	800004c0 	call	800004c <getGbMem>
 800063c:	10803fcc 	andi	r2,r2,255
 8000640:	10000d26 	beq	r2,zero,8000678 <build_gb_screen+0x3c4>
					 tileNum = getGbMem(0xFE00+4*i+2) & 0xFFFE;
 8000644:	e0bfee17 	ldw	r2,-72(fp)
 8000648:	108fe004 	addi	r2,r2,16256
 800064c:	1085883a 	add	r2,r2,r2
 8000650:	1085883a 	add	r2,r2,r2
 8000654:	10800084 	addi	r2,r2,2
 8000658:	10bfffcc 	andi	r2,r2,65535
 800065c:	1009883a 	mov	r4,r2
 8000660:	800004c0 	call	800004c <getGbMem>
 8000664:	1007883a 	mov	r3,r2
 8000668:	00bfff84 	movi	r2,-2
 800066c:	1884703a 	and	r2,r3,r2
 8000670:	e0bff385 	stb	r2,-50(fp)
 8000674:	00000906 	br	800069c <build_gb_screen+0x3e8>
				 else
					 tileNum = getGbMem(0xFE00+4*i+2);
 8000678:	e0bfee17 	ldw	r2,-72(fp)
 800067c:	108fe004 	addi	r2,r2,16256
 8000680:	1085883a 	add	r2,r2,r2
 8000684:	1085883a 	add	r2,r2,r2
 8000688:	10800084 	addi	r2,r2,2
 800068c:	10bfffcc 	andi	r2,r2,65535
 8000690:	1009883a 	mov	r4,r2
 8000694:	800004c0 	call	800004c <getGbMem>
 8000698:	e0bff385 	stb	r2,-50(fp)

				 attributes = getGbMem(0xFE00+4*i+3);
 800069c:	e0bfee17 	ldw	r2,-72(fp)
 80006a0:	108fe004 	addi	r2,r2,16256
 80006a4:	1085883a 	add	r2,r2,r2
 80006a8:	1085883a 	add	r2,r2,r2
 80006ac:	108000c4 	addi	r2,r2,3
 80006b0:	10bfffcc 	andi	r2,r2,65535
 80006b4:	1009883a 	mov	r4,r2
 80006b8:	800004c0 	call	800004c <getGbMem>
 80006bc:	e0bffb05 	stb	r2,-20(fp)

				 priority = attributes & 0x80;
 80006c0:	e0fffb03 	ldbu	r3,-20(fp)
 80006c4:	00bfe004 	movi	r2,-128
 80006c8:	1884703a 	and	r2,r3,r2
 80006cc:	e0bffb45 	stb	r2,-19(fp)
				 y_flip = attributes & 0x40;
 80006d0:	e0bffb03 	ldbu	r2,-20(fp)
 80006d4:	1080100c 	andi	r2,r2,64
 80006d8:	e0bffb85 	stb	r2,-18(fp)
				 x_flip = attributes & 0x20;
 80006dc:	e0bffb03 	ldbu	r2,-20(fp)
 80006e0:	1080080c 	andi	r2,r2,32
 80006e4:	e0bffbc5 	stb	r2,-17(fp)
				 pallet_num = attributes &0x10;
 80006e8:	e0bffb03 	ldbu	r2,-20(fp)
 80006ec:	1080040c 	andi	r2,r2,16
 80006f0:	e0bffc05 	stb	r2,-16(fp)
				 short sprite_base = spriteBase + tileNum*16;
 80006f4:	e0bff383 	ldbu	r2,-50(fp)
 80006f8:	1004913a 	slli	r2,r2,4
 80006fc:	1007883a 	mov	r3,r2
 8000700:	e0bffa0b 	ldhu	r2,-24(fp)
 8000704:	1885883a 	add	r2,r3,r2
 8000708:	e0bffc8d 	sth	r2,-14(fp)
				 if(spriteSize)
 800070c:	e0bff5c3 	ldbu	r2,-41(fp)
 8000710:	10005426 	beq	r2,zero,8000864 <build_gb_screen+0x5b0>
				 {
					 for(j=0;j<8;j++)
 8000714:	e03fef15 	stw	zero,-68(fp)
 8000718:	00004e06 	br	8000854 <build_gb_screen+0x5a0>
							 for(k=0;k<8;k++)
 800071c:	e03ff015 	stw	zero,-64(fp)
 8000720:	00004606 	br	800083c <build_gb_screen+0x588>
								 {
									int shiftidx=7-k;
 8000724:	00c001c4 	movi	r3,7
 8000728:	e0bff017 	ldw	r2,-64(fp)
 800072c:	1885c83a 	sub	r2,r3,r2
 8000730:	e0bffd15 	stw	r2,-12(fp)

						uchar lb = ((getGbMem(spriteBase+l*2))>>shiftidx)&0x01;
 8000734:	e0bff117 	ldw	r2,-60(fp)
 8000738:	1085883a 	add	r2,r2,r2
 800073c:	1007883a 	mov	r3,r2
 8000740:	e0bffa0b 	ldhu	r2,-24(fp)
 8000744:	1885883a 	add	r2,r3,r2
 8000748:	10bfffcc 	andi	r2,r2,65535
 800074c:	1009883a 	mov	r4,r2
 8000750:	800004c0 	call	800004c <getGbMem>
 8000754:	10c03fcc 	andi	r3,r2,255
 8000758:	e0bffd17 	ldw	r2,-12(fp)
 800075c:	1885d83a 	sra	r2,r3,r2
 8000760:	1080004c 	andi	r2,r2,1
 8000764:	e0bffe05 	stb	r2,-8(fp)
						uchar hb = ((getGbMem(spriteBase+l*2+1))>>shiftidx)&0x01;
 8000768:	e0bff117 	ldw	r2,-60(fp)
 800076c:	1085883a 	add	r2,r2,r2
 8000770:	1007883a 	mov	r3,r2
 8000774:	e0bffa0b 	ldhu	r2,-24(fp)
 8000778:	1885883a 	add	r2,r3,r2
 800077c:	10800044 	addi	r2,r2,1
 8000780:	10bfffcc 	andi	r2,r2,65535
 8000784:	1009883a 	mov	r4,r2
 8000788:	800004c0 	call	800004c <getGbMem>
 800078c:	10c03fcc 	andi	r3,r2,255
 8000790:	e0bffd17 	ldw	r2,-12(fp)
 8000794:	1885d83a 	sra	r2,r3,r2
 8000798:	1080004c 	andi	r2,r2,1
 800079c:	e0bffe45 	stb	r2,-7(fp)
						uchar thecolor = ((hb<<1)&0x02) | lb;
 80007a0:	e0bffe43 	ldbu	r2,-7(fp)
 80007a4:	1085883a 	add	r2,r2,r2
 80007a8:	1080008c 	andi	r2,r2,2
 80007ac:	1007883a 	mov	r3,r2
 80007b0:	e0bffe03 	ldbu	r2,-8(fp)
 80007b4:	1884b03a 	or	r2,r3,r2
 80007b8:	e0bffe85 	stb	r2,-6(fp)

						gbDisplay[(x+j)+(y+k)*256] = getColorSprite(thecolor,(x+j),y+k,pallet_num);
 80007bc:	e0fffa83 	ldbu	r3,-22(fp)
 80007c0:	e0bfef17 	ldw	r2,-68(fp)
 80007c4:	1887883a 	add	r3,r3,r2
 80007c8:	e13ffac3 	ldbu	r4,-21(fp)
 80007cc:	e0bff017 	ldw	r2,-64(fp)
 80007d0:	2085883a 	add	r2,r4,r2
 80007d4:	1004923a 	slli	r2,r2,8
 80007d8:	18a1883a 	add	r16,r3,r2
 80007dc:	e13ffe83 	ldbu	r4,-6(fp)
 80007e0:	e0bfef17 	ldw	r2,-68(fp)
 80007e4:	1007883a 	mov	r3,r2
 80007e8:	e0bffa83 	ldbu	r2,-22(fp)
 80007ec:	1885883a 	add	r2,r3,r2
 80007f0:	11403fcc 	andi	r5,r2,255
 80007f4:	e0bff017 	ldw	r2,-64(fp)
 80007f8:	1007883a 	mov	r3,r2
 80007fc:	e0bffac3 	ldbu	r2,-21(fp)
 8000800:	1885883a 	add	r2,r3,r2
 8000804:	10c03fcc 	andi	r3,r2,255
 8000808:	e0bffc03 	ldbu	r2,-16(fp)
 800080c:	180d883a 	mov	r6,r3
 8000810:	100f883a 	mov	r7,r2
 8000814:	80002080 	call	8000208 <getColorSprite>
 8000818:	1009883a 	mov	r4,r2
 800081c:	00820074 	movhi	r2,2049
 8000820:	1080a304 	addi	r2,r2,652
 8000824:	8407883a 	add	r3,r16,r16
 8000828:	10c5883a 	add	r2,r2,r3
 800082c:	1100000d 	sth	r4,0(r2)
				 pallet_num = attributes &0x10;
				 short sprite_base = spriteBase + tileNum*16;
				 if(spriteSize)
				 {
					 for(j=0;j<8;j++)
							 for(k=0;k<8;k++)
 8000830:	e0bff017 	ldw	r2,-64(fp)
 8000834:	10800044 	addi	r2,r2,1
 8000838:	e0bff015 	stw	r2,-64(fp)
 800083c:	e0bff017 	ldw	r2,-64(fp)
 8000840:	10800210 	cmplti	r2,r2,8
 8000844:	103fb71e 	bne	r2,zero,8000724 <__flash_exceptions_start+0xf7dff704>
				 x_flip = attributes & 0x20;
				 pallet_num = attributes &0x10;
				 short sprite_base = spriteBase + tileNum*16;
				 if(spriteSize)
				 {
					 for(j=0;j<8;j++)
 8000848:	e0bfef17 	ldw	r2,-68(fp)
 800084c:	10800044 	addi	r2,r2,1
 8000850:	e0bfef15 	stw	r2,-68(fp)
 8000854:	e0bfef17 	ldw	r2,-68(fp)
 8000858:	10800210 	cmplti	r2,r2,8
 800085c:	103faf1e 	bne	r2,zero,800071c <__flash_exceptions_start+0xf7dff6fc>
 8000860:	00004d06 	br	8000998 <build_gb_screen+0x6e4>
						gbDisplay[(x+j)+(y+k)*256] = getColorSprite(thecolor,(x+j),y+k,pallet_num);
											 }
				 }
				 else
				 {
					 for(j=0;j<8;j++)
 8000864:	e03fef15 	stw	zero,-68(fp)
 8000868:	00004806 	br	800098c <build_gb_screen+0x6d8>
						 for(k=0;k<8;k++)
 800086c:	e03ff015 	stw	zero,-64(fp)
 8000870:	00004006 	br	8000974 <build_gb_screen+0x6c0>
						 {

							 gbDisplay[(x+j)+(y+k)*256] = getColorSprite(((getGbMem( sprite_base + (k+8*l)/4) >> (6-((k+8*l)%4)*2))&0x03),(x+j),y+k,pallet_num);
 8000874:	e0fffa83 	ldbu	r3,-22(fp)
 8000878:	e0bfef17 	ldw	r2,-68(fp)
 800087c:	1887883a 	add	r3,r3,r2
 8000880:	e13ffac3 	ldbu	r4,-21(fp)
 8000884:	e0bff017 	ldw	r2,-64(fp)
 8000888:	2085883a 	add	r2,r4,r2
 800088c:	1004923a 	slli	r2,r2,8
 8000890:	18a1883a 	add	r16,r3,r2
 8000894:	e0bff117 	ldw	r2,-60(fp)
 8000898:	100690fa 	slli	r3,r2,3
 800089c:	e0bff017 	ldw	r2,-64(fp)
 80008a0:	1885883a 	add	r2,r3,r2
 80008a4:	1000010e 	bge	r2,zero,80008ac <build_gb_screen+0x5f8>
 80008a8:	108000c4 	addi	r2,r2,3
 80008ac:	1005d0ba 	srai	r2,r2,2
 80008b0:	1007883a 	mov	r3,r2
 80008b4:	e0bffc8b 	ldhu	r2,-14(fp)
 80008b8:	1885883a 	add	r2,r3,r2
 80008bc:	10bfffcc 	andi	r2,r2,65535
 80008c0:	1009883a 	mov	r4,r2
 80008c4:	800004c0 	call	800004c <getGbMem>
 80008c8:	10c03fcc 	andi	r3,r2,255
 80008cc:	e0bff117 	ldw	r2,-60(fp)
 80008d0:	100890fa 	slli	r4,r2,3
 80008d4:	e0bff017 	ldw	r2,-64(fp)
 80008d8:	2089883a 	add	r4,r4,r2
 80008dc:	00a00034 	movhi	r2,32768
 80008e0:	108000c4 	addi	r2,r2,3
 80008e4:	2084703a 	and	r2,r4,r2
 80008e8:	1000040e 	bge	r2,zero,80008fc <build_gb_screen+0x648>
 80008ec:	10bfffc4 	addi	r2,r2,-1
 80008f0:	013fff04 	movi	r4,-4
 80008f4:	1104b03a 	or	r2,r2,r4
 80008f8:	10800044 	addi	r2,r2,1
 80008fc:	1009883a 	mov	r4,r2
 8000900:	008000c4 	movi	r2,3
 8000904:	1105c83a 	sub	r2,r2,r4
 8000908:	1085883a 	add	r2,r2,r2
 800090c:	1885d83a 	sra	r2,r3,r2
 8000910:	10803fcc 	andi	r2,r2,255
 8000914:	110000cc 	andi	r4,r2,3
 8000918:	e0bfef17 	ldw	r2,-68(fp)
 800091c:	1007883a 	mov	r3,r2
 8000920:	e0bffa83 	ldbu	r2,-22(fp)
 8000924:	1885883a 	add	r2,r3,r2
 8000928:	11403fcc 	andi	r5,r2,255
 800092c:	e0bff017 	ldw	r2,-64(fp)
 8000930:	1007883a 	mov	r3,r2
 8000934:	e0bffac3 	ldbu	r2,-21(fp)
 8000938:	1885883a 	add	r2,r3,r2
 800093c:	10c03fcc 	andi	r3,r2,255
 8000940:	e0bffc03 	ldbu	r2,-16(fp)
 8000944:	180d883a 	mov	r6,r3
 8000948:	100f883a 	mov	r7,r2
 800094c:	80002080 	call	8000208 <getColorSprite>
 8000950:	1009883a 	mov	r4,r2
 8000954:	00820074 	movhi	r2,2049
 8000958:	1080a304 	addi	r2,r2,652
 800095c:	8407883a 	add	r3,r16,r16
 8000960:	10c5883a 	add	r2,r2,r3
 8000964:	1100000d 	sth	r4,0(r2)
											 }
				 }
				 else
				 {
					 for(j=0;j<8;j++)
						 for(k=0;k<8;k++)
 8000968:	e0bff017 	ldw	r2,-64(fp)
 800096c:	10800044 	addi	r2,r2,1
 8000970:	e0bff015 	stw	r2,-64(fp)
 8000974:	e0bff017 	ldw	r2,-64(fp)
 8000978:	10800210 	cmplti	r2,r2,8
 800097c:	103fbd1e 	bne	r2,zero,8000874 <__flash_exceptions_start+0xf7dff854>
						gbDisplay[(x+j)+(y+k)*256] = getColorSprite(thecolor,(x+j),y+k,pallet_num);
											 }
				 }
				 else
				 {
					 for(j=0;j<8;j++)
 8000980:	e0bfef17 	ldw	r2,-68(fp)
 8000984:	10800044 	addi	r2,r2,1
 8000988:	e0bfef15 	stw	r2,-68(fp)
 800098c:	e0bfef17 	ldw	r2,-68(fp)
 8000990:	10800210 	cmplti	r2,r2,8
 8000994:	103fb51e 	bne	r2,zero,800086c <__flash_exceptions_start+0xf7dff84c>
		}
		if(dispSprite)
		{
			printf("sprite\n");

			for(i=0;i<40;i++)
 8000998:	e0bfee17 	ldw	r2,-72(fp)
 800099c:	10800044 	addi	r2,r2,1
 80009a0:	e0bfee15 	stw	r2,-72(fp)
 80009a4:	e0bfee17 	ldw	r2,-72(fp)
 80009a8:	10800a10 	cmplti	r2,r2,40
 80009ac:	103efd1e 	bne	r2,zero,80005a4 <__flash_exceptions_start+0xf7dff584>

				 }

			}
		}
		if(dispWindow)
 80009b0:	e0bff643 	ldbu	r2,-39(fp)
 80009b4:	10000326 	beq	r2,zero,80009c4 <build_gb_screen+0x710>
		{
			printf("window\n");
 80009b8:	01020074 	movhi	r4,2049
 80009bc:	213a2104 	addi	r4,r4,-6012
 80009c0:	8000aec0 	call	8000aec <puts>
		}

}
 80009c4:	e6ffff04 	addi	sp,fp,-4
 80009c8:	dfc00217 	ldw	ra,8(sp)
 80009cc:	df000117 	ldw	fp,4(sp)
 80009d0:	dc000017 	ldw	r16,0(sp)
 80009d4:	dec00304 	addi	sp,sp,12
 80009d8:	f800283a 	ret

080009dc <_printf_r>:
 80009dc:	defffd04 	addi	sp,sp,-12
 80009e0:	dfc00015 	stw	ra,0(sp)
 80009e4:	d9800115 	stw	r6,4(sp)
 80009e8:	d9c00215 	stw	r7,8(sp)
 80009ec:	280d883a 	mov	r6,r5
 80009f0:	21400217 	ldw	r5,8(r4)
 80009f4:	d9c00104 	addi	r7,sp,4
 80009f8:	8000b980 	call	8000b98 <___vfprintf_internal_r>
 80009fc:	dfc00017 	ldw	ra,0(sp)
 8000a00:	dec00304 	addi	sp,sp,12
 8000a04:	f800283a 	ret

08000a08 <printf>:
 8000a08:	defffc04 	addi	sp,sp,-16
 8000a0c:	dfc00015 	stw	ra,0(sp)
 8000a10:	d9400115 	stw	r5,4(sp)
 8000a14:	d9800215 	stw	r6,8(sp)
 8000a18:	d9c00315 	stw	r7,12(sp)
 8000a1c:	00820074 	movhi	r2,2049
 8000a20:	10bdb004 	addi	r2,r2,-2368
 8000a24:	10800017 	ldw	r2,0(r2)
 8000a28:	200b883a 	mov	r5,r4
 8000a2c:	d9800104 	addi	r6,sp,4
 8000a30:	11000217 	ldw	r4,8(r2)
 8000a34:	8002ae80 	call	8002ae8 <__vfprintf_internal>
 8000a38:	dfc00017 	ldw	ra,0(sp)
 8000a3c:	dec00404 	addi	sp,sp,16
 8000a40:	f800283a 	ret

08000a44 <_puts_r>:
 8000a44:	defff604 	addi	sp,sp,-40
 8000a48:	dc000715 	stw	r16,28(sp)
 8000a4c:	2021883a 	mov	r16,r4
 8000a50:	2809883a 	mov	r4,r5
 8000a54:	dc400815 	stw	r17,32(sp)
 8000a58:	dfc00915 	stw	ra,36(sp)
 8000a5c:	2823883a 	mov	r17,r5
 8000a60:	8000b000 	call	8000b00 <strlen>
 8000a64:	81400217 	ldw	r5,8(r16)
 8000a68:	11000044 	addi	r4,r2,1
 8000a6c:	d8800115 	stw	r2,4(sp)
 8000a70:	00820074 	movhi	r2,2049
 8000a74:	2980030b 	ldhu	r6,12(r5)
 8000a78:	10ba2304 	addi	r2,r2,-6004
 8000a7c:	d8800215 	stw	r2,8(sp)
 8000a80:	00800044 	movi	r2,1
 8000a84:	d8800315 	stw	r2,12(sp)
 8000a88:	00800084 	movi	r2,2
 8000a8c:	d8800515 	stw	r2,20(sp)
 8000a90:	dc400015 	stw	r17,0(sp)
 8000a94:	d9000615 	stw	r4,24(sp)
 8000a98:	dec00415 	stw	sp,16(sp)
 8000a9c:	3088000c 	andi	r2,r6,8192
 8000aa0:	1000061e 	bne	r2,zero,8000abc <_puts_r+0x78>
 8000aa4:	29001917 	ldw	r4,100(r5)
 8000aa8:	00b7ffc4 	movi	r2,-8193
 8000aac:	31880014 	ori	r6,r6,8192
 8000ab0:	2084703a 	and	r2,r4,r2
 8000ab4:	2980030d 	sth	r6,12(r5)
 8000ab8:	28801915 	stw	r2,100(r5)
 8000abc:	8009883a 	mov	r4,r16
 8000ac0:	d9800404 	addi	r6,sp,16
 8000ac4:	800508c0 	call	800508c <__sfvwrite_r>
 8000ac8:	1000061e 	bne	r2,zero,8000ae4 <_puts_r+0xa0>
 8000acc:	00800284 	movi	r2,10
 8000ad0:	dfc00917 	ldw	ra,36(sp)
 8000ad4:	dc400817 	ldw	r17,32(sp)
 8000ad8:	dc000717 	ldw	r16,28(sp)
 8000adc:	dec00a04 	addi	sp,sp,40
 8000ae0:	f800283a 	ret
 8000ae4:	00bfffc4 	movi	r2,-1
 8000ae8:	003ff906 	br	8000ad0 <__flash_exceptions_start+0xf7dffab0>

08000aec <puts>:
 8000aec:	00820074 	movhi	r2,2049
 8000af0:	10bdb004 	addi	r2,r2,-2368
 8000af4:	200b883a 	mov	r5,r4
 8000af8:	11000017 	ldw	r4,0(r2)
 8000afc:	8000a441 	jmpi	8000a44 <_puts_r>

08000b00 <strlen>:
 8000b00:	208000cc 	andi	r2,r4,3
 8000b04:	10002026 	beq	r2,zero,8000b88 <strlen+0x88>
 8000b08:	20800007 	ldb	r2,0(r4)
 8000b0c:	10002026 	beq	r2,zero,8000b90 <strlen+0x90>
 8000b10:	2005883a 	mov	r2,r4
 8000b14:	00000206 	br	8000b20 <strlen+0x20>
 8000b18:	10c00007 	ldb	r3,0(r2)
 8000b1c:	18001826 	beq	r3,zero,8000b80 <strlen+0x80>
 8000b20:	10800044 	addi	r2,r2,1
 8000b24:	10c000cc 	andi	r3,r2,3
 8000b28:	183ffb1e 	bne	r3,zero,8000b18 <__flash_exceptions_start+0xf7dffaf8>
 8000b2c:	10c00017 	ldw	r3,0(r2)
 8000b30:	01ffbff4 	movhi	r7,65279
 8000b34:	39ffbfc4 	addi	r7,r7,-257
 8000b38:	00ca303a 	nor	r5,zero,r3
 8000b3c:	01a02074 	movhi	r6,32897
 8000b40:	19c7883a 	add	r3,r3,r7
 8000b44:	31a02004 	addi	r6,r6,-32640
 8000b48:	1946703a 	and	r3,r3,r5
 8000b4c:	1986703a 	and	r3,r3,r6
 8000b50:	1800091e 	bne	r3,zero,8000b78 <strlen+0x78>
 8000b54:	10800104 	addi	r2,r2,4
 8000b58:	10c00017 	ldw	r3,0(r2)
 8000b5c:	19cb883a 	add	r5,r3,r7
 8000b60:	00c6303a 	nor	r3,zero,r3
 8000b64:	28c6703a 	and	r3,r5,r3
 8000b68:	1986703a 	and	r3,r3,r6
 8000b6c:	183ff926 	beq	r3,zero,8000b54 <__flash_exceptions_start+0xf7dffb34>
 8000b70:	00000106 	br	8000b78 <strlen+0x78>
 8000b74:	10800044 	addi	r2,r2,1
 8000b78:	10c00007 	ldb	r3,0(r2)
 8000b7c:	183ffd1e 	bne	r3,zero,8000b74 <__flash_exceptions_start+0xf7dffb54>
 8000b80:	1105c83a 	sub	r2,r2,r4
 8000b84:	f800283a 	ret
 8000b88:	2005883a 	mov	r2,r4
 8000b8c:	003fe706 	br	8000b2c <__flash_exceptions_start+0xf7dffb0c>
 8000b90:	0005883a 	mov	r2,zero
 8000b94:	f800283a 	ret

08000b98 <___vfprintf_internal_r>:
 8000b98:	deffb604 	addi	sp,sp,-296
 8000b9c:	dfc04915 	stw	ra,292(sp)
 8000ba0:	ddc04715 	stw	r23,284(sp)
 8000ba4:	dd804615 	stw	r22,280(sp)
 8000ba8:	282f883a 	mov	r23,r5
 8000bac:	202d883a 	mov	r22,r4
 8000bb0:	d9802a15 	stw	r6,168(sp)
 8000bb4:	d9c02d15 	stw	r7,180(sp)
 8000bb8:	df004815 	stw	fp,288(sp)
 8000bbc:	dd404515 	stw	r21,276(sp)
 8000bc0:	dd004415 	stw	r20,272(sp)
 8000bc4:	dcc04315 	stw	r19,268(sp)
 8000bc8:	dc804215 	stw	r18,264(sp)
 8000bcc:	dc404115 	stw	r17,260(sp)
 8000bd0:	dc004015 	stw	r16,256(sp)
 8000bd4:	80057800 	call	8005780 <_localeconv_r>
 8000bd8:	10800017 	ldw	r2,0(r2)
 8000bdc:	1009883a 	mov	r4,r2
 8000be0:	d8803515 	stw	r2,212(sp)
 8000be4:	8000b000 	call	8000b00 <strlen>
 8000be8:	d8803815 	stw	r2,224(sp)
 8000bec:	b0000226 	beq	r22,zero,8000bf8 <___vfprintf_internal_r+0x60>
 8000bf0:	b0800e17 	ldw	r2,56(r22)
 8000bf4:	1000e126 	beq	r2,zero,8000f7c <___vfprintf_internal_r+0x3e4>
 8000bf8:	b880030b 	ldhu	r2,12(r23)
 8000bfc:	10c8000c 	andi	r3,r2,8192
 8000c00:	1800061e 	bne	r3,zero,8000c1c <___vfprintf_internal_r+0x84>
 8000c04:	b9001917 	ldw	r4,100(r23)
 8000c08:	00f7ffc4 	movi	r3,-8193
 8000c0c:	10880014 	ori	r2,r2,8192
 8000c10:	20c6703a 	and	r3,r4,r3
 8000c14:	b880030d 	sth	r2,12(r23)
 8000c18:	b8c01915 	stw	r3,100(r23)
 8000c1c:	10c0020c 	andi	r3,r2,8
 8000c20:	1800a726 	beq	r3,zero,8000ec0 <___vfprintf_internal_r+0x328>
 8000c24:	b8c00417 	ldw	r3,16(r23)
 8000c28:	1800a526 	beq	r3,zero,8000ec0 <___vfprintf_internal_r+0x328>
 8000c2c:	1080068c 	andi	r2,r2,26
 8000c30:	00c00284 	movi	r3,10
 8000c34:	10c0aa26 	beq	r2,r3,8000ee0 <___vfprintf_internal_r+0x348>
 8000c38:	dac01e04 	addi	r11,sp,120
 8000c3c:	db001dc4 	addi	r12,sp,119
 8000c40:	d8800404 	addi	r2,sp,16
 8000c44:	05020074 	movhi	r20,2049
 8000c48:	dac02815 	stw	r11,160(sp)
 8000c4c:	5b17c83a 	sub	r11,r11,r12
 8000c50:	a53a3484 	addi	r20,r20,-5934
 8000c54:	db002915 	stw	r12,164(sp)
 8000c58:	d8801e15 	stw	r2,120(sp)
 8000c5c:	d8002015 	stw	zero,128(sp)
 8000c60:	d8001f15 	stw	zero,124(sp)
 8000c64:	d8003315 	stw	zero,204(sp)
 8000c68:	d8003715 	stw	zero,220(sp)
 8000c6c:	d8003915 	stw	zero,228(sp)
 8000c70:	1011883a 	mov	r8,r2
 8000c74:	d8003b15 	stw	zero,236(sp)
 8000c78:	d8003a15 	stw	zero,232(sp)
 8000c7c:	d8002f15 	stw	zero,188(sp)
 8000c80:	dac03c15 	stw	r11,240(sp)
 8000c84:	db002a17 	ldw	r12,168(sp)
 8000c88:	60800007 	ldb	r2,0(r12)
 8000c8c:	1000be26 	beq	r2,zero,8000f88 <___vfprintf_internal_r+0x3f0>
 8000c90:	00c00944 	movi	r3,37
 8000c94:	10c0bc26 	beq	r2,r3,8000f88 <___vfprintf_internal_r+0x3f0>
 8000c98:	6021883a 	mov	r16,r12
 8000c9c:	00000106 	br	8000ca4 <___vfprintf_internal_r+0x10c>
 8000ca0:	10c08426 	beq	r2,r3,8000eb4 <___vfprintf_internal_r+0x31c>
 8000ca4:	84000044 	addi	r16,r16,1
 8000ca8:	80800007 	ldb	r2,0(r16)
 8000cac:	103ffc1e 	bne	r2,zero,8000ca0 <__flash_exceptions_start+0xf7dffc80>
 8000cb0:	dac02a17 	ldw	r11,168(sp)
 8000cb4:	82e3c83a 	sub	r17,r16,r11
 8000cb8:	88000f26 	beq	r17,zero,8000cf8 <___vfprintf_internal_r+0x160>
 8000cbc:	d8c02017 	ldw	r3,128(sp)
 8000cc0:	d8801f17 	ldw	r2,124(sp)
 8000cc4:	dac02a17 	ldw	r11,168(sp)
 8000cc8:	1c47883a 	add	r3,r3,r17
 8000ccc:	10800044 	addi	r2,r2,1
 8000cd0:	d8c02015 	stw	r3,128(sp)
 8000cd4:	42c00015 	stw	r11,0(r8)
 8000cd8:	44400115 	stw	r17,4(r8)
 8000cdc:	d8801f15 	stw	r2,124(sp)
 8000ce0:	00c001c4 	movi	r3,7
 8000ce4:	18809316 	blt	r3,r2,8000f34 <___vfprintf_internal_r+0x39c>
 8000ce8:	42000204 	addi	r8,r8,8
 8000cec:	db002f17 	ldw	r12,188(sp)
 8000cf0:	6459883a 	add	r12,r12,r17
 8000cf4:	db002f15 	stw	r12,188(sp)
 8000cf8:	80800007 	ldb	r2,0(r16)
 8000cfc:	10009426 	beq	r2,zero,8000f50 <___vfprintf_internal_r+0x3b8>
 8000d00:	80800044 	addi	r2,r16,1
 8000d04:	84000047 	ldb	r16,1(r16)
 8000d08:	d8002785 	stb	zero,158(sp)
 8000d0c:	000d883a 	mov	r6,zero
 8000d10:	027fffc4 	movi	r9,-1
 8000d14:	d8002e15 	stw	zero,184(sp)
 8000d18:	0023883a 	mov	r17,zero
 8000d1c:	01001604 	movi	r4,88
 8000d20:	01400244 	movi	r5,9
 8000d24:	02800a84 	movi	r10,42
 8000d28:	01c01b04 	movi	r7,108
 8000d2c:	10c00044 	addi	r3,r2,1
 8000d30:	80bff804 	addi	r2,r16,-32
 8000d34:	2082cd36 	bltu	r4,r2,800186c <___vfprintf_internal_r+0xcd4>
 8000d38:	100490ba 	slli	r2,r2,2
 8000d3c:	02c20034 	movhi	r11,2048
 8000d40:	5ac35404 	addi	r11,r11,3408
 8000d44:	12c5883a 	add	r2,r2,r11
 8000d48:	10800017 	ldw	r2,0(r2)
 8000d4c:	1000683a 	jmp	r2
 8000d50:	08001684 	addi	zero,at,90
 8000d54:	0800186c 	andhi	zero,at,97
 8000d58:	0800186c 	andhi	zero,at,97
 8000d5c:	080017d4 	ori	zero,at,95
 8000d60:	0800186c 	andhi	zero,at,97
 8000d64:	0800186c 	andhi	zero,at,97
 8000d68:	0800186c 	andhi	zero,at,97
 8000d6c:	0800186c 	andhi	zero,at,97
 8000d70:	0800186c 	andhi	zero,at,97
 8000d74:	0800186c 	andhi	zero,at,97
 8000d78:	080016a4 	muli	zero,at,90
 8000d7c:	080016d0 	cmplti	zero,at,91
 8000d80:	0800186c 	andhi	zero,at,97
 8000d84:	08000f90 	cmplti	zero,at,62
 8000d88:	08000fa0 	cmpeqi	zero,at,62
 8000d8c:	0800186c 	andhi	zero,at,97
 8000d90:	08000fe0 	cmpeqi	zero,at,63
 8000d94:	08000ff0 	cmpltui	zero,at,63
 8000d98:	08000ff0 	cmpltui	zero,at,63
 8000d9c:	08000ff0 	cmpltui	zero,at,63
 8000da0:	08000ff0 	cmpltui	zero,at,63
 8000da4:	08000ff0 	cmpltui	zero,at,63
 8000da8:	08000ff0 	cmpltui	zero,at,63
 8000dac:	08000ff0 	cmpltui	zero,at,63
 8000db0:	08000ff0 	cmpltui	zero,at,63
 8000db4:	08000ff0 	cmpltui	zero,at,63
 8000db8:	0800186c 	andhi	zero,at,97
 8000dbc:	0800186c 	andhi	zero,at,97
 8000dc0:	0800186c 	andhi	zero,at,97
 8000dc4:	0800186c 	andhi	zero,at,97
 8000dc8:	0800186c 	andhi	zero,at,97
 8000dcc:	0800186c 	andhi	zero,at,97
 8000dd0:	0800186c 	andhi	zero,at,97
 8000dd4:	0800186c 	andhi	zero,at,97
 8000dd8:	0800186c 	andhi	zero,at,97
 8000ddc:	0800186c 	andhi	zero,at,97
 8000de0:	08001024 	muli	zero,at,64
 8000de4:	08001494 	ori	zero,at,82
 8000de8:	0800186c 	andhi	zero,at,97
 8000dec:	08001494 	ori	zero,at,82
 8000df0:	0800186c 	andhi	zero,at,97
 8000df4:	0800186c 	andhi	zero,at,97
 8000df8:	0800186c 	andhi	zero,at,97
 8000dfc:	0800186c 	andhi	zero,at,97
 8000e00:	08001580 	call	800158 <_start-0x77ffea8>
 8000e04:	0800186c 	andhi	zero,at,97
 8000e08:	0800186c 	andhi	zero,at,97
 8000e0c:	08001428 	cmpgeui	zero,at,80
 8000e10:	0800186c 	andhi	zero,at,97
 8000e14:	0800186c 	andhi	zero,at,97
 8000e18:	0800186c 	andhi	zero,at,97
 8000e1c:	0800186c 	andhi	zero,at,97
 8000e20:	0800186c 	andhi	zero,at,97
 8000e24:	08001464 	muli	zero,at,81
 8000e28:	0800186c 	andhi	zero,at,97
 8000e2c:	0800186c 	andhi	zero,at,97
 8000e30:	08001628 	cmpgeui	zero,at,88
 8000e34:	0800186c 	andhi	zero,at,97
 8000e38:	0800186c 	andhi	zero,at,97
 8000e3c:	0800186c 	andhi	zero,at,97
 8000e40:	0800186c 	andhi	zero,at,97
 8000e44:	0800186c 	andhi	zero,at,97
 8000e48:	0800186c 	andhi	zero,at,97
 8000e4c:	0800186c 	andhi	zero,at,97
 8000e50:	0800186c 	andhi	zero,at,97
 8000e54:	0800186c 	andhi	zero,at,97
 8000e58:	0800186c 	andhi	zero,at,97
 8000e5c:	080016e0 	cmpeqi	zero,at,91
 8000e60:	08001590 	cmplti	zero,at,86
 8000e64:	08001494 	ori	zero,at,82
 8000e68:	08001494 	ori	zero,at,82
 8000e6c:	08001494 	ori	zero,at,82
 8000e70:	080015d0 	cmplti	zero,at,87
 8000e74:	08001590 	cmplti	zero,at,86
 8000e78:	0800186c 	andhi	zero,at,97
 8000e7c:	0800186c 	andhi	zero,at,97
 8000e80:	080015e0 	cmpeqi	zero,at,87
 8000e84:	0800186c 	andhi	zero,at,97
 8000e88:	080015f4 	orhi	zero,at,87
 8000e8c:	08001830 	cmpltui	zero,at,96
 8000e90:	08001538 	rdprs	zero,at,84
 8000e94:	080017e4 	muli	zero,at,95
 8000e98:	0800186c 	andhi	zero,at,97
 8000e9c:	08001720 	cmpeqi	zero,at,92
 8000ea0:	0800186c 	andhi	zero,at,97
 8000ea4:	080017f4 	orhi	zero,at,95
 8000ea8:	0800186c 	andhi	zero,at,97
 8000eac:	0800186c 	andhi	zero,at,97
 8000eb0:	08001794 	ori	zero,at,94
 8000eb4:	db002a17 	ldw	r12,168(sp)
 8000eb8:	8323c83a 	sub	r17,r16,r12
 8000ebc:	003f7e06 	br	8000cb8 <__flash_exceptions_start+0xf7dffc98>
 8000ec0:	b009883a 	mov	r4,r22
 8000ec4:	b80b883a 	mov	r5,r23
 8000ec8:	8002bc80 	call	8002bc8 <__swsetup_r>
 8000ecc:	10000c1e 	bne	r2,zero,8000f00 <___vfprintf_internal_r+0x368>
 8000ed0:	b880030b 	ldhu	r2,12(r23)
 8000ed4:	00c00284 	movi	r3,10
 8000ed8:	1080068c 	andi	r2,r2,26
 8000edc:	10ff561e 	bne	r2,r3,8000c38 <__flash_exceptions_start+0xf7dffc18>
 8000ee0:	b880038f 	ldh	r2,14(r23)
 8000ee4:	103f5416 	blt	r2,zero,8000c38 <__flash_exceptions_start+0xf7dffc18>
 8000ee8:	d9802a17 	ldw	r6,168(sp)
 8000eec:	d9c02d17 	ldw	r7,180(sp)
 8000ef0:	b009883a 	mov	r4,r22
 8000ef4:	b80b883a 	mov	r5,r23
 8000ef8:	8002b0c0 	call	8002b0c <__sbprintf>
 8000efc:	00000106 	br	8000f04 <___vfprintf_internal_r+0x36c>
 8000f00:	00bfffc4 	movi	r2,-1
 8000f04:	dfc04917 	ldw	ra,292(sp)
 8000f08:	df004817 	ldw	fp,288(sp)
 8000f0c:	ddc04717 	ldw	r23,284(sp)
 8000f10:	dd804617 	ldw	r22,280(sp)
 8000f14:	dd404517 	ldw	r21,276(sp)
 8000f18:	dd004417 	ldw	r20,272(sp)
 8000f1c:	dcc04317 	ldw	r19,268(sp)
 8000f20:	dc804217 	ldw	r18,264(sp)
 8000f24:	dc404117 	ldw	r17,260(sp)
 8000f28:	dc004017 	ldw	r16,256(sp)
 8000f2c:	dec04a04 	addi	sp,sp,296
 8000f30:	f800283a 	ret
 8000f34:	b009883a 	mov	r4,r22
 8000f38:	b80b883a 	mov	r5,r23
 8000f3c:	d9801e04 	addi	r6,sp,120
 8000f40:	8007e600 	call	8007e60 <__sprint_r>
 8000f44:	1000081e 	bne	r2,zero,8000f68 <___vfprintf_internal_r+0x3d0>
 8000f48:	da000404 	addi	r8,sp,16
 8000f4c:	003f6706 	br	8000cec <__flash_exceptions_start+0xf7dffccc>
 8000f50:	d8802017 	ldw	r2,128(sp)
 8000f54:	10000426 	beq	r2,zero,8000f68 <___vfprintf_internal_r+0x3d0>
 8000f58:	b009883a 	mov	r4,r22
 8000f5c:	b80b883a 	mov	r5,r23
 8000f60:	d9801e04 	addi	r6,sp,120
 8000f64:	8007e600 	call	8007e60 <__sprint_r>
 8000f68:	b880030b 	ldhu	r2,12(r23)
 8000f6c:	1080100c 	andi	r2,r2,64
 8000f70:	103fe31e 	bne	r2,zero,8000f00 <__flash_exceptions_start+0xf7dffee0>
 8000f74:	d8802f17 	ldw	r2,188(sp)
 8000f78:	003fe206 	br	8000f04 <__flash_exceptions_start+0xf7dffee4>
 8000f7c:	b009883a 	mov	r4,r22
 8000f80:	8004c280 	call	8004c28 <__sinit>
 8000f84:	003f1c06 	br	8000bf8 <__flash_exceptions_start+0xf7dffbd8>
 8000f88:	dc002a17 	ldw	r16,168(sp)
 8000f8c:	003f5a06 	br	8000cf8 <__flash_exceptions_start+0xf7dffcd8>
 8000f90:	1805883a 	mov	r2,r3
 8000f94:	8c400114 	ori	r17,r17,4
 8000f98:	1c000007 	ldb	r16,0(r3)
 8000f9c:	003f6306 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 8000fa0:	1c000007 	ldb	r16,0(r3)
 8000fa4:	18800044 	addi	r2,r3,1
 8000fa8:	8286ad26 	beq	r16,r10,8002a60 <___vfprintf_internal_r+0x1ec8>
 8000fac:	82fff404 	addi	r11,r16,-48
 8000fb0:	1007883a 	mov	r3,r2
 8000fb4:	0013883a 	mov	r9,zero
 8000fb8:	2aff5d36 	bltu	r5,r11,8000d30 <__flash_exceptions_start+0xf7dffd10>
 8000fbc:	1c000007 	ldb	r16,0(r3)
 8000fc0:	4a4002a4 	muli	r9,r9,10
 8000fc4:	18c00044 	addi	r3,r3,1
 8000fc8:	5a53883a 	add	r9,r11,r9
 8000fcc:	82fff404 	addi	r11,r16,-48
 8000fd0:	2afffa2e 	bgeu	r5,r11,8000fbc <__flash_exceptions_start+0xf7dfff9c>
 8000fd4:	483f560e 	bge	r9,zero,8000d30 <__flash_exceptions_start+0xf7dffd10>
 8000fd8:	027fffc4 	movi	r9,-1
 8000fdc:	003f5406 	br	8000d30 <__flash_exceptions_start+0xf7dffd10>
 8000fe0:	8c402014 	ori	r17,r17,128
 8000fe4:	1805883a 	mov	r2,r3
 8000fe8:	1c000007 	ldb	r16,0(r3)
 8000fec:	003f4f06 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 8000ff0:	1805883a 	mov	r2,r3
 8000ff4:	d8002e15 	stw	zero,184(sp)
 8000ff8:	82fff404 	addi	r11,r16,-48
 8000ffc:	0019883a 	mov	r12,zero
 8001000:	14000007 	ldb	r16,0(r2)
 8001004:	630002a4 	muli	r12,r12,10
 8001008:	18c00044 	addi	r3,r3,1
 800100c:	1805883a 	mov	r2,r3
 8001010:	62d9883a 	add	r12,r12,r11
 8001014:	82fff404 	addi	r11,r16,-48
 8001018:	2afff92e 	bgeu	r5,r11,8001000 <__flash_exceptions_start+0xf7dfffe0>
 800101c:	db002e15 	stw	r12,184(sp)
 8001020:	003f4306 	br	8000d30 <__flash_exceptions_start+0xf7dffd10>
 8001024:	8c400414 	ori	r17,r17,16
 8001028:	d8c02a15 	stw	r3,168(sp)
 800102c:	d9802785 	stb	r6,158(sp)
 8001030:	8880080c 	andi	r2,r17,32
 8001034:	d8c02d17 	ldw	r3,180(sp)
 8001038:	10015a26 	beq	r2,zero,80015a4 <___vfprintf_internal_r+0xa0c>
 800103c:	db002d17 	ldw	r12,180(sp)
 8001040:	18800117 	ldw	r2,4(r3)
 8001044:	1cc00017 	ldw	r19,0(r3)
 8001048:	63000204 	addi	r12,r12,8
 800104c:	db002d15 	stw	r12,180(sp)
 8001050:	1039883a 	mov	fp,r2
 8001054:	10044516 	blt	r2,zero,800216c <___vfprintf_internal_r+0x15d4>
 8001058:	dd402783 	ldbu	r21,158(sp)
 800105c:	da403215 	stw	r9,200(sp)
 8001060:	00800044 	movi	r2,1
 8001064:	9f06b03a 	or	r3,r19,fp
 8001068:	48000216 	blt	r9,zero,8001074 <___vfprintf_internal_r+0x4dc>
 800106c:	013fdfc4 	movi	r4,-129
 8001070:	8922703a 	and	r17,r17,r4
 8001074:	1802071e 	bne	r3,zero,8001894 <___vfprintf_internal_r+0xcfc>
 8001078:	4802fa26 	beq	r9,zero,8001c64 <___vfprintf_internal_r+0x10cc>
 800107c:	10803fcc 	andi	r2,r2,255
 8001080:	00c00044 	movi	r3,1
 8001084:	10c22926 	beq	r2,r3,800192c <___vfprintf_internal_r+0xd94>
 8001088:	00c00084 	movi	r3,2
 800108c:	10c31726 	beq	r2,r3,8001cec <___vfprintf_internal_r+0x1154>
 8001090:	d8c01e04 	addi	r3,sp,120
 8001094:	9808d0fa 	srli	r4,r19,3
 8001098:	e00a977a 	slli	r5,fp,29
 800109c:	e038d0fa 	srli	fp,fp,3
 80010a0:	9cc001cc 	andi	r19,r19,7
 80010a4:	98800c04 	addi	r2,r19,48
 80010a8:	18ffffc4 	addi	r3,r3,-1
 80010ac:	2926b03a 	or	r19,r5,r4
 80010b0:	18800005 	stb	r2,0(r3)
 80010b4:	9f08b03a 	or	r4,r19,fp
 80010b8:	203ff61e 	bne	r4,zero,8001094 <__flash_exceptions_start+0xf7e00074>
 80010bc:	8900004c 	andi	r4,r17,1
 80010c0:	d8c03115 	stw	r3,196(sp)
 80010c4:	2003931e 	bne	r4,zero,8001f14 <___vfprintf_internal_r+0x137c>
 80010c8:	dac02817 	ldw	r11,160(sp)
 80010cc:	58e5c83a 	sub	r18,r11,r3
 80010d0:	9005883a 	mov	r2,r18
 80010d4:	9240010e 	bge	r18,r9,80010dc <___vfprintf_internal_r+0x544>
 80010d8:	4805883a 	mov	r2,r9
 80010dc:	d8802b15 	stw	r2,172(sp)
 80010e0:	d8003415 	stw	zero,208(sp)
 80010e4:	a8803fcc 	andi	r2,r21,255
 80010e8:	1080201c 	xori	r2,r2,128
 80010ec:	10bfe004 	addi	r2,r2,-128
 80010f0:	10000326 	beq	r2,zero,8001100 <___vfprintf_internal_r+0x568>
 80010f4:	db002b17 	ldw	r12,172(sp)
 80010f8:	63000044 	addi	r12,r12,1
 80010fc:	db002b15 	stw	r12,172(sp)
 8001100:	88c0008c 	andi	r3,r17,2
 8001104:	d8c02c15 	stw	r3,176(sp)
 8001108:	18000326 	beq	r3,zero,8001118 <___vfprintf_internal_r+0x580>
 800110c:	dac02b17 	ldw	r11,172(sp)
 8001110:	5ac00084 	addi	r11,r11,2
 8001114:	dac02b15 	stw	r11,172(sp)
 8001118:	8b00210c 	andi	r12,r17,132
 800111c:	db003015 	stw	r12,192(sp)
 8001120:	6001da1e 	bne	r12,zero,800188c <___vfprintf_internal_r+0xcf4>
 8001124:	dac02e17 	ldw	r11,184(sp)
 8001128:	db002b17 	ldw	r12,172(sp)
 800112c:	5b39c83a 	sub	fp,r11,r12
 8001130:	0701d60e 	bge	zero,fp,800188c <___vfprintf_internal_r+0xcf4>
 8001134:	02400404 	movi	r9,16
 8001138:	d8c02017 	ldw	r3,128(sp)
 800113c:	d8801f17 	ldw	r2,124(sp)
 8001140:	4f053c0e 	bge	r9,fp,8002634 <___vfprintf_internal_r+0x1a9c>
 8001144:	01420074 	movhi	r5,2049
 8001148:	297a3884 	addi	r5,r5,-5918
 800114c:	d9403615 	stw	r5,216(sp)
 8001150:	482b883a 	mov	r21,r9
 8001154:	04c001c4 	movi	r19,7
 8001158:	00000306 	br	8001168 <___vfprintf_internal_r+0x5d0>
 800115c:	e73ffc04 	addi	fp,fp,-16
 8001160:	42000204 	addi	r8,r8,8
 8001164:	af00130e 	bge	r21,fp,80011b4 <___vfprintf_internal_r+0x61c>
 8001168:	02c20074 	movhi	r11,2049
 800116c:	18c00404 	addi	r3,r3,16
 8001170:	10800044 	addi	r2,r2,1
 8001174:	5afa3884 	addi	r11,r11,-5918
 8001178:	42c00015 	stw	r11,0(r8)
 800117c:	45400115 	stw	r21,4(r8)
 8001180:	d8c02015 	stw	r3,128(sp)
 8001184:	d8801f15 	stw	r2,124(sp)
 8001188:	98bff40e 	bge	r19,r2,800115c <__flash_exceptions_start+0xf7e0013c>
 800118c:	b009883a 	mov	r4,r22
 8001190:	b80b883a 	mov	r5,r23
 8001194:	d9801e04 	addi	r6,sp,120
 8001198:	8007e600 	call	8007e60 <__sprint_r>
 800119c:	103f721e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80011a0:	e73ffc04 	addi	fp,fp,-16
 80011a4:	d8c02017 	ldw	r3,128(sp)
 80011a8:	d8801f17 	ldw	r2,124(sp)
 80011ac:	da000404 	addi	r8,sp,16
 80011b0:	af3fed16 	blt	r21,fp,8001168 <__flash_exceptions_start+0xf7e00148>
 80011b4:	db003617 	ldw	r12,216(sp)
 80011b8:	e0c7883a 	add	r3,fp,r3
 80011bc:	10800044 	addi	r2,r2,1
 80011c0:	43000015 	stw	r12,0(r8)
 80011c4:	47000115 	stw	fp,4(r8)
 80011c8:	d8c02015 	stw	r3,128(sp)
 80011cc:	d8801f15 	stw	r2,124(sp)
 80011d0:	010001c4 	movi	r4,7
 80011d4:	20830e16 	blt	r4,r2,8001e10 <___vfprintf_internal_r+0x1278>
 80011d8:	d8802787 	ldb	r2,158(sp)
 80011dc:	42000204 	addi	r8,r8,8
 80011e0:	10000c26 	beq	r2,zero,8001214 <___vfprintf_internal_r+0x67c>
 80011e4:	d8801f17 	ldw	r2,124(sp)
 80011e8:	d9002784 	addi	r4,sp,158
 80011ec:	18c00044 	addi	r3,r3,1
 80011f0:	10800044 	addi	r2,r2,1
 80011f4:	41000015 	stw	r4,0(r8)
 80011f8:	01000044 	movi	r4,1
 80011fc:	41000115 	stw	r4,4(r8)
 8001200:	d8c02015 	stw	r3,128(sp)
 8001204:	d8801f15 	stw	r2,124(sp)
 8001208:	010001c4 	movi	r4,7
 800120c:	2082a716 	blt	r4,r2,8001cac <___vfprintf_internal_r+0x1114>
 8001210:	42000204 	addi	r8,r8,8
 8001214:	dac02c17 	ldw	r11,176(sp)
 8001218:	58000c26 	beq	r11,zero,800124c <___vfprintf_internal_r+0x6b4>
 800121c:	d8801f17 	ldw	r2,124(sp)
 8001220:	d9002704 	addi	r4,sp,156
 8001224:	18c00084 	addi	r3,r3,2
 8001228:	10800044 	addi	r2,r2,1
 800122c:	41000015 	stw	r4,0(r8)
 8001230:	01000084 	movi	r4,2
 8001234:	41000115 	stw	r4,4(r8)
 8001238:	d8c02015 	stw	r3,128(sp)
 800123c:	d8801f15 	stw	r2,124(sp)
 8001240:	010001c4 	movi	r4,7
 8001244:	2082a116 	blt	r4,r2,8001ccc <___vfprintf_internal_r+0x1134>
 8001248:	42000204 	addi	r8,r8,8
 800124c:	db003017 	ldw	r12,192(sp)
 8001250:	00802004 	movi	r2,128
 8001254:	60820326 	beq	r12,r2,8001a64 <___vfprintf_internal_r+0xecc>
 8001258:	db003217 	ldw	r12,200(sp)
 800125c:	64abc83a 	sub	r21,r12,r18
 8001260:	0540260e 	bge	zero,r21,80012fc <___vfprintf_internal_r+0x764>
 8001264:	07000404 	movi	fp,16
 8001268:	d8801f17 	ldw	r2,124(sp)
 800126c:	e544570e 	bge	fp,r21,80023cc <___vfprintf_internal_r+0x1834>
 8001270:	01420074 	movhi	r5,2049
 8001274:	297a3484 	addi	r5,r5,-5934
 8001278:	d9402c15 	stw	r5,176(sp)
 800127c:	04c001c4 	movi	r19,7
 8001280:	00000306 	br	8001290 <___vfprintf_internal_r+0x6f8>
 8001284:	ad7ffc04 	addi	r21,r21,-16
 8001288:	42000204 	addi	r8,r8,8
 800128c:	e540110e 	bge	fp,r21,80012d4 <___vfprintf_internal_r+0x73c>
 8001290:	18c00404 	addi	r3,r3,16
 8001294:	10800044 	addi	r2,r2,1
 8001298:	45000015 	stw	r20,0(r8)
 800129c:	47000115 	stw	fp,4(r8)
 80012a0:	d8c02015 	stw	r3,128(sp)
 80012a4:	d8801f15 	stw	r2,124(sp)
 80012a8:	98bff60e 	bge	r19,r2,8001284 <__flash_exceptions_start+0xf7e00264>
 80012ac:	b009883a 	mov	r4,r22
 80012b0:	b80b883a 	mov	r5,r23
 80012b4:	d9801e04 	addi	r6,sp,120
 80012b8:	8007e600 	call	8007e60 <__sprint_r>
 80012bc:	103f2a1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80012c0:	ad7ffc04 	addi	r21,r21,-16
 80012c4:	d8c02017 	ldw	r3,128(sp)
 80012c8:	d8801f17 	ldw	r2,124(sp)
 80012cc:	da000404 	addi	r8,sp,16
 80012d0:	e57fef16 	blt	fp,r21,8001290 <__flash_exceptions_start+0xf7e00270>
 80012d4:	dac02c17 	ldw	r11,176(sp)
 80012d8:	1d47883a 	add	r3,r3,r21
 80012dc:	10800044 	addi	r2,r2,1
 80012e0:	42c00015 	stw	r11,0(r8)
 80012e4:	45400115 	stw	r21,4(r8)
 80012e8:	d8c02015 	stw	r3,128(sp)
 80012ec:	d8801f15 	stw	r2,124(sp)
 80012f0:	010001c4 	movi	r4,7
 80012f4:	20826516 	blt	r4,r2,8001c8c <___vfprintf_internal_r+0x10f4>
 80012f8:	42000204 	addi	r8,r8,8
 80012fc:	8880400c 	andi	r2,r17,256
 8001300:	1001901e 	bne	r2,zero,8001944 <___vfprintf_internal_r+0xdac>
 8001304:	d8801f17 	ldw	r2,124(sp)
 8001308:	db003117 	ldw	r12,196(sp)
 800130c:	1c87883a 	add	r3,r3,r18
 8001310:	10800044 	addi	r2,r2,1
 8001314:	43000015 	stw	r12,0(r8)
 8001318:	44800115 	stw	r18,4(r8)
 800131c:	d8c02015 	stw	r3,128(sp)
 8001320:	d8801f15 	stw	r2,124(sp)
 8001324:	010001c4 	movi	r4,7
 8001328:	20824016 	blt	r4,r2,8001c2c <___vfprintf_internal_r+0x1094>
 800132c:	42000204 	addi	r8,r8,8
 8001330:	8c40010c 	andi	r17,r17,4
 8001334:	88003126 	beq	r17,zero,80013fc <___vfprintf_internal_r+0x864>
 8001338:	db002e17 	ldw	r12,184(sp)
 800133c:	dac02b17 	ldw	r11,172(sp)
 8001340:	62e1c83a 	sub	r16,r12,r11
 8001344:	04002d0e 	bge	zero,r16,80013fc <___vfprintf_internal_r+0x864>
 8001348:	04400404 	movi	r17,16
 800134c:	d8801f17 	ldw	r2,124(sp)
 8001350:	8c05150e 	bge	r17,r16,80027a8 <___vfprintf_internal_r+0x1c10>
 8001354:	01020074 	movhi	r4,2049
 8001358:	213a3884 	addi	r4,r4,-5918
 800135c:	d9003615 	stw	r4,216(sp)
 8001360:	048001c4 	movi	r18,7
 8001364:	00000306 	br	8001374 <___vfprintf_internal_r+0x7dc>
 8001368:	843ffc04 	addi	r16,r16,-16
 800136c:	42000204 	addi	r8,r8,8
 8001370:	8c00130e 	bge	r17,r16,80013c0 <___vfprintf_internal_r+0x828>
 8001374:	01420074 	movhi	r5,2049
 8001378:	18c00404 	addi	r3,r3,16
 800137c:	10800044 	addi	r2,r2,1
 8001380:	297a3884 	addi	r5,r5,-5918
 8001384:	41400015 	stw	r5,0(r8)
 8001388:	44400115 	stw	r17,4(r8)
 800138c:	d8c02015 	stw	r3,128(sp)
 8001390:	d8801f15 	stw	r2,124(sp)
 8001394:	90bff40e 	bge	r18,r2,8001368 <__flash_exceptions_start+0xf7e00348>
 8001398:	b009883a 	mov	r4,r22
 800139c:	b80b883a 	mov	r5,r23
 80013a0:	d9801e04 	addi	r6,sp,120
 80013a4:	8007e600 	call	8007e60 <__sprint_r>
 80013a8:	103eef1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80013ac:	843ffc04 	addi	r16,r16,-16
 80013b0:	d8c02017 	ldw	r3,128(sp)
 80013b4:	d8801f17 	ldw	r2,124(sp)
 80013b8:	da000404 	addi	r8,sp,16
 80013bc:	8c3fed16 	blt	r17,r16,8001374 <__flash_exceptions_start+0xf7e00354>
 80013c0:	dac03617 	ldw	r11,216(sp)
 80013c4:	1c07883a 	add	r3,r3,r16
 80013c8:	10800044 	addi	r2,r2,1
 80013cc:	42c00015 	stw	r11,0(r8)
 80013d0:	44000115 	stw	r16,4(r8)
 80013d4:	d8c02015 	stw	r3,128(sp)
 80013d8:	d8801f15 	stw	r2,124(sp)
 80013dc:	010001c4 	movi	r4,7
 80013e0:	2080060e 	bge	r4,r2,80013fc <___vfprintf_internal_r+0x864>
 80013e4:	b009883a 	mov	r4,r22
 80013e8:	b80b883a 	mov	r5,r23
 80013ec:	d9801e04 	addi	r6,sp,120
 80013f0:	8007e600 	call	8007e60 <__sprint_r>
 80013f4:	103edc1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80013f8:	d8c02017 	ldw	r3,128(sp)
 80013fc:	d8802b17 	ldw	r2,172(sp)
 8001400:	db002e17 	ldw	r12,184(sp)
 8001404:	1300010e 	bge	r2,r12,800140c <___vfprintf_internal_r+0x874>
 8001408:	6005883a 	mov	r2,r12
 800140c:	dac02f17 	ldw	r11,188(sp)
 8001410:	5897883a 	add	r11,r11,r2
 8001414:	dac02f15 	stw	r11,188(sp)
 8001418:	18020c1e 	bne	r3,zero,8001c4c <___vfprintf_internal_r+0x10b4>
 800141c:	d8001f15 	stw	zero,124(sp)
 8001420:	da000404 	addi	r8,sp,16
 8001424:	003e1706 	br	8000c84 <__flash_exceptions_start+0xf7dffc64>
 8001428:	8c400414 	ori	r17,r17,16
 800142c:	d8c02a15 	stw	r3,168(sp)
 8001430:	8880080c 	andi	r2,r17,32
 8001434:	10010126 	beq	r2,zero,800183c <___vfprintf_internal_r+0xca4>
 8001438:	db002d17 	ldw	r12,180(sp)
 800143c:	0005883a 	mov	r2,zero
 8001440:	64c00017 	ldw	r19,0(r12)
 8001444:	67000117 	ldw	fp,4(r12)
 8001448:	63000204 	addi	r12,r12,8
 800144c:	db002d15 	stw	r12,180(sp)
 8001450:	9f06b03a 	or	r3,r19,fp
 8001454:	d8002785 	stb	zero,158(sp)
 8001458:	da403215 	stw	r9,200(sp)
 800145c:	002b883a 	mov	r21,zero
 8001460:	003f0106 	br	8001068 <__flash_exceptions_start+0xf7e00048>
 8001464:	8c400414 	ori	r17,r17,16
 8001468:	d8c02a15 	stw	r3,168(sp)
 800146c:	8880080c 	andi	r2,r17,32
 8001470:	1000e326 	beq	r2,zero,8001800 <___vfprintf_internal_r+0xc68>
 8001474:	dac02d17 	ldw	r11,180(sp)
 8001478:	00800044 	movi	r2,1
 800147c:	5cc00017 	ldw	r19,0(r11)
 8001480:	5f000117 	ldw	fp,4(r11)
 8001484:	5ac00204 	addi	r11,r11,8
 8001488:	dac02d15 	stw	r11,180(sp)
 800148c:	9f06b03a 	or	r3,r19,fp
 8001490:	003ff006 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001494:	db002d17 	ldw	r12,180(sp)
 8001498:	dac02d17 	ldw	r11,180(sp)
 800149c:	d8c02a15 	stw	r3,168(sp)
 80014a0:	63000017 	ldw	r12,0(r12)
 80014a4:	5ac00117 	ldw	r11,4(r11)
 80014a8:	d9802785 	stb	r6,158(sp)
 80014ac:	6009883a 	mov	r4,r12
 80014b0:	580b883a 	mov	r5,r11
 80014b4:	db003715 	stw	r12,220(sp)
 80014b8:	da003f15 	stw	r8,252(sp)
 80014bc:	da403e15 	stw	r9,248(sp)
 80014c0:	dac03915 	stw	r11,228(sp)
 80014c4:	8007abc0 	call	8007abc <__fpclassifyd>
 80014c8:	db002d17 	ldw	r12,180(sp)
 80014cc:	04800044 	movi	r18,1
 80014d0:	da003f17 	ldw	r8,252(sp)
 80014d4:	64c00204 	addi	r19,r12,8
 80014d8:	da403e17 	ldw	r9,248(sp)
 80014dc:	d9003717 	ldw	r4,220(sp)
 80014e0:	d9403917 	ldw	r5,228(sp)
 80014e4:	14832b1e 	bne	r2,r18,8002194 <___vfprintf_internal_r+0x15fc>
 80014e8:	000d883a 	mov	r6,zero
 80014ec:	000f883a 	mov	r7,zero
 80014f0:	800ba680 	call	800ba68 <__ledf2>
 80014f4:	da003f17 	ldw	r8,252(sp)
 80014f8:	1004b716 	blt	r2,zero,80027d8 <___vfprintf_internal_r+0x1c40>
 80014fc:	dd402783 	ldbu	r21,158(sp)
 8001500:	008011c4 	movi	r2,71
 8001504:	14040e0e 	bge	r2,r16,8002540 <___vfprintf_internal_r+0x19a8>
 8001508:	00c20074 	movhi	r3,2049
 800150c:	18fa2504 	addi	r3,r3,-5996
 8001510:	d8c03115 	stw	r3,196(sp)
 8001514:	02c000c4 	movi	r11,3
 8001518:	00bfdfc4 	movi	r2,-129
 800151c:	dac02b15 	stw	r11,172(sp)
 8001520:	88a2703a 	and	r17,r17,r2
 8001524:	dcc02d15 	stw	r19,180(sp)
 8001528:	5825883a 	mov	r18,r11
 800152c:	d8003215 	stw	zero,200(sp)
 8001530:	d8003415 	stw	zero,208(sp)
 8001534:	003eeb06 	br	80010e4 <__flash_exceptions_start+0xf7e000c4>
 8001538:	db002d17 	ldw	r12,180(sp)
 800153c:	00800c04 	movi	r2,48
 8001540:	d8802705 	stb	r2,156(sp)
 8001544:	64c00017 	ldw	r19,0(r12)
 8001548:	00801e04 	movi	r2,120
 800154c:	d8802745 	stb	r2,157(sp)
 8001550:	00820074 	movhi	r2,2049
 8001554:	10ba2d04 	addi	r2,r2,-5964
 8001558:	63000104 	addi	r12,r12,4
 800155c:	d8c02a15 	stw	r3,168(sp)
 8001560:	d8803b15 	stw	r2,236(sp)
 8001564:	0039883a 	mov	fp,zero
 8001568:	8c400094 	ori	r17,r17,2
 800156c:	db002d15 	stw	r12,180(sp)
 8001570:	00800084 	movi	r2,2
 8001574:	04001e04 	movi	r16,120
 8001578:	9807883a 	mov	r3,r19
 800157c:	003fb506 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001580:	8c400214 	ori	r17,r17,8
 8001584:	1805883a 	mov	r2,r3
 8001588:	1c000007 	ldb	r16,0(r3)
 800158c:	003de706 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 8001590:	d8c02a15 	stw	r3,168(sp)
 8001594:	d9802785 	stb	r6,158(sp)
 8001598:	8880080c 	andi	r2,r17,32
 800159c:	d8c02d17 	ldw	r3,180(sp)
 80015a0:	103ea61e 	bne	r2,zero,800103c <__flash_exceptions_start+0xf7e0001c>
 80015a4:	8880040c 	andi	r2,r17,16
 80015a8:	1002221e 	bne	r2,zero,8001e34 <___vfprintf_internal_r+0x129c>
 80015ac:	8880100c 	andi	r2,r17,64
 80015b0:	10022026 	beq	r2,zero,8001e34 <___vfprintf_internal_r+0x129c>
 80015b4:	1cc0000f 	ldh	r19,0(r3)
 80015b8:	db002d17 	ldw	r12,180(sp)
 80015bc:	9839d7fa 	srai	fp,r19,31
 80015c0:	63000104 	addi	r12,r12,4
 80015c4:	db002d15 	stw	r12,180(sp)
 80015c8:	e005883a 	mov	r2,fp
 80015cc:	003ea106 	br	8001054 <__flash_exceptions_start+0xf7e00034>
 80015d0:	8c401014 	ori	r17,r17,64
 80015d4:	1805883a 	mov	r2,r3
 80015d8:	1c000007 	ldb	r16,0(r3)
 80015dc:	003dd306 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80015e0:	1c000007 	ldb	r16,0(r3)
 80015e4:	81c3e926 	beq	r16,r7,800258c <___vfprintf_internal_r+0x19f4>
 80015e8:	8c400414 	ori	r17,r17,16
 80015ec:	1805883a 	mov	r2,r3
 80015f0:	003dce06 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80015f4:	d8c02a15 	stw	r3,168(sp)
 80015f8:	d9802785 	stb	r6,158(sp)
 80015fc:	8880080c 	andi	r2,r17,32
 8001600:	10034726 	beq	r2,zero,8002320 <___vfprintf_internal_r+0x1788>
 8001604:	db002d17 	ldw	r12,180(sp)
 8001608:	dac02f17 	ldw	r11,188(sp)
 800160c:	60800017 	ldw	r2,0(r12)
 8001610:	5807d7fa 	srai	r3,r11,31
 8001614:	63000104 	addi	r12,r12,4
 8001618:	db002d15 	stw	r12,180(sp)
 800161c:	12c00015 	stw	r11,0(r2)
 8001620:	10c00115 	stw	r3,4(r2)
 8001624:	003d9706 	br	8000c84 <__flash_exceptions_start+0xf7dffc64>
 8001628:	03020074 	movhi	r12,2049
 800162c:	633a2804 	addi	r12,r12,-5984
 8001630:	d8c02a15 	stw	r3,168(sp)
 8001634:	d9802785 	stb	r6,158(sp)
 8001638:	db003b15 	stw	r12,236(sp)
 800163c:	88c0080c 	andi	r3,r17,32
 8001640:	d8802d17 	ldw	r2,180(sp)
 8001644:	18005b26 	beq	r3,zero,80017b4 <___vfprintf_internal_r+0xc1c>
 8001648:	dac02d17 	ldw	r11,180(sp)
 800164c:	14c00017 	ldw	r19,0(r2)
 8001650:	17000117 	ldw	fp,4(r2)
 8001654:	5ac00204 	addi	r11,r11,8
 8001658:	dac02d15 	stw	r11,180(sp)
 800165c:	8880004c 	andi	r2,r17,1
 8001660:	10022926 	beq	r2,zero,8001f08 <___vfprintf_internal_r+0x1370>
 8001664:	9f06b03a 	or	r3,r19,fp
 8001668:	18032b26 	beq	r3,zero,8002318 <___vfprintf_internal_r+0x1780>
 800166c:	00800c04 	movi	r2,48
 8001670:	d8802705 	stb	r2,156(sp)
 8001674:	dc002745 	stb	r16,157(sp)
 8001678:	8c400094 	ori	r17,r17,2
 800167c:	00800084 	movi	r2,2
 8001680:	003f7406 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001684:	30803fcc 	andi	r2,r6,255
 8001688:	1080201c 	xori	r2,r2,128
 800168c:	10bfe004 	addi	r2,r2,-128
 8001690:	1003351e 	bne	r2,zero,8002368 <___vfprintf_internal_r+0x17d0>
 8001694:	1805883a 	mov	r2,r3
 8001698:	01800804 	movi	r6,32
 800169c:	1c000007 	ldb	r16,0(r3)
 80016a0:	003da206 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80016a4:	dac02d17 	ldw	r11,180(sp)
 80016a8:	db002d17 	ldw	r12,180(sp)
 80016ac:	5ac00017 	ldw	r11,0(r11)
 80016b0:	dac02e15 	stw	r11,184(sp)
 80016b4:	62c00104 	addi	r11,r12,4
 80016b8:	db002e17 	ldw	r12,184(sp)
 80016bc:	6003ad16 	blt	r12,zero,8002574 <___vfprintf_internal_r+0x19dc>
 80016c0:	dac02d15 	stw	r11,180(sp)
 80016c4:	1805883a 	mov	r2,r3
 80016c8:	1c000007 	ldb	r16,0(r3)
 80016cc:	003d9706 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80016d0:	1805883a 	mov	r2,r3
 80016d4:	01800ac4 	movi	r6,43
 80016d8:	1c000007 	ldb	r16,0(r3)
 80016dc:	003d9306 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80016e0:	db002d17 	ldw	r12,180(sp)
 80016e4:	d8c02a15 	stw	r3,168(sp)
 80016e8:	00c00044 	movi	r3,1
 80016ec:	60800017 	ldw	r2,0(r12)
 80016f0:	63000104 	addi	r12,r12,4
 80016f4:	d8c02b15 	stw	r3,172(sp)
 80016f8:	d8002785 	stb	zero,158(sp)
 80016fc:	d8801405 	stb	r2,80(sp)
 8001700:	db002d15 	stw	r12,180(sp)
 8001704:	dac01404 	addi	r11,sp,80
 8001708:	1825883a 	mov	r18,r3
 800170c:	d8003215 	stw	zero,200(sp)
 8001710:	d8003415 	stw	zero,208(sp)
 8001714:	dac03115 	stw	r11,196(sp)
 8001718:	0005883a 	mov	r2,zero
 800171c:	003e7806 	br	8001100 <__flash_exceptions_start+0xf7e000e0>
 8001720:	dac02d17 	ldw	r11,180(sp)
 8001724:	db002d17 	ldw	r12,180(sp)
 8001728:	d8c02a15 	stw	r3,168(sp)
 800172c:	5ac00017 	ldw	r11,0(r11)
 8001730:	d8002785 	stb	zero,158(sp)
 8001734:	64c00104 	addi	r19,r12,4
 8001738:	dac03115 	stw	r11,196(sp)
 800173c:	5803fe26 	beq	r11,zero,8002738 <___vfprintf_internal_r+0x1ba0>
 8001740:	d9003117 	ldw	r4,196(sp)
 8001744:	4803b416 	blt	r9,zero,8002618 <___vfprintf_internal_r+0x1a80>
 8001748:	480d883a 	mov	r6,r9
 800174c:	000b883a 	mov	r5,zero
 8001750:	da003f15 	stw	r8,252(sp)
 8001754:	da403e15 	stw	r9,248(sp)
 8001758:	80061140 	call	8006114 <memchr>
 800175c:	da003f17 	ldw	r8,252(sp)
 8001760:	da403e17 	ldw	r9,248(sp)
 8001764:	10043026 	beq	r2,zero,8002828 <___vfprintf_internal_r+0x1c90>
 8001768:	d8c03117 	ldw	r3,196(sp)
 800176c:	10e5c83a 	sub	r18,r2,r3
 8001770:	4c836b16 	blt	r9,r18,8002520 <___vfprintf_internal_r+0x1988>
 8001774:	9005883a 	mov	r2,r18
 8001778:	9003ac16 	blt	r18,zero,800262c <___vfprintf_internal_r+0x1a94>
 800177c:	dd402783 	ldbu	r21,158(sp)
 8001780:	d8802b15 	stw	r2,172(sp)
 8001784:	dcc02d15 	stw	r19,180(sp)
 8001788:	d8003215 	stw	zero,200(sp)
 800178c:	d8003415 	stw	zero,208(sp)
 8001790:	003e5406 	br	80010e4 <__flash_exceptions_start+0xf7e000c4>
 8001794:	00820074 	movhi	r2,2049
 8001798:	10ba2d04 	addi	r2,r2,-5964
 800179c:	d8c02a15 	stw	r3,168(sp)
 80017a0:	d8803b15 	stw	r2,236(sp)
 80017a4:	d9802785 	stb	r6,158(sp)
 80017a8:	88c0080c 	andi	r3,r17,32
 80017ac:	d8802d17 	ldw	r2,180(sp)
 80017b0:	183fa51e 	bne	r3,zero,8001648 <__flash_exceptions_start+0xf7e00628>
 80017b4:	88c0040c 	andi	r3,r17,16
 80017b8:	1802ee26 	beq	r3,zero,8002374 <___vfprintf_internal_r+0x17dc>
 80017bc:	db002d17 	ldw	r12,180(sp)
 80017c0:	14c00017 	ldw	r19,0(r2)
 80017c4:	0039883a 	mov	fp,zero
 80017c8:	63000104 	addi	r12,r12,4
 80017cc:	db002d15 	stw	r12,180(sp)
 80017d0:	003fa206 	br	800165c <__flash_exceptions_start+0xf7e0063c>
 80017d4:	8c400054 	ori	r17,r17,1
 80017d8:	1805883a 	mov	r2,r3
 80017dc:	1c000007 	ldb	r16,0(r3)
 80017e0:	003d5206 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80017e4:	8c400814 	ori	r17,r17,32
 80017e8:	1805883a 	mov	r2,r3
 80017ec:	1c000007 	ldb	r16,0(r3)
 80017f0:	003d4e06 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 80017f4:	d8c02a15 	stw	r3,168(sp)
 80017f8:	8880080c 	andi	r2,r17,32
 80017fc:	103f1d1e 	bne	r2,zero,8001474 <__flash_exceptions_start+0xf7e00454>
 8001800:	8880040c 	andi	r2,r17,16
 8001804:	1001b81e 	bne	r2,zero,8001ee8 <___vfprintf_internal_r+0x1350>
 8001808:	8880100c 	andi	r2,r17,64
 800180c:	1001b626 	beq	r2,zero,8001ee8 <___vfprintf_internal_r+0x1350>
 8001810:	dac02d17 	ldw	r11,180(sp)
 8001814:	0039883a 	mov	fp,zero
 8001818:	00800044 	movi	r2,1
 800181c:	5cc0000b 	ldhu	r19,0(r11)
 8001820:	5ac00104 	addi	r11,r11,4
 8001824:	dac02d15 	stw	r11,180(sp)
 8001828:	9807883a 	mov	r3,r19
 800182c:	003f0906 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001830:	d8c02a15 	stw	r3,168(sp)
 8001834:	8880080c 	andi	r2,r17,32
 8001838:	103eff1e 	bne	r2,zero,8001438 <__flash_exceptions_start+0xf7e00418>
 800183c:	8880040c 	andi	r2,r17,16
 8001840:	1001a11e 	bne	r2,zero,8001ec8 <___vfprintf_internal_r+0x1330>
 8001844:	8880100c 	andi	r2,r17,64
 8001848:	10019f26 	beq	r2,zero,8001ec8 <___vfprintf_internal_r+0x1330>
 800184c:	db002d17 	ldw	r12,180(sp)
 8001850:	0039883a 	mov	fp,zero
 8001854:	0005883a 	mov	r2,zero
 8001858:	64c0000b 	ldhu	r19,0(r12)
 800185c:	63000104 	addi	r12,r12,4
 8001860:	db002d15 	stw	r12,180(sp)
 8001864:	9807883a 	mov	r3,r19
 8001868:	003efa06 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 800186c:	d8c02a15 	stw	r3,168(sp)
 8001870:	d9802785 	stb	r6,158(sp)
 8001874:	803db626 	beq	r16,zero,8000f50 <__flash_exceptions_start+0xf7dfff30>
 8001878:	00c00044 	movi	r3,1
 800187c:	d8c02b15 	stw	r3,172(sp)
 8001880:	dc001405 	stb	r16,80(sp)
 8001884:	d8002785 	stb	zero,158(sp)
 8001888:	003f9e06 	br	8001704 <__flash_exceptions_start+0xf7e006e4>
 800188c:	d8c02017 	ldw	r3,128(sp)
 8001890:	003e5306 	br	80011e0 <__flash_exceptions_start+0xf7e001c0>
 8001894:	10803fcc 	andi	r2,r2,255
 8001898:	00c00044 	movi	r3,1
 800189c:	10fdfa1e 	bne	r2,r3,8001088 <__flash_exceptions_start+0xf7e00068>
 80018a0:	e000021e 	bne	fp,zero,80018ac <___vfprintf_internal_r+0xd14>
 80018a4:	00800244 	movi	r2,9
 80018a8:	14c0202e 	bgeu	r2,r19,800192c <___vfprintf_internal_r+0xd94>
 80018ac:	dc002b15 	stw	r16,172(sp)
 80018b0:	dc402c15 	stw	r17,176(sp)
 80018b4:	9821883a 	mov	r16,r19
 80018b8:	e023883a 	mov	r17,fp
 80018bc:	dc801e04 	addi	r18,sp,120
 80018c0:	4827883a 	mov	r19,r9
 80018c4:	4039883a 	mov	fp,r8
 80018c8:	8009883a 	mov	r4,r16
 80018cc:	880b883a 	mov	r5,r17
 80018d0:	01800284 	movi	r6,10
 80018d4:	000f883a 	mov	r7,zero
 80018d8:	800a0e00 	call	800a0e0 <__umoddi3>
 80018dc:	10800c04 	addi	r2,r2,48
 80018e0:	94bfffc4 	addi	r18,r18,-1
 80018e4:	8009883a 	mov	r4,r16
 80018e8:	880b883a 	mov	r5,r17
 80018ec:	01800284 	movi	r6,10
 80018f0:	000f883a 	mov	r7,zero
 80018f4:	90800005 	stb	r2,0(r18)
 80018f8:	8009b200 	call	8009b20 <__udivdi3>
 80018fc:	1021883a 	mov	r16,r2
 8001900:	10c4b03a 	or	r2,r2,r3
 8001904:	1823883a 	mov	r17,r3
 8001908:	103fef1e 	bne	r2,zero,80018c8 <__flash_exceptions_start+0xf7e008a8>
 800190c:	dac02817 	ldw	r11,160(sp)
 8001910:	dc803115 	stw	r18,196(sp)
 8001914:	dc002b17 	ldw	r16,172(sp)
 8001918:	dc402c17 	ldw	r17,176(sp)
 800191c:	9813883a 	mov	r9,r19
 8001920:	e011883a 	mov	r8,fp
 8001924:	5ca5c83a 	sub	r18,r11,r18
 8001928:	003de906 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 800192c:	9cc00c04 	addi	r19,r19,48
 8001930:	d8c01dc4 	addi	r3,sp,119
 8001934:	dcc01dc5 	stb	r19,119(sp)
 8001938:	dc803c17 	ldw	r18,240(sp)
 800193c:	d8c03115 	stw	r3,196(sp)
 8001940:	003de306 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 8001944:	00801944 	movi	r2,101
 8001948:	1400710e 	bge	r2,r16,8001b10 <___vfprintf_internal_r+0xf78>
 800194c:	d9003717 	ldw	r4,220(sp)
 8001950:	d9403917 	ldw	r5,228(sp)
 8001954:	000d883a 	mov	r6,zero
 8001958:	000f883a 	mov	r7,zero
 800195c:	d8c03d15 	stw	r3,244(sp)
 8001960:	da003f15 	stw	r8,252(sp)
 8001964:	800b9040 	call	800b904 <__eqdf2>
 8001968:	d8c03d17 	ldw	r3,244(sp)
 800196c:	da003f17 	ldw	r8,252(sp)
 8001970:	1000ef1e 	bne	r2,zero,8001d30 <___vfprintf_internal_r+0x1198>
 8001974:	d8801f17 	ldw	r2,124(sp)
 8001978:	01020074 	movhi	r4,2049
 800197c:	213a3404 	addi	r4,r4,-5936
 8001980:	18c00044 	addi	r3,r3,1
 8001984:	10800044 	addi	r2,r2,1
 8001988:	41000015 	stw	r4,0(r8)
 800198c:	01000044 	movi	r4,1
 8001990:	41000115 	stw	r4,4(r8)
 8001994:	d8c02015 	stw	r3,128(sp)
 8001998:	d8801f15 	stw	r2,124(sp)
 800199c:	010001c4 	movi	r4,7
 80019a0:	20828e16 	blt	r4,r2,80023dc <___vfprintf_internal_r+0x1844>
 80019a4:	42000204 	addi	r8,r8,8
 80019a8:	d8802617 	ldw	r2,152(sp)
 80019ac:	dac03317 	ldw	r11,204(sp)
 80019b0:	12c00216 	blt	r2,r11,80019bc <___vfprintf_internal_r+0xe24>
 80019b4:	8880004c 	andi	r2,r17,1
 80019b8:	103e5d26 	beq	r2,zero,8001330 <__flash_exceptions_start+0xf7e00310>
 80019bc:	db003817 	ldw	r12,224(sp)
 80019c0:	d8801f17 	ldw	r2,124(sp)
 80019c4:	dac03517 	ldw	r11,212(sp)
 80019c8:	1b07883a 	add	r3,r3,r12
 80019cc:	10800044 	addi	r2,r2,1
 80019d0:	42c00015 	stw	r11,0(r8)
 80019d4:	43000115 	stw	r12,4(r8)
 80019d8:	d8c02015 	stw	r3,128(sp)
 80019dc:	d8801f15 	stw	r2,124(sp)
 80019e0:	010001c4 	movi	r4,7
 80019e4:	2082ed16 	blt	r4,r2,800259c <___vfprintf_internal_r+0x1a04>
 80019e8:	42000204 	addi	r8,r8,8
 80019ec:	db003317 	ldw	r12,204(sp)
 80019f0:	643fffc4 	addi	r16,r12,-1
 80019f4:	043e4e0e 	bge	zero,r16,8001330 <__flash_exceptions_start+0xf7e00310>
 80019f8:	04800404 	movi	r18,16
 80019fc:	d8801f17 	ldw	r2,124(sp)
 8001a00:	94007e0e 	bge	r18,r16,8001bfc <___vfprintf_internal_r+0x1064>
 8001a04:	01420074 	movhi	r5,2049
 8001a08:	297a3484 	addi	r5,r5,-5934
 8001a0c:	d9402c15 	stw	r5,176(sp)
 8001a10:	054001c4 	movi	r21,7
 8001a14:	00000306 	br	8001a24 <___vfprintf_internal_r+0xe8c>
 8001a18:	42000204 	addi	r8,r8,8
 8001a1c:	843ffc04 	addi	r16,r16,-16
 8001a20:	9400790e 	bge	r18,r16,8001c08 <___vfprintf_internal_r+0x1070>
 8001a24:	18c00404 	addi	r3,r3,16
 8001a28:	10800044 	addi	r2,r2,1
 8001a2c:	45000015 	stw	r20,0(r8)
 8001a30:	44800115 	stw	r18,4(r8)
 8001a34:	d8c02015 	stw	r3,128(sp)
 8001a38:	d8801f15 	stw	r2,124(sp)
 8001a3c:	a8bff60e 	bge	r21,r2,8001a18 <__flash_exceptions_start+0xf7e009f8>
 8001a40:	b009883a 	mov	r4,r22
 8001a44:	b80b883a 	mov	r5,r23
 8001a48:	d9801e04 	addi	r6,sp,120
 8001a4c:	8007e600 	call	8007e60 <__sprint_r>
 8001a50:	103d451e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001a54:	d8c02017 	ldw	r3,128(sp)
 8001a58:	d8801f17 	ldw	r2,124(sp)
 8001a5c:	da000404 	addi	r8,sp,16
 8001a60:	003fee06 	br	8001a1c <__flash_exceptions_start+0xf7e009fc>
 8001a64:	dac02e17 	ldw	r11,184(sp)
 8001a68:	db002b17 	ldw	r12,172(sp)
 8001a6c:	5b2bc83a 	sub	r21,r11,r12
 8001a70:	057df90e 	bge	zero,r21,8001258 <__flash_exceptions_start+0xf7e00238>
 8001a74:	07000404 	movi	fp,16
 8001a78:	d8801f17 	ldw	r2,124(sp)
 8001a7c:	e543640e 	bge	fp,r21,8002810 <___vfprintf_internal_r+0x1c78>
 8001a80:	01420074 	movhi	r5,2049
 8001a84:	297a3484 	addi	r5,r5,-5934
 8001a88:	d9402c15 	stw	r5,176(sp)
 8001a8c:	04c001c4 	movi	r19,7
 8001a90:	00000306 	br	8001aa0 <___vfprintf_internal_r+0xf08>
 8001a94:	ad7ffc04 	addi	r21,r21,-16
 8001a98:	42000204 	addi	r8,r8,8
 8001a9c:	e540110e 	bge	fp,r21,8001ae4 <___vfprintf_internal_r+0xf4c>
 8001aa0:	18c00404 	addi	r3,r3,16
 8001aa4:	10800044 	addi	r2,r2,1
 8001aa8:	45000015 	stw	r20,0(r8)
 8001aac:	47000115 	stw	fp,4(r8)
 8001ab0:	d8c02015 	stw	r3,128(sp)
 8001ab4:	d8801f15 	stw	r2,124(sp)
 8001ab8:	98bff60e 	bge	r19,r2,8001a94 <__flash_exceptions_start+0xf7e00a74>
 8001abc:	b009883a 	mov	r4,r22
 8001ac0:	b80b883a 	mov	r5,r23
 8001ac4:	d9801e04 	addi	r6,sp,120
 8001ac8:	8007e600 	call	8007e60 <__sprint_r>
 8001acc:	103d261e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001ad0:	ad7ffc04 	addi	r21,r21,-16
 8001ad4:	d8c02017 	ldw	r3,128(sp)
 8001ad8:	d8801f17 	ldw	r2,124(sp)
 8001adc:	da000404 	addi	r8,sp,16
 8001ae0:	e57fef16 	blt	fp,r21,8001aa0 <__flash_exceptions_start+0xf7e00a80>
 8001ae4:	dac02c17 	ldw	r11,176(sp)
 8001ae8:	1d47883a 	add	r3,r3,r21
 8001aec:	10800044 	addi	r2,r2,1
 8001af0:	42c00015 	stw	r11,0(r8)
 8001af4:	45400115 	stw	r21,4(r8)
 8001af8:	d8c02015 	stw	r3,128(sp)
 8001afc:	d8801f15 	stw	r2,124(sp)
 8001b00:	010001c4 	movi	r4,7
 8001b04:	20819116 	blt	r4,r2,800214c <___vfprintf_internal_r+0x15b4>
 8001b08:	42000204 	addi	r8,r8,8
 8001b0c:	003dd206 	br	8001258 <__flash_exceptions_start+0xf7e00238>
 8001b10:	db003317 	ldw	r12,204(sp)
 8001b14:	00800044 	movi	r2,1
 8001b18:	18c00044 	addi	r3,r3,1
 8001b1c:	1301530e 	bge	r2,r12,800206c <___vfprintf_internal_r+0x14d4>
 8001b20:	dc001f17 	ldw	r16,124(sp)
 8001b24:	dac03117 	ldw	r11,196(sp)
 8001b28:	00800044 	movi	r2,1
 8001b2c:	84000044 	addi	r16,r16,1
 8001b30:	40800115 	stw	r2,4(r8)
 8001b34:	42c00015 	stw	r11,0(r8)
 8001b38:	d8c02015 	stw	r3,128(sp)
 8001b3c:	dc001f15 	stw	r16,124(sp)
 8001b40:	008001c4 	movi	r2,7
 8001b44:	14016b16 	blt	r2,r16,80020f4 <___vfprintf_internal_r+0x155c>
 8001b48:	42000204 	addi	r8,r8,8
 8001b4c:	db003817 	ldw	r12,224(sp)
 8001b50:	dac03517 	ldw	r11,212(sp)
 8001b54:	84000044 	addi	r16,r16,1
 8001b58:	1b07883a 	add	r3,r3,r12
 8001b5c:	42c00015 	stw	r11,0(r8)
 8001b60:	43000115 	stw	r12,4(r8)
 8001b64:	d8c02015 	stw	r3,128(sp)
 8001b68:	dc001f15 	stw	r16,124(sp)
 8001b6c:	008001c4 	movi	r2,7
 8001b70:	14016916 	blt	r2,r16,8002118 <___vfprintf_internal_r+0x1580>
 8001b74:	44800204 	addi	r18,r8,8
 8001b78:	d9003717 	ldw	r4,220(sp)
 8001b7c:	d9403917 	ldw	r5,228(sp)
 8001b80:	000d883a 	mov	r6,zero
 8001b84:	000f883a 	mov	r7,zero
 8001b88:	d8c03d15 	stw	r3,244(sp)
 8001b8c:	800b9040 	call	800b904 <__eqdf2>
 8001b90:	d8c03d17 	ldw	r3,244(sp)
 8001b94:	db003317 	ldw	r12,204(sp)
 8001b98:	1000ad26 	beq	r2,zero,8001e50 <___vfprintf_internal_r+0x12b8>
 8001b9c:	dac03117 	ldw	r11,196(sp)
 8001ba0:	60bfffc4 	addi	r2,r12,-1
 8001ba4:	1887883a 	add	r3,r3,r2
 8001ba8:	59000044 	addi	r4,r11,1
 8001bac:	84000044 	addi	r16,r16,1
 8001bb0:	90800115 	stw	r2,4(r18)
 8001bb4:	91000015 	stw	r4,0(r18)
 8001bb8:	d8c02015 	stw	r3,128(sp)
 8001bbc:	dc001f15 	stw	r16,124(sp)
 8001bc0:	008001c4 	movi	r2,7
 8001bc4:	14014216 	blt	r2,r16,80020d0 <___vfprintf_internal_r+0x1538>
 8001bc8:	94800204 	addi	r18,r18,8
 8001bcc:	dac03a17 	ldw	r11,232(sp)
 8001bd0:	dd4022c4 	addi	r21,sp,139
 8001bd4:	84000044 	addi	r16,r16,1
 8001bd8:	1ac7883a 	add	r3,r3,r11
 8001bdc:	95400015 	stw	r21,0(r18)
 8001be0:	92c00115 	stw	r11,4(r18)
 8001be4:	d8c02015 	stw	r3,128(sp)
 8001be8:	dc001f15 	stw	r16,124(sp)
 8001bec:	008001c4 	movi	r2,7
 8001bf0:	14000e16 	blt	r2,r16,8001c2c <___vfprintf_internal_r+0x1094>
 8001bf4:	92000204 	addi	r8,r18,8
 8001bf8:	003dcd06 	br	8001330 <__flash_exceptions_start+0xf7e00310>
 8001bfc:	01020074 	movhi	r4,2049
 8001c00:	213a3484 	addi	r4,r4,-5934
 8001c04:	d9002c15 	stw	r4,176(sp)
 8001c08:	dac02c17 	ldw	r11,176(sp)
 8001c0c:	1c07883a 	add	r3,r3,r16
 8001c10:	44000115 	stw	r16,4(r8)
 8001c14:	42c00015 	stw	r11,0(r8)
 8001c18:	10800044 	addi	r2,r2,1
 8001c1c:	d8c02015 	stw	r3,128(sp)
 8001c20:	d8801f15 	stw	r2,124(sp)
 8001c24:	010001c4 	movi	r4,7
 8001c28:	20bdc00e 	bge	r4,r2,800132c <__flash_exceptions_start+0xf7e0030c>
 8001c2c:	b009883a 	mov	r4,r22
 8001c30:	b80b883a 	mov	r5,r23
 8001c34:	d9801e04 	addi	r6,sp,120
 8001c38:	8007e600 	call	8007e60 <__sprint_r>
 8001c3c:	103cca1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001c40:	d8c02017 	ldw	r3,128(sp)
 8001c44:	da000404 	addi	r8,sp,16
 8001c48:	003db906 	br	8001330 <__flash_exceptions_start+0xf7e00310>
 8001c4c:	b009883a 	mov	r4,r22
 8001c50:	b80b883a 	mov	r5,r23
 8001c54:	d9801e04 	addi	r6,sp,120
 8001c58:	8007e600 	call	8007e60 <__sprint_r>
 8001c5c:	103def26 	beq	r2,zero,800141c <__flash_exceptions_start+0xf7e003fc>
 8001c60:	003cc106 	br	8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001c64:	10803fcc 	andi	r2,r2,255
 8001c68:	1000651e 	bne	r2,zero,8001e00 <___vfprintf_internal_r+0x1268>
 8001c6c:	8880004c 	andi	r2,r17,1
 8001c70:	10013226 	beq	r2,zero,800213c <___vfprintf_internal_r+0x15a4>
 8001c74:	00800c04 	movi	r2,48
 8001c78:	d8c01dc4 	addi	r3,sp,119
 8001c7c:	d8801dc5 	stb	r2,119(sp)
 8001c80:	dc803c17 	ldw	r18,240(sp)
 8001c84:	d8c03115 	stw	r3,196(sp)
 8001c88:	003d1106 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 8001c8c:	b009883a 	mov	r4,r22
 8001c90:	b80b883a 	mov	r5,r23
 8001c94:	d9801e04 	addi	r6,sp,120
 8001c98:	8007e600 	call	8007e60 <__sprint_r>
 8001c9c:	103cb21e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001ca0:	d8c02017 	ldw	r3,128(sp)
 8001ca4:	da000404 	addi	r8,sp,16
 8001ca8:	003d9406 	br	80012fc <__flash_exceptions_start+0xf7e002dc>
 8001cac:	b009883a 	mov	r4,r22
 8001cb0:	b80b883a 	mov	r5,r23
 8001cb4:	d9801e04 	addi	r6,sp,120
 8001cb8:	8007e600 	call	8007e60 <__sprint_r>
 8001cbc:	103caa1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001cc0:	d8c02017 	ldw	r3,128(sp)
 8001cc4:	da000404 	addi	r8,sp,16
 8001cc8:	003d5206 	br	8001214 <__flash_exceptions_start+0xf7e001f4>
 8001ccc:	b009883a 	mov	r4,r22
 8001cd0:	b80b883a 	mov	r5,r23
 8001cd4:	d9801e04 	addi	r6,sp,120
 8001cd8:	8007e600 	call	8007e60 <__sprint_r>
 8001cdc:	103ca21e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001ce0:	d8c02017 	ldw	r3,128(sp)
 8001ce4:	da000404 	addi	r8,sp,16
 8001ce8:	003d5806 	br	800124c <__flash_exceptions_start+0xf7e0022c>
 8001cec:	d9403b17 	ldw	r5,236(sp)
 8001cf0:	d8c01e04 	addi	r3,sp,120
 8001cf4:	988003cc 	andi	r2,r19,15
 8001cf8:	e008973a 	slli	r4,fp,28
 8001cfc:	2885883a 	add	r2,r5,r2
 8001d00:	9826d13a 	srli	r19,r19,4
 8001d04:	10800003 	ldbu	r2,0(r2)
 8001d08:	e038d13a 	srli	fp,fp,4
 8001d0c:	18ffffc4 	addi	r3,r3,-1
 8001d10:	24e6b03a 	or	r19,r4,r19
 8001d14:	18800005 	stb	r2,0(r3)
 8001d18:	9f04b03a 	or	r2,r19,fp
 8001d1c:	103ff51e 	bne	r2,zero,8001cf4 <__flash_exceptions_start+0xf7e00cd4>
 8001d20:	db002817 	ldw	r12,160(sp)
 8001d24:	d8c03115 	stw	r3,196(sp)
 8001d28:	60e5c83a 	sub	r18,r12,r3
 8001d2c:	003ce806 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 8001d30:	dc002617 	ldw	r16,152(sp)
 8001d34:	0401b10e 	bge	zero,r16,80023fc <___vfprintf_internal_r+0x1864>
 8001d38:	db003117 	ldw	r12,196(sp)
 8001d3c:	dac03317 	ldw	r11,204(sp)
 8001d40:	62e1883a 	add	r16,r12,r11
 8001d44:	db003417 	ldw	r12,208(sp)
 8001d48:	5825883a 	mov	r18,r11
 8001d4c:	62c0010e 	bge	r12,r11,8001d54 <___vfprintf_internal_r+0x11bc>
 8001d50:	6025883a 	mov	r18,r12
 8001d54:	04800b0e 	bge	zero,r18,8001d84 <___vfprintf_internal_r+0x11ec>
 8001d58:	d8801f17 	ldw	r2,124(sp)
 8001d5c:	dac03117 	ldw	r11,196(sp)
 8001d60:	1c87883a 	add	r3,r3,r18
 8001d64:	10800044 	addi	r2,r2,1
 8001d68:	42c00015 	stw	r11,0(r8)
 8001d6c:	44800115 	stw	r18,4(r8)
 8001d70:	d8c02015 	stw	r3,128(sp)
 8001d74:	d8801f15 	stw	r2,124(sp)
 8001d78:	010001c4 	movi	r4,7
 8001d7c:	20824f16 	blt	r4,r2,80026bc <___vfprintf_internal_r+0x1b24>
 8001d80:	42000204 	addi	r8,r8,8
 8001d84:	90024b16 	blt	r18,zero,80026b4 <___vfprintf_internal_r+0x1b1c>
 8001d88:	db003417 	ldw	r12,208(sp)
 8001d8c:	64a5c83a 	sub	r18,r12,r18
 8001d90:	0480730e 	bge	zero,r18,8001f60 <___vfprintf_internal_r+0x13c8>
 8001d94:	05400404 	movi	r21,16
 8001d98:	d8801f17 	ldw	r2,124(sp)
 8001d9c:	ac817d0e 	bge	r21,r18,8002394 <___vfprintf_internal_r+0x17fc>
 8001da0:	01420074 	movhi	r5,2049
 8001da4:	297a3484 	addi	r5,r5,-5934
 8001da8:	d9402c15 	stw	r5,176(sp)
 8001dac:	070001c4 	movi	fp,7
 8001db0:	00000306 	br	8001dc0 <___vfprintf_internal_r+0x1228>
 8001db4:	42000204 	addi	r8,r8,8
 8001db8:	94bffc04 	addi	r18,r18,-16
 8001dbc:	ac81780e 	bge	r21,r18,80023a0 <___vfprintf_internal_r+0x1808>
 8001dc0:	18c00404 	addi	r3,r3,16
 8001dc4:	10800044 	addi	r2,r2,1
 8001dc8:	45000015 	stw	r20,0(r8)
 8001dcc:	45400115 	stw	r21,4(r8)
 8001dd0:	d8c02015 	stw	r3,128(sp)
 8001dd4:	d8801f15 	stw	r2,124(sp)
 8001dd8:	e0bff60e 	bge	fp,r2,8001db4 <__flash_exceptions_start+0xf7e00d94>
 8001ddc:	b009883a 	mov	r4,r22
 8001de0:	b80b883a 	mov	r5,r23
 8001de4:	d9801e04 	addi	r6,sp,120
 8001de8:	8007e600 	call	8007e60 <__sprint_r>
 8001dec:	103c5e1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001df0:	d8c02017 	ldw	r3,128(sp)
 8001df4:	d8801f17 	ldw	r2,124(sp)
 8001df8:	da000404 	addi	r8,sp,16
 8001dfc:	003fee06 	br	8001db8 <__flash_exceptions_start+0xf7e00d98>
 8001e00:	dac01e04 	addi	r11,sp,120
 8001e04:	0025883a 	mov	r18,zero
 8001e08:	dac03115 	stw	r11,196(sp)
 8001e0c:	003cb006 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 8001e10:	b009883a 	mov	r4,r22
 8001e14:	b80b883a 	mov	r5,r23
 8001e18:	d9801e04 	addi	r6,sp,120
 8001e1c:	8007e600 	call	8007e60 <__sprint_r>
 8001e20:	103c511e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001e24:	d8c02017 	ldw	r3,128(sp)
 8001e28:	d8802787 	ldb	r2,158(sp)
 8001e2c:	da000404 	addi	r8,sp,16
 8001e30:	003ceb06 	br	80011e0 <__flash_exceptions_start+0xf7e001c0>
 8001e34:	1cc00017 	ldw	r19,0(r3)
 8001e38:	dac02d17 	ldw	r11,180(sp)
 8001e3c:	9839d7fa 	srai	fp,r19,31
 8001e40:	5ac00104 	addi	r11,r11,4
 8001e44:	dac02d15 	stw	r11,180(sp)
 8001e48:	e005883a 	mov	r2,fp
 8001e4c:	003c8106 	br	8001054 <__flash_exceptions_start+0xf7e00034>
 8001e50:	657fffc4 	addi	r21,r12,-1
 8001e54:	057f5d0e 	bge	zero,r21,8001bcc <__flash_exceptions_start+0xf7e00bac>
 8001e58:	07000404 	movi	fp,16
 8001e5c:	e540900e 	bge	fp,r21,80020a0 <___vfprintf_internal_r+0x1508>
 8001e60:	01020074 	movhi	r4,2049
 8001e64:	213a3484 	addi	r4,r4,-5934
 8001e68:	d9002c15 	stw	r4,176(sp)
 8001e6c:	01c001c4 	movi	r7,7
 8001e70:	00000306 	br	8001e80 <___vfprintf_internal_r+0x12e8>
 8001e74:	94800204 	addi	r18,r18,8
 8001e78:	ad7ffc04 	addi	r21,r21,-16
 8001e7c:	e5408b0e 	bge	fp,r21,80020ac <___vfprintf_internal_r+0x1514>
 8001e80:	18c00404 	addi	r3,r3,16
 8001e84:	84000044 	addi	r16,r16,1
 8001e88:	95000015 	stw	r20,0(r18)
 8001e8c:	97000115 	stw	fp,4(r18)
 8001e90:	d8c02015 	stw	r3,128(sp)
 8001e94:	dc001f15 	stw	r16,124(sp)
 8001e98:	3c3ff60e 	bge	r7,r16,8001e74 <__flash_exceptions_start+0xf7e00e54>
 8001e9c:	b009883a 	mov	r4,r22
 8001ea0:	b80b883a 	mov	r5,r23
 8001ea4:	d9801e04 	addi	r6,sp,120
 8001ea8:	d9c03d15 	stw	r7,244(sp)
 8001eac:	8007e600 	call	8007e60 <__sprint_r>
 8001eb0:	d9c03d17 	ldw	r7,244(sp)
 8001eb4:	103c2c1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001eb8:	d8c02017 	ldw	r3,128(sp)
 8001ebc:	dc001f17 	ldw	r16,124(sp)
 8001ec0:	dc800404 	addi	r18,sp,16
 8001ec4:	003fec06 	br	8001e78 <__flash_exceptions_start+0xf7e00e58>
 8001ec8:	dac02d17 	ldw	r11,180(sp)
 8001ecc:	0039883a 	mov	fp,zero
 8001ed0:	0005883a 	mov	r2,zero
 8001ed4:	5cc00017 	ldw	r19,0(r11)
 8001ed8:	5ac00104 	addi	r11,r11,4
 8001edc:	dac02d15 	stw	r11,180(sp)
 8001ee0:	9807883a 	mov	r3,r19
 8001ee4:	003d5b06 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001ee8:	db002d17 	ldw	r12,180(sp)
 8001eec:	0039883a 	mov	fp,zero
 8001ef0:	00800044 	movi	r2,1
 8001ef4:	64c00017 	ldw	r19,0(r12)
 8001ef8:	63000104 	addi	r12,r12,4
 8001efc:	db002d15 	stw	r12,180(sp)
 8001f00:	9807883a 	mov	r3,r19
 8001f04:	003d5306 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001f08:	00800084 	movi	r2,2
 8001f0c:	9f06b03a 	or	r3,r19,fp
 8001f10:	003d5006 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8001f14:	10803fcc 	andi	r2,r2,255
 8001f18:	1080201c 	xori	r2,r2,128
 8001f1c:	10bfe004 	addi	r2,r2,-128
 8001f20:	01000c04 	movi	r4,48
 8001f24:	1101a526 	beq	r2,r4,80025bc <___vfprintf_internal_r+0x1a24>
 8001f28:	dac03117 	ldw	r11,196(sp)
 8001f2c:	db002817 	ldw	r12,160(sp)
 8001f30:	193fffc5 	stb	r4,-1(r3)
 8001f34:	5affffc4 	addi	r11,r11,-1
 8001f38:	dac03115 	stw	r11,196(sp)
 8001f3c:	62e5c83a 	sub	r18,r12,r11
 8001f40:	003c6306 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 8001f44:	b009883a 	mov	r4,r22
 8001f48:	b80b883a 	mov	r5,r23
 8001f4c:	d9801e04 	addi	r6,sp,120
 8001f50:	8007e600 	call	8007e60 <__sprint_r>
 8001f54:	103c041e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8001f58:	d8c02017 	ldw	r3,128(sp)
 8001f5c:	da000404 	addi	r8,sp,16
 8001f60:	db003117 	ldw	r12,196(sp)
 8001f64:	dac03417 	ldw	r11,208(sp)
 8001f68:	d8802617 	ldw	r2,152(sp)
 8001f6c:	62e5883a 	add	r18,r12,r11
 8001f70:	db003317 	ldw	r12,204(sp)
 8001f74:	13000216 	blt	r2,r12,8001f80 <___vfprintf_internal_r+0x13e8>
 8001f78:	8900004c 	andi	r4,r17,1
 8001f7c:	20000c26 	beq	r4,zero,8001fb0 <___vfprintf_internal_r+0x1418>
 8001f80:	dac03817 	ldw	r11,224(sp)
 8001f84:	d9001f17 	ldw	r4,124(sp)
 8001f88:	db003517 	ldw	r12,212(sp)
 8001f8c:	1ac7883a 	add	r3,r3,r11
 8001f90:	21000044 	addi	r4,r4,1
 8001f94:	43000015 	stw	r12,0(r8)
 8001f98:	42c00115 	stw	r11,4(r8)
 8001f9c:	d8c02015 	stw	r3,128(sp)
 8001fa0:	d9001f15 	stw	r4,124(sp)
 8001fa4:	014001c4 	movi	r5,7
 8001fa8:	2901cc16 	blt	r5,r4,80026dc <___vfprintf_internal_r+0x1b44>
 8001fac:	42000204 	addi	r8,r8,8
 8001fb0:	dac03317 	ldw	r11,204(sp)
 8001fb4:	8489c83a 	sub	r4,r16,r18
 8001fb8:	5885c83a 	sub	r2,r11,r2
 8001fbc:	1021883a 	mov	r16,r2
 8001fc0:	2080010e 	bge	r4,r2,8001fc8 <___vfprintf_internal_r+0x1430>
 8001fc4:	2021883a 	mov	r16,r4
 8001fc8:	04000a0e 	bge	zero,r16,8001ff4 <___vfprintf_internal_r+0x145c>
 8001fcc:	d9001f17 	ldw	r4,124(sp)
 8001fd0:	1c07883a 	add	r3,r3,r16
 8001fd4:	44800015 	stw	r18,0(r8)
 8001fd8:	21000044 	addi	r4,r4,1
 8001fdc:	44000115 	stw	r16,4(r8)
 8001fe0:	d8c02015 	stw	r3,128(sp)
 8001fe4:	d9001f15 	stw	r4,124(sp)
 8001fe8:	014001c4 	movi	r5,7
 8001fec:	2901e316 	blt	r5,r4,800277c <___vfprintf_internal_r+0x1be4>
 8001ff0:	42000204 	addi	r8,r8,8
 8001ff4:	8001df16 	blt	r16,zero,8002774 <___vfprintf_internal_r+0x1bdc>
 8001ff8:	1421c83a 	sub	r16,r2,r16
 8001ffc:	043ccc0e 	bge	zero,r16,8001330 <__flash_exceptions_start+0xf7e00310>
 8002000:	04800404 	movi	r18,16
 8002004:	d8801f17 	ldw	r2,124(sp)
 8002008:	943efc0e 	bge	r18,r16,8001bfc <__flash_exceptions_start+0xf7e00bdc>
 800200c:	01420074 	movhi	r5,2049
 8002010:	297a3484 	addi	r5,r5,-5934
 8002014:	d9402c15 	stw	r5,176(sp)
 8002018:	054001c4 	movi	r21,7
 800201c:	00000306 	br	800202c <___vfprintf_internal_r+0x1494>
 8002020:	42000204 	addi	r8,r8,8
 8002024:	843ffc04 	addi	r16,r16,-16
 8002028:	943ef70e 	bge	r18,r16,8001c08 <__flash_exceptions_start+0xf7e00be8>
 800202c:	18c00404 	addi	r3,r3,16
 8002030:	10800044 	addi	r2,r2,1
 8002034:	45000015 	stw	r20,0(r8)
 8002038:	44800115 	stw	r18,4(r8)
 800203c:	d8c02015 	stw	r3,128(sp)
 8002040:	d8801f15 	stw	r2,124(sp)
 8002044:	a8bff60e 	bge	r21,r2,8002020 <__flash_exceptions_start+0xf7e01000>
 8002048:	b009883a 	mov	r4,r22
 800204c:	b80b883a 	mov	r5,r23
 8002050:	d9801e04 	addi	r6,sp,120
 8002054:	8007e600 	call	8007e60 <__sprint_r>
 8002058:	103bc31e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 800205c:	d8c02017 	ldw	r3,128(sp)
 8002060:	d8801f17 	ldw	r2,124(sp)
 8002064:	da000404 	addi	r8,sp,16
 8002068:	003fee06 	br	8002024 <__flash_exceptions_start+0xf7e01004>
 800206c:	8888703a 	and	r4,r17,r2
 8002070:	203eab1e 	bne	r4,zero,8001b20 <__flash_exceptions_start+0xf7e00b00>
 8002074:	dc001f17 	ldw	r16,124(sp)
 8002078:	db003117 	ldw	r12,196(sp)
 800207c:	40800115 	stw	r2,4(r8)
 8002080:	84000044 	addi	r16,r16,1
 8002084:	43000015 	stw	r12,0(r8)
 8002088:	d8c02015 	stw	r3,128(sp)
 800208c:	dc001f15 	stw	r16,124(sp)
 8002090:	008001c4 	movi	r2,7
 8002094:	14000e16 	blt	r2,r16,80020d0 <___vfprintf_internal_r+0x1538>
 8002098:	44800204 	addi	r18,r8,8
 800209c:	003ecb06 	br	8001bcc <__flash_exceptions_start+0xf7e00bac>
 80020a0:	00820074 	movhi	r2,2049
 80020a4:	10ba3484 	addi	r2,r2,-5934
 80020a8:	d8802c15 	stw	r2,176(sp)
 80020ac:	dac02c17 	ldw	r11,176(sp)
 80020b0:	1d47883a 	add	r3,r3,r21
 80020b4:	84000044 	addi	r16,r16,1
 80020b8:	92c00015 	stw	r11,0(r18)
 80020bc:	95400115 	stw	r21,4(r18)
 80020c0:	d8c02015 	stw	r3,128(sp)
 80020c4:	dc001f15 	stw	r16,124(sp)
 80020c8:	008001c4 	movi	r2,7
 80020cc:	143ebe0e 	bge	r2,r16,8001bc8 <__flash_exceptions_start+0xf7e00ba8>
 80020d0:	b009883a 	mov	r4,r22
 80020d4:	b80b883a 	mov	r5,r23
 80020d8:	d9801e04 	addi	r6,sp,120
 80020dc:	8007e600 	call	8007e60 <__sprint_r>
 80020e0:	103ba11e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80020e4:	d8c02017 	ldw	r3,128(sp)
 80020e8:	dc001f17 	ldw	r16,124(sp)
 80020ec:	dc800404 	addi	r18,sp,16
 80020f0:	003eb606 	br	8001bcc <__flash_exceptions_start+0xf7e00bac>
 80020f4:	b009883a 	mov	r4,r22
 80020f8:	b80b883a 	mov	r5,r23
 80020fc:	d9801e04 	addi	r6,sp,120
 8002100:	8007e600 	call	8007e60 <__sprint_r>
 8002104:	103b981e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8002108:	d8c02017 	ldw	r3,128(sp)
 800210c:	dc001f17 	ldw	r16,124(sp)
 8002110:	da000404 	addi	r8,sp,16
 8002114:	003e8d06 	br	8001b4c <__flash_exceptions_start+0xf7e00b2c>
 8002118:	b009883a 	mov	r4,r22
 800211c:	b80b883a 	mov	r5,r23
 8002120:	d9801e04 	addi	r6,sp,120
 8002124:	8007e600 	call	8007e60 <__sprint_r>
 8002128:	103b8f1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 800212c:	d8c02017 	ldw	r3,128(sp)
 8002130:	dc001f17 	ldw	r16,124(sp)
 8002134:	dc800404 	addi	r18,sp,16
 8002138:	003e8f06 	br	8001b78 <__flash_exceptions_start+0xf7e00b58>
 800213c:	db001e04 	addi	r12,sp,120
 8002140:	0025883a 	mov	r18,zero
 8002144:	db003115 	stw	r12,196(sp)
 8002148:	003be106 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 800214c:	b009883a 	mov	r4,r22
 8002150:	b80b883a 	mov	r5,r23
 8002154:	d9801e04 	addi	r6,sp,120
 8002158:	8007e600 	call	8007e60 <__sprint_r>
 800215c:	103b821e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8002160:	d8c02017 	ldw	r3,128(sp)
 8002164:	da000404 	addi	r8,sp,16
 8002168:	003c3b06 	br	8001258 <__flash_exceptions_start+0xf7e00238>
 800216c:	04e7c83a 	sub	r19,zero,r19
 8002170:	9804c03a 	cmpne	r2,r19,zero
 8002174:	0739c83a 	sub	fp,zero,fp
 8002178:	e0b9c83a 	sub	fp,fp,r2
 800217c:	05400b44 	movi	r21,45
 8002180:	dd402785 	stb	r21,158(sp)
 8002184:	da403215 	stw	r9,200(sp)
 8002188:	00800044 	movi	r2,1
 800218c:	9f06b03a 	or	r3,r19,fp
 8002190:	003bb506 	br	8001068 <__flash_exceptions_start+0xf7e00048>
 8002194:	da003f15 	stw	r8,252(sp)
 8002198:	da403e15 	stw	r9,248(sp)
 800219c:	8007abc0 	call	8007abc <__fpclassifyd>
 80021a0:	da003f17 	ldw	r8,252(sp)
 80021a4:	da403e17 	ldw	r9,248(sp)
 80021a8:	1000ce26 	beq	r2,zero,80024e4 <___vfprintf_internal_r+0x194c>
 80021ac:	057ff7c4 	movi	r21,-33
 80021b0:	00bfffc4 	movi	r2,-1
 80021b4:	856a703a 	and	r21,r16,r21
 80021b8:	4881e826 	beq	r9,r2,800295c <___vfprintf_internal_r+0x1dc4>
 80021bc:	008011c4 	movi	r2,71
 80021c0:	a881e326 	beq	r21,r2,8002950 <___vfprintf_internal_r+0x1db8>
 80021c4:	db003917 	ldw	r12,228(sp)
 80021c8:	8ac04014 	ori	r11,r17,256
 80021cc:	dac02d15 	stw	r11,180(sp)
 80021d0:	6001ed16 	blt	r12,zero,8002988 <___vfprintf_internal_r+0x1df0>
 80021d4:	dc803917 	ldw	r18,228(sp)
 80021d8:	d8002b05 	stb	zero,172(sp)
 80021dc:	00801984 	movi	r2,102
 80021e0:	80811826 	beq	r16,r2,8002644 <___vfprintf_internal_r+0x1aac>
 80021e4:	00801184 	movi	r2,70
 80021e8:	80811626 	beq	r16,r2,8002644 <___vfprintf_internal_r+0x1aac>
 80021ec:	00801144 	movi	r2,69
 80021f0:	a881e926 	beq	r21,r2,8002998 <___vfprintf_internal_r+0x1e00>
 80021f4:	4839883a 	mov	fp,r9
 80021f8:	d8802604 	addi	r2,sp,152
 80021fc:	d8800115 	stw	r2,4(sp)
 8002200:	d9403717 	ldw	r5,220(sp)
 8002204:	d8802504 	addi	r2,sp,148
 8002208:	d8800215 	stw	r2,8(sp)
 800220c:	d8802104 	addi	r2,sp,132
 8002210:	df000015 	stw	fp,0(sp)
 8002214:	d8800315 	stw	r2,12(sp)
 8002218:	b009883a 	mov	r4,r22
 800221c:	900d883a 	mov	r6,r18
 8002220:	01c00084 	movi	r7,2
 8002224:	da003f15 	stw	r8,252(sp)
 8002228:	da403e15 	stw	r9,248(sp)
 800222c:	8002f1c0 	call	8002f1c <_dtoa_r>
 8002230:	d8803115 	stw	r2,196(sp)
 8002234:	008019c4 	movi	r2,103
 8002238:	da003f17 	ldw	r8,252(sp)
 800223c:	da403e17 	ldw	r9,248(sp)
 8002240:	80800226 	beq	r16,r2,800224c <___vfprintf_internal_r+0x16b4>
 8002244:	008011c4 	movi	r2,71
 8002248:	8081101e 	bne	r16,r2,800268c <___vfprintf_internal_r+0x1af4>
 800224c:	8880004c 	andi	r2,r17,1
 8002250:	1001dd26 	beq	r2,zero,80029c8 <___vfprintf_internal_r+0x1e30>
 8002254:	db003117 	ldw	r12,196(sp)
 8002258:	6715883a 	add	r10,r12,fp
 800225c:	d9003717 	ldw	r4,220(sp)
 8002260:	900b883a 	mov	r5,r18
 8002264:	000d883a 	mov	r6,zero
 8002268:	000f883a 	mov	r7,zero
 800226c:	da003f15 	stw	r8,252(sp)
 8002270:	da403e15 	stw	r9,248(sp)
 8002274:	da803d15 	stw	r10,244(sp)
 8002278:	800b9040 	call	800b904 <__eqdf2>
 800227c:	da003f17 	ldw	r8,252(sp)
 8002280:	da403e17 	ldw	r9,248(sp)
 8002284:	da803d17 	ldw	r10,244(sp)
 8002288:	10016526 	beq	r2,zero,8002820 <___vfprintf_internal_r+0x1c88>
 800228c:	d8802117 	ldw	r2,132(sp)
 8002290:	1280062e 	bgeu	r2,r10,80022ac <___vfprintf_internal_r+0x1714>
 8002294:	01000c04 	movi	r4,48
 8002298:	10c00044 	addi	r3,r2,1
 800229c:	d8c02115 	stw	r3,132(sp)
 80022a0:	11000005 	stb	r4,0(r2)
 80022a4:	d8802117 	ldw	r2,132(sp)
 80022a8:	12bffb36 	bltu	r2,r10,8002298 <__flash_exceptions_start+0xf7e01278>
 80022ac:	db003117 	ldw	r12,196(sp)
 80022b0:	1305c83a 	sub	r2,r2,r12
 80022b4:	d8803315 	stw	r2,204(sp)
 80022b8:	008011c4 	movi	r2,71
 80022bc:	a8814d26 	beq	r21,r2,80027f4 <___vfprintf_internal_r+0x1c5c>
 80022c0:	00801944 	movi	r2,101
 80022c4:	1402060e 	bge	r2,r16,8002ae0 <___vfprintf_internal_r+0x1f48>
 80022c8:	00801984 	movi	r2,102
 80022cc:	8081b426 	beq	r16,r2,80029a0 <___vfprintf_internal_r+0x1e08>
 80022d0:	db002617 	ldw	r12,152(sp)
 80022d4:	db003415 	stw	r12,208(sp)
 80022d8:	db003417 	ldw	r12,208(sp)
 80022dc:	dac03317 	ldw	r11,204(sp)
 80022e0:	62c1a016 	blt	r12,r11,8002964 <___vfprintf_internal_r+0x1dcc>
 80022e4:	8c40004c 	andi	r17,r17,1
 80022e8:	8801bf1e 	bne	r17,zero,80029e8 <___vfprintf_internal_r+0x1e50>
 80022ec:	6005883a 	mov	r2,r12
 80022f0:	6001b316 	blt	r12,zero,80029c0 <___vfprintf_internal_r+0x1e28>
 80022f4:	dc803417 	ldw	r18,208(sp)
 80022f8:	df002b07 	ldb	fp,172(sp)
 80022fc:	e0012e1e 	bne	fp,zero,80027b8 <___vfprintf_internal_r+0x1c20>
 8002300:	dc402d17 	ldw	r17,180(sp)
 8002304:	dd402783 	ldbu	r21,158(sp)
 8002308:	d8802b15 	stw	r2,172(sp)
 800230c:	dcc02d15 	stw	r19,180(sp)
 8002310:	d8003215 	stw	zero,200(sp)
 8002314:	003b7306 	br	80010e4 <__flash_exceptions_start+0xf7e000c4>
 8002318:	00800084 	movi	r2,2
 800231c:	003c4d06 	br	8001454 <__flash_exceptions_start+0xf7e00434>
 8002320:	8880040c 	andi	r2,r17,16
 8002324:	1000091e 	bne	r2,zero,800234c <___vfprintf_internal_r+0x17b4>
 8002328:	8c40100c 	andi	r17,r17,64
 800232c:	88000726 	beq	r17,zero,800234c <___vfprintf_internal_r+0x17b4>
 8002330:	db002d17 	ldw	r12,180(sp)
 8002334:	dac02f17 	ldw	r11,188(sp)
 8002338:	60800017 	ldw	r2,0(r12)
 800233c:	63000104 	addi	r12,r12,4
 8002340:	db002d15 	stw	r12,180(sp)
 8002344:	12c0000d 	sth	r11,0(r2)
 8002348:	003a4e06 	br	8000c84 <__flash_exceptions_start+0xf7dffc64>
 800234c:	db002d17 	ldw	r12,180(sp)
 8002350:	dac02f17 	ldw	r11,188(sp)
 8002354:	60800017 	ldw	r2,0(r12)
 8002358:	63000104 	addi	r12,r12,4
 800235c:	db002d15 	stw	r12,180(sp)
 8002360:	12c00015 	stw	r11,0(r2)
 8002364:	003a4706 	br	8000c84 <__flash_exceptions_start+0xf7dffc64>
 8002368:	1c000007 	ldb	r16,0(r3)
 800236c:	1805883a 	mov	r2,r3
 8002370:	003a6e06 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 8002374:	88c0100c 	andi	r3,r17,64
 8002378:	18006b26 	beq	r3,zero,8002528 <___vfprintf_internal_r+0x1990>
 800237c:	dac02d17 	ldw	r11,180(sp)
 8002380:	14c0000b 	ldhu	r19,0(r2)
 8002384:	0039883a 	mov	fp,zero
 8002388:	5ac00104 	addi	r11,r11,4
 800238c:	dac02d15 	stw	r11,180(sp)
 8002390:	003cb206 	br	800165c <__flash_exceptions_start+0xf7e0063c>
 8002394:	01020074 	movhi	r4,2049
 8002398:	213a3484 	addi	r4,r4,-5934
 800239c:	d9002c15 	stw	r4,176(sp)
 80023a0:	dac02c17 	ldw	r11,176(sp)
 80023a4:	1c87883a 	add	r3,r3,r18
 80023a8:	10800044 	addi	r2,r2,1
 80023ac:	42c00015 	stw	r11,0(r8)
 80023b0:	44800115 	stw	r18,4(r8)
 80023b4:	d8c02015 	stw	r3,128(sp)
 80023b8:	d8801f15 	stw	r2,124(sp)
 80023bc:	010001c4 	movi	r4,7
 80023c0:	20bee016 	blt	r4,r2,8001f44 <__flash_exceptions_start+0xf7e00f24>
 80023c4:	42000204 	addi	r8,r8,8
 80023c8:	003ee506 	br	8001f60 <__flash_exceptions_start+0xf7e00f40>
 80023cc:	01020074 	movhi	r4,2049
 80023d0:	213a3484 	addi	r4,r4,-5934
 80023d4:	d9002c15 	stw	r4,176(sp)
 80023d8:	003bbe06 	br	80012d4 <__flash_exceptions_start+0xf7e002b4>
 80023dc:	b009883a 	mov	r4,r22
 80023e0:	b80b883a 	mov	r5,r23
 80023e4:	d9801e04 	addi	r6,sp,120
 80023e8:	8007e600 	call	8007e60 <__sprint_r>
 80023ec:	103ade1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80023f0:	d8c02017 	ldw	r3,128(sp)
 80023f4:	da000404 	addi	r8,sp,16
 80023f8:	003d6b06 	br	80019a8 <__flash_exceptions_start+0xf7e00988>
 80023fc:	d8801f17 	ldw	r2,124(sp)
 8002400:	03020074 	movhi	r12,2049
 8002404:	01000044 	movi	r4,1
 8002408:	18c00044 	addi	r3,r3,1
 800240c:	10800044 	addi	r2,r2,1
 8002410:	633a3404 	addi	r12,r12,-5936
 8002414:	41000115 	stw	r4,4(r8)
 8002418:	43000015 	stw	r12,0(r8)
 800241c:	d8c02015 	stw	r3,128(sp)
 8002420:	d8801f15 	stw	r2,124(sp)
 8002424:	010001c4 	movi	r4,7
 8002428:	20804916 	blt	r4,r2,8002550 <___vfprintf_internal_r+0x19b8>
 800242c:	42000204 	addi	r8,r8,8
 8002430:	8000041e 	bne	r16,zero,8002444 <___vfprintf_internal_r+0x18ac>
 8002434:	dac03317 	ldw	r11,204(sp)
 8002438:	5800021e 	bne	r11,zero,8002444 <___vfprintf_internal_r+0x18ac>
 800243c:	8880004c 	andi	r2,r17,1
 8002440:	103bbb26 	beq	r2,zero,8001330 <__flash_exceptions_start+0xf7e00310>
 8002444:	db003817 	ldw	r12,224(sp)
 8002448:	d8801f17 	ldw	r2,124(sp)
 800244c:	dac03517 	ldw	r11,212(sp)
 8002450:	1b07883a 	add	r3,r3,r12
 8002454:	10800044 	addi	r2,r2,1
 8002458:	42c00015 	stw	r11,0(r8)
 800245c:	43000115 	stw	r12,4(r8)
 8002460:	d8c02015 	stw	r3,128(sp)
 8002464:	d8801f15 	stw	r2,124(sp)
 8002468:	010001c4 	movi	r4,7
 800246c:	20812e16 	blt	r4,r2,8002928 <___vfprintf_internal_r+0x1d90>
 8002470:	42000204 	addi	r8,r8,8
 8002474:	0421c83a 	sub	r16,zero,r16
 8002478:	04005c0e 	bge	zero,r16,80025ec <___vfprintf_internal_r+0x1a54>
 800247c:	04800404 	movi	r18,16
 8002480:	94009f0e 	bge	r18,r16,8002700 <___vfprintf_internal_r+0x1b68>
 8002484:	01020074 	movhi	r4,2049
 8002488:	213a3484 	addi	r4,r4,-5934
 800248c:	d9002c15 	stw	r4,176(sp)
 8002490:	054001c4 	movi	r21,7
 8002494:	00000306 	br	80024a4 <___vfprintf_internal_r+0x190c>
 8002498:	42000204 	addi	r8,r8,8
 800249c:	843ffc04 	addi	r16,r16,-16
 80024a0:	94009a0e 	bge	r18,r16,800270c <___vfprintf_internal_r+0x1b74>
 80024a4:	18c00404 	addi	r3,r3,16
 80024a8:	10800044 	addi	r2,r2,1
 80024ac:	45000015 	stw	r20,0(r8)
 80024b0:	44800115 	stw	r18,4(r8)
 80024b4:	d8c02015 	stw	r3,128(sp)
 80024b8:	d8801f15 	stw	r2,124(sp)
 80024bc:	a8bff60e 	bge	r21,r2,8002498 <__flash_exceptions_start+0xf7e01478>
 80024c0:	b009883a 	mov	r4,r22
 80024c4:	b80b883a 	mov	r5,r23
 80024c8:	d9801e04 	addi	r6,sp,120
 80024cc:	8007e600 	call	8007e60 <__sprint_r>
 80024d0:	103aa51e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80024d4:	d8c02017 	ldw	r3,128(sp)
 80024d8:	d8801f17 	ldw	r2,124(sp)
 80024dc:	da000404 	addi	r8,sp,16
 80024e0:	003fee06 	br	800249c <__flash_exceptions_start+0xf7e0147c>
 80024e4:	008011c4 	movi	r2,71
 80024e8:	1400be16 	blt	r2,r16,80027e4 <___vfprintf_internal_r+0x1c4c>
 80024ec:	03020074 	movhi	r12,2049
 80024f0:	633a2604 	addi	r12,r12,-5992
 80024f4:	db003115 	stw	r12,196(sp)
 80024f8:	00c000c4 	movi	r3,3
 80024fc:	00bfdfc4 	movi	r2,-129
 8002500:	d8c02b15 	stw	r3,172(sp)
 8002504:	88a2703a 	and	r17,r17,r2
 8002508:	dd402783 	ldbu	r21,158(sp)
 800250c:	dcc02d15 	stw	r19,180(sp)
 8002510:	1825883a 	mov	r18,r3
 8002514:	d8003215 	stw	zero,200(sp)
 8002518:	d8003415 	stw	zero,208(sp)
 800251c:	003af106 	br	80010e4 <__flash_exceptions_start+0xf7e000c4>
 8002520:	4825883a 	mov	r18,r9
 8002524:	003c9306 	br	8001774 <__flash_exceptions_start+0xf7e00754>
 8002528:	db002d17 	ldw	r12,180(sp)
 800252c:	14c00017 	ldw	r19,0(r2)
 8002530:	0039883a 	mov	fp,zero
 8002534:	63000104 	addi	r12,r12,4
 8002538:	db002d15 	stw	r12,180(sp)
 800253c:	003c4706 	br	800165c <__flash_exceptions_start+0xf7e0063c>
 8002540:	00820074 	movhi	r2,2049
 8002544:	10ba2404 	addi	r2,r2,-6000
 8002548:	d8803115 	stw	r2,196(sp)
 800254c:	003bf106 	br	8001514 <__flash_exceptions_start+0xf7e004f4>
 8002550:	b009883a 	mov	r4,r22
 8002554:	b80b883a 	mov	r5,r23
 8002558:	d9801e04 	addi	r6,sp,120
 800255c:	8007e600 	call	8007e60 <__sprint_r>
 8002560:	103a811e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8002564:	dc002617 	ldw	r16,152(sp)
 8002568:	d8c02017 	ldw	r3,128(sp)
 800256c:	da000404 	addi	r8,sp,16
 8002570:	003faf06 	br	8002430 <__flash_exceptions_start+0xf7e01410>
 8002574:	db002e17 	ldw	r12,184(sp)
 8002578:	1805883a 	mov	r2,r3
 800257c:	dac02d15 	stw	r11,180(sp)
 8002580:	0319c83a 	sub	r12,zero,r12
 8002584:	db002e15 	stw	r12,184(sp)
 8002588:	003a8206 	br	8000f94 <__flash_exceptions_start+0xf7dfff74>
 800258c:	18800044 	addi	r2,r3,1
 8002590:	8c400814 	ori	r17,r17,32
 8002594:	1c000047 	ldb	r16,1(r3)
 8002598:	0039e406 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 800259c:	b009883a 	mov	r4,r22
 80025a0:	b80b883a 	mov	r5,r23
 80025a4:	d9801e04 	addi	r6,sp,120
 80025a8:	8007e600 	call	8007e60 <__sprint_r>
 80025ac:	103a6e1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80025b0:	d8c02017 	ldw	r3,128(sp)
 80025b4:	da000404 	addi	r8,sp,16
 80025b8:	003d0c06 	br	80019ec <__flash_exceptions_start+0xf7e009cc>
 80025bc:	db002817 	ldw	r12,160(sp)
 80025c0:	d8c03117 	ldw	r3,196(sp)
 80025c4:	60e5c83a 	sub	r18,r12,r3
 80025c8:	003ac106 	br	80010d0 <__flash_exceptions_start+0xf7e000b0>
 80025cc:	b009883a 	mov	r4,r22
 80025d0:	b80b883a 	mov	r5,r23
 80025d4:	d9801e04 	addi	r6,sp,120
 80025d8:	8007e600 	call	8007e60 <__sprint_r>
 80025dc:	103a621e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80025e0:	d8c02017 	ldw	r3,128(sp)
 80025e4:	d8801f17 	ldw	r2,124(sp)
 80025e8:	da000404 	addi	r8,sp,16
 80025ec:	db003317 	ldw	r12,204(sp)
 80025f0:	dac03117 	ldw	r11,196(sp)
 80025f4:	10800044 	addi	r2,r2,1
 80025f8:	1b07883a 	add	r3,r3,r12
 80025fc:	42c00015 	stw	r11,0(r8)
 8002600:	43000115 	stw	r12,4(r8)
 8002604:	d8c02015 	stw	r3,128(sp)
 8002608:	d8801f15 	stw	r2,124(sp)
 800260c:	010001c4 	movi	r4,7
 8002610:	20bb460e 	bge	r4,r2,800132c <__flash_exceptions_start+0xf7e0030c>
 8002614:	003d8506 	br	8001c2c <__flash_exceptions_start+0xf7e00c0c>
 8002618:	da003f15 	stw	r8,252(sp)
 800261c:	8000b000 	call	8000b00 <strlen>
 8002620:	1025883a 	mov	r18,r2
 8002624:	da003f17 	ldw	r8,252(sp)
 8002628:	903c540e 	bge	r18,zero,800177c <__flash_exceptions_start+0xf7e0075c>
 800262c:	0005883a 	mov	r2,zero
 8002630:	003c5206 	br	800177c <__flash_exceptions_start+0xf7e0075c>
 8002634:	01020074 	movhi	r4,2049
 8002638:	213a3884 	addi	r4,r4,-5918
 800263c:	d9003615 	stw	r4,216(sp)
 8002640:	003adc06 	br	80011b4 <__flash_exceptions_start+0xf7e00194>
 8002644:	d8802604 	addi	r2,sp,152
 8002648:	d8800115 	stw	r2,4(sp)
 800264c:	d9403717 	ldw	r5,220(sp)
 8002650:	d8802504 	addi	r2,sp,148
 8002654:	d8800215 	stw	r2,8(sp)
 8002658:	d8802104 	addi	r2,sp,132
 800265c:	da400015 	stw	r9,0(sp)
 8002660:	d8800315 	stw	r2,12(sp)
 8002664:	b009883a 	mov	r4,r22
 8002668:	900d883a 	mov	r6,r18
 800266c:	01c000c4 	movi	r7,3
 8002670:	da003f15 	stw	r8,252(sp)
 8002674:	da403e15 	stw	r9,248(sp)
 8002678:	8002f1c0 	call	8002f1c <_dtoa_r>
 800267c:	da403e17 	ldw	r9,248(sp)
 8002680:	da003f17 	ldw	r8,252(sp)
 8002684:	d8803115 	stw	r2,196(sp)
 8002688:	4839883a 	mov	fp,r9
 800268c:	dac03117 	ldw	r11,196(sp)
 8002690:	00801184 	movi	r2,70
 8002694:	5f15883a 	add	r10,r11,fp
 8002698:	a8bef01e 	bne	r21,r2,800225c <__flash_exceptions_start+0xf7e0123c>
 800269c:	59000007 	ldb	r4,0(r11)
 80026a0:	00800c04 	movi	r2,48
 80026a4:	2080d526 	beq	r4,r2,80029fc <___vfprintf_internal_r+0x1e64>
 80026a8:	d8c02617 	ldw	r3,152(sp)
 80026ac:	50d5883a 	add	r10,r10,r3
 80026b0:	003eea06 	br	800225c <__flash_exceptions_start+0xf7e0123c>
 80026b4:	0025883a 	mov	r18,zero
 80026b8:	003db306 	br	8001d88 <__flash_exceptions_start+0xf7e00d68>
 80026bc:	b009883a 	mov	r4,r22
 80026c0:	b80b883a 	mov	r5,r23
 80026c4:	d9801e04 	addi	r6,sp,120
 80026c8:	8007e600 	call	8007e60 <__sprint_r>
 80026cc:	103a261e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80026d0:	d8c02017 	ldw	r3,128(sp)
 80026d4:	da000404 	addi	r8,sp,16
 80026d8:	003daa06 	br	8001d84 <__flash_exceptions_start+0xf7e00d64>
 80026dc:	b009883a 	mov	r4,r22
 80026e0:	b80b883a 	mov	r5,r23
 80026e4:	d9801e04 	addi	r6,sp,120
 80026e8:	8007e600 	call	8007e60 <__sprint_r>
 80026ec:	103a1e1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 80026f0:	d8802617 	ldw	r2,152(sp)
 80026f4:	d8c02017 	ldw	r3,128(sp)
 80026f8:	da000404 	addi	r8,sp,16
 80026fc:	003e2c06 	br	8001fb0 <__flash_exceptions_start+0xf7e00f90>
 8002700:	03020074 	movhi	r12,2049
 8002704:	633a3484 	addi	r12,r12,-5934
 8002708:	db002c15 	stw	r12,176(sp)
 800270c:	dac02c17 	ldw	r11,176(sp)
 8002710:	1c07883a 	add	r3,r3,r16
 8002714:	10800044 	addi	r2,r2,1
 8002718:	42c00015 	stw	r11,0(r8)
 800271c:	44000115 	stw	r16,4(r8)
 8002720:	d8c02015 	stw	r3,128(sp)
 8002724:	d8801f15 	stw	r2,124(sp)
 8002728:	010001c4 	movi	r4,7
 800272c:	20bfa716 	blt	r4,r2,80025cc <__flash_exceptions_start+0xf7e015ac>
 8002730:	42000204 	addi	r8,r8,8
 8002734:	003fad06 	br	80025ec <__flash_exceptions_start+0xf7e015cc>
 8002738:	00800184 	movi	r2,6
 800273c:	1240012e 	bgeu	r2,r9,8002744 <___vfprintf_internal_r+0x1bac>
 8002740:	1013883a 	mov	r9,r2
 8002744:	4825883a 	mov	r18,r9
 8002748:	4805883a 	mov	r2,r9
 800274c:	4800c216 	blt	r9,zero,8002a58 <___vfprintf_internal_r+0x1ec0>
 8002750:	d8802b15 	stw	r2,172(sp)
 8002754:	00820074 	movhi	r2,2049
 8002758:	10ba3204 	addi	r2,r2,-5944
 800275c:	d8803115 	stw	r2,196(sp)
 8002760:	dcc02d15 	stw	r19,180(sp)
 8002764:	d8003215 	stw	zero,200(sp)
 8002768:	d8003415 	stw	zero,208(sp)
 800276c:	0005883a 	mov	r2,zero
 8002770:	003a6306 	br	8001100 <__flash_exceptions_start+0xf7e000e0>
 8002774:	0021883a 	mov	r16,zero
 8002778:	003e1f06 	br	8001ff8 <__flash_exceptions_start+0xf7e00fd8>
 800277c:	b009883a 	mov	r4,r22
 8002780:	b80b883a 	mov	r5,r23
 8002784:	d9801e04 	addi	r6,sp,120
 8002788:	8007e600 	call	8007e60 <__sprint_r>
 800278c:	1039f61e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 8002790:	d8802617 	ldw	r2,152(sp)
 8002794:	db003317 	ldw	r12,204(sp)
 8002798:	d8c02017 	ldw	r3,128(sp)
 800279c:	da000404 	addi	r8,sp,16
 80027a0:	6085c83a 	sub	r2,r12,r2
 80027a4:	003e1306 	br	8001ff4 <__flash_exceptions_start+0xf7e00fd4>
 80027a8:	03020074 	movhi	r12,2049
 80027ac:	633a3884 	addi	r12,r12,-5918
 80027b0:	db003615 	stw	r12,216(sp)
 80027b4:	003b0206 	br	80013c0 <__flash_exceptions_start+0xf7e003a0>
 80027b8:	00c00b44 	movi	r3,45
 80027bc:	d8802b15 	stw	r2,172(sp)
 80027c0:	dc402d17 	ldw	r17,180(sp)
 80027c4:	d8c02785 	stb	r3,158(sp)
 80027c8:	dcc02d15 	stw	r19,180(sp)
 80027cc:	d8003215 	stw	zero,200(sp)
 80027d0:	00800b44 	movi	r2,45
 80027d4:	003a4706 	br	80010f4 <__flash_exceptions_start+0xf7e000d4>
 80027d8:	05400b44 	movi	r21,45
 80027dc:	dd402785 	stb	r21,158(sp)
 80027e0:	003b4706 	br	8001500 <__flash_exceptions_start+0xf7e004e0>
 80027e4:	00820074 	movhi	r2,2049
 80027e8:	10ba2704 	addi	r2,r2,-5988
 80027ec:	d8803115 	stw	r2,196(sp)
 80027f0:	003f4106 	br	80024f8 <__flash_exceptions_start+0xf7e014d8>
 80027f4:	d8c02617 	ldw	r3,152(sp)
 80027f8:	00bfff44 	movi	r2,-3
 80027fc:	18801116 	blt	r3,r2,8002844 <___vfprintf_internal_r+0x1cac>
 8002800:	48c01016 	blt	r9,r3,8002844 <___vfprintf_internal_r+0x1cac>
 8002804:	d8c03415 	stw	r3,208(sp)
 8002808:	040019c4 	movi	r16,103
 800280c:	003eb206 	br	80022d8 <__flash_exceptions_start+0xf7e012b8>
 8002810:	01020074 	movhi	r4,2049
 8002814:	213a3484 	addi	r4,r4,-5934
 8002818:	d9002c15 	stw	r4,176(sp)
 800281c:	003cb106 	br	8001ae4 <__flash_exceptions_start+0xf7e00ac4>
 8002820:	5005883a 	mov	r2,r10
 8002824:	003ea106 	br	80022ac <__flash_exceptions_start+0xf7e0128c>
 8002828:	da402b15 	stw	r9,172(sp)
 800282c:	dd402783 	ldbu	r21,158(sp)
 8002830:	4825883a 	mov	r18,r9
 8002834:	dcc02d15 	stw	r19,180(sp)
 8002838:	d8003215 	stw	zero,200(sp)
 800283c:	d8003415 	stw	zero,208(sp)
 8002840:	003a2806 	br	80010e4 <__flash_exceptions_start+0xf7e000c4>
 8002844:	843fff84 	addi	r16,r16,-2
 8002848:	1f3fffc4 	addi	fp,r3,-1
 800284c:	df002615 	stw	fp,152(sp)
 8002850:	dc0022c5 	stb	r16,139(sp)
 8002854:	e0009816 	blt	fp,zero,8002ab8 <___vfprintf_internal_r+0x1f20>
 8002858:	00800ac4 	movi	r2,43
 800285c:	d8802305 	stb	r2,140(sp)
 8002860:	00800244 	movi	r2,9
 8002864:	1700750e 	bge	r2,fp,8002a3c <___vfprintf_internal_r+0x1ea4>
 8002868:	dd4022c4 	addi	r21,sp,139
 800286c:	dc002c15 	stw	r16,176(sp)
 8002870:	4025883a 	mov	r18,r8
 8002874:	a821883a 	mov	r16,r21
 8002878:	e009883a 	mov	r4,fp
 800287c:	01400284 	movi	r5,10
 8002880:	800a7300 	call	800a730 <__modsi3>
 8002884:	10800c04 	addi	r2,r2,48
 8002888:	843fffc4 	addi	r16,r16,-1
 800288c:	e009883a 	mov	r4,fp
 8002890:	01400284 	movi	r5,10
 8002894:	80800005 	stb	r2,0(r16)
 8002898:	800a6dc0 	call	800a6dc <__divsi3>
 800289c:	1039883a 	mov	fp,r2
 80028a0:	00800244 	movi	r2,9
 80028a4:	173ff416 	blt	r2,fp,8002878 <__flash_exceptions_start+0xf7e01858>
 80028a8:	9011883a 	mov	r8,r18
 80028ac:	e0800c04 	addi	r2,fp,48
 80028b0:	8025883a 	mov	r18,r16
 80028b4:	913fffc4 	addi	r4,r18,-1
 80028b8:	90bfffc5 	stb	r2,-1(r18)
 80028bc:	dc002c17 	ldw	r16,176(sp)
 80028c0:	2540852e 	bgeu	r4,r21,8002ad8 <___vfprintf_internal_r+0x1f40>
 80028c4:	d9402384 	addi	r5,sp,142
 80028c8:	2c8bc83a 	sub	r5,r5,r18
 80028cc:	d8c02344 	addi	r3,sp,141
 80028d0:	a94b883a 	add	r5,r21,r5
 80028d4:	00000106 	br	80028dc <___vfprintf_internal_r+0x1d44>
 80028d8:	20800003 	ldbu	r2,0(r4)
 80028dc:	18800005 	stb	r2,0(r3)
 80028e0:	18c00044 	addi	r3,r3,1
 80028e4:	21000044 	addi	r4,r4,1
 80028e8:	197ffb1e 	bne	r3,r5,80028d8 <__flash_exceptions_start+0xf7e018b8>
 80028ec:	d8802304 	addi	r2,sp,140
 80028f0:	1485c83a 	sub	r2,r2,r18
 80028f4:	d8c02344 	addi	r3,sp,141
 80028f8:	1885883a 	add	r2,r3,r2
 80028fc:	dac03317 	ldw	r11,204(sp)
 8002900:	156bc83a 	sub	r21,r2,r21
 8002904:	dd403a15 	stw	r21,232(sp)
 8002908:	00800044 	movi	r2,1
 800290c:	5d65883a 	add	r18,r11,r21
 8002910:	12c0660e 	bge	r2,r11,8002aac <___vfprintf_internal_r+0x1f14>
 8002914:	94800044 	addi	r18,r18,1
 8002918:	9005883a 	mov	r2,r18
 800291c:	90006116 	blt	r18,zero,8002aa4 <___vfprintf_internal_r+0x1f0c>
 8002920:	d8003415 	stw	zero,208(sp)
 8002924:	003e7406 	br	80022f8 <__flash_exceptions_start+0xf7e012d8>
 8002928:	b009883a 	mov	r4,r22
 800292c:	b80b883a 	mov	r5,r23
 8002930:	d9801e04 	addi	r6,sp,120
 8002934:	8007e600 	call	8007e60 <__sprint_r>
 8002938:	10398b1e 	bne	r2,zero,8000f68 <__flash_exceptions_start+0xf7dfff48>
 800293c:	dc002617 	ldw	r16,152(sp)
 8002940:	d8c02017 	ldw	r3,128(sp)
 8002944:	d8801f17 	ldw	r2,124(sp)
 8002948:	da000404 	addi	r8,sp,16
 800294c:	003ec906 	br	8002474 <__flash_exceptions_start+0xf7e01454>
 8002950:	483e1c1e 	bne	r9,zero,80021c4 <__flash_exceptions_start+0xf7e011a4>
 8002954:	9013883a 	mov	r9,r18
 8002958:	003e1a06 	br	80021c4 <__flash_exceptions_start+0xf7e011a4>
 800295c:	02400184 	movi	r9,6
 8002960:	003e1806 	br	80021c4 <__flash_exceptions_start+0xf7e011a4>
 8002964:	d8c03417 	ldw	r3,208(sp)
 8002968:	00c04b0e 	bge	zero,r3,8002a98 <___vfprintf_internal_r+0x1f00>
 800296c:	04800044 	movi	r18,1
 8002970:	dac03317 	ldw	r11,204(sp)
 8002974:	92e5883a 	add	r18,r18,r11
 8002978:	9005883a 	mov	r2,r18
 800297c:	903e5e0e 	bge	r18,zero,80022f8 <__flash_exceptions_start+0xf7e012d8>
 8002980:	0005883a 	mov	r2,zero
 8002984:	003e5c06 	br	80022f8 <__flash_exceptions_start+0xf7e012d8>
 8002988:	00c00b44 	movi	r3,45
 800298c:	64a0003c 	xorhi	r18,r12,32768
 8002990:	d8c02b05 	stb	r3,172(sp)
 8002994:	003e1106 	br	80021dc <__flash_exceptions_start+0xf7e011bc>
 8002998:	4f000044 	addi	fp,r9,1
 800299c:	003e1606 	br	80021f8 <__flash_exceptions_start+0xf7e011d8>
 80029a0:	d8c02617 	ldw	r3,152(sp)
 80029a4:	d8c03415 	stw	r3,208(sp)
 80029a8:	00c0350e 	bge	zero,r3,8002a80 <___vfprintf_internal_r+0x1ee8>
 80029ac:	4800081e 	bne	r9,zero,80029d0 <___vfprintf_internal_r+0x1e38>
 80029b0:	8c40004c 	andi	r17,r17,1
 80029b4:	8800061e 	bne	r17,zero,80029d0 <___vfprintf_internal_r+0x1e38>
 80029b8:	1805883a 	mov	r2,r3
 80029bc:	183e4d0e 	bge	r3,zero,80022f4 <__flash_exceptions_start+0xf7e012d4>
 80029c0:	0005883a 	mov	r2,zero
 80029c4:	003e4b06 	br	80022f4 <__flash_exceptions_start+0xf7e012d4>
 80029c8:	d8802117 	ldw	r2,132(sp)
 80029cc:	003e3706 	br	80022ac <__flash_exceptions_start+0xf7e0128c>
 80029d0:	dac03417 	ldw	r11,208(sp)
 80029d4:	4a400044 	addi	r9,r9,1
 80029d8:	5a65883a 	add	r18,r11,r9
 80029dc:	9005883a 	mov	r2,r18
 80029e0:	903e450e 	bge	r18,zero,80022f8 <__flash_exceptions_start+0xf7e012d8>
 80029e4:	003fe606 	br	8002980 <__flash_exceptions_start+0xf7e01960>
 80029e8:	db003417 	ldw	r12,208(sp)
 80029ec:	64800044 	addi	r18,r12,1
 80029f0:	9005883a 	mov	r2,r18
 80029f4:	903e400e 	bge	r18,zero,80022f8 <__flash_exceptions_start+0xf7e012d8>
 80029f8:	003fe106 	br	8002980 <__flash_exceptions_start+0xf7e01960>
 80029fc:	d9003717 	ldw	r4,220(sp)
 8002a00:	900b883a 	mov	r5,r18
 8002a04:	000d883a 	mov	r6,zero
 8002a08:	000f883a 	mov	r7,zero
 8002a0c:	da003f15 	stw	r8,252(sp)
 8002a10:	da403e15 	stw	r9,248(sp)
 8002a14:	da803d15 	stw	r10,244(sp)
 8002a18:	800b9040 	call	800b904 <__eqdf2>
 8002a1c:	da003f17 	ldw	r8,252(sp)
 8002a20:	da403e17 	ldw	r9,248(sp)
 8002a24:	da803d17 	ldw	r10,244(sp)
 8002a28:	103f1f26 	beq	r2,zero,80026a8 <__flash_exceptions_start+0xf7e01688>
 8002a2c:	00800044 	movi	r2,1
 8002a30:	1707c83a 	sub	r3,r2,fp
 8002a34:	d8c02615 	stw	r3,152(sp)
 8002a38:	003f1c06 	br	80026ac <__flash_exceptions_start+0xf7e0168c>
 8002a3c:	00800c04 	movi	r2,48
 8002a40:	e0c00c04 	addi	r3,fp,48
 8002a44:	d8802345 	stb	r2,141(sp)
 8002a48:	d8c02385 	stb	r3,142(sp)
 8002a4c:	d88023c4 	addi	r2,sp,143
 8002a50:	dd4022c4 	addi	r21,sp,139
 8002a54:	003fa906 	br	80028fc <__flash_exceptions_start+0xf7e018dc>
 8002a58:	0005883a 	mov	r2,zero
 8002a5c:	003f3c06 	br	8002750 <__flash_exceptions_start+0xf7e01730>
 8002a60:	dac02d17 	ldw	r11,180(sp)
 8002a64:	5a400017 	ldw	r9,0(r11)
 8002a68:	5ac00104 	addi	r11,r11,4
 8002a6c:	dac02d15 	stw	r11,180(sp)
 8002a70:	483ec80e 	bge	r9,zero,8002594 <__flash_exceptions_start+0xf7e01574>
 8002a74:	027fffc4 	movi	r9,-1
 8002a78:	1c000047 	ldb	r16,1(r3)
 8002a7c:	0038ab06 	br	8000d2c <__flash_exceptions_start+0xf7dffd0c>
 8002a80:	4800111e 	bne	r9,zero,8002ac8 <___vfprintf_internal_r+0x1f30>
 8002a84:	8c40004c 	andi	r17,r17,1
 8002a88:	88000f1e 	bne	r17,zero,8002ac8 <___vfprintf_internal_r+0x1f30>
 8002a8c:	00800044 	movi	r2,1
 8002a90:	1025883a 	mov	r18,r2
 8002a94:	003e1806 	br	80022f8 <__flash_exceptions_start+0xf7e012d8>
 8002a98:	04800084 	movi	r18,2
 8002a9c:	90e5c83a 	sub	r18,r18,r3
 8002aa0:	003fb306 	br	8002970 <__flash_exceptions_start+0xf7e01950>
 8002aa4:	0005883a 	mov	r2,zero
 8002aa8:	003f9d06 	br	8002920 <__flash_exceptions_start+0xf7e01900>
 8002aac:	88a2703a 	and	r17,r17,r2
 8002ab0:	883f9926 	beq	r17,zero,8002918 <__flash_exceptions_start+0xf7e018f8>
 8002ab4:	003f9706 	br	8002914 <__flash_exceptions_start+0xf7e018f4>
 8002ab8:	00800b44 	movi	r2,45
 8002abc:	0739c83a 	sub	fp,zero,fp
 8002ac0:	d8802305 	stb	r2,140(sp)
 8002ac4:	003f6606 	br	8002860 <__flash_exceptions_start+0xf7e01840>
 8002ac8:	4c800084 	addi	r18,r9,2
 8002acc:	9005883a 	mov	r2,r18
 8002ad0:	903e090e 	bge	r18,zero,80022f8 <__flash_exceptions_start+0xf7e012d8>
 8002ad4:	003faa06 	br	8002980 <__flash_exceptions_start+0xf7e01960>
 8002ad8:	d8802344 	addi	r2,sp,141
 8002adc:	003f8706 	br	80028fc <__flash_exceptions_start+0xf7e018dc>
 8002ae0:	d8c02617 	ldw	r3,152(sp)
 8002ae4:	003f5806 	br	8002848 <__flash_exceptions_start+0xf7e01828>

08002ae8 <__vfprintf_internal>:
 8002ae8:	2007883a 	mov	r3,r4
 8002aec:	01020074 	movhi	r4,2049
 8002af0:	213db004 	addi	r4,r4,-2368
 8002af4:	21000017 	ldw	r4,0(r4)
 8002af8:	2805883a 	mov	r2,r5
 8002afc:	300f883a 	mov	r7,r6
 8002b00:	180b883a 	mov	r5,r3
 8002b04:	100d883a 	mov	r6,r2
 8002b08:	8000b981 	jmpi	8000b98 <___vfprintf_internal_r>

08002b0c <__sbprintf>:
 8002b0c:	2880030b 	ldhu	r2,12(r5)
 8002b10:	2ac01917 	ldw	r11,100(r5)
 8002b14:	2a80038b 	ldhu	r10,14(r5)
 8002b18:	2a400717 	ldw	r9,28(r5)
 8002b1c:	2a000917 	ldw	r8,36(r5)
 8002b20:	defee204 	addi	sp,sp,-1144
 8002b24:	00c10004 	movi	r3,1024
 8002b28:	dc011a15 	stw	r16,1128(sp)
 8002b2c:	10bfff4c 	andi	r2,r2,65533
 8002b30:	2821883a 	mov	r16,r5
 8002b34:	d8cb883a 	add	r5,sp,r3
 8002b38:	dc811c15 	stw	r18,1136(sp)
 8002b3c:	dc411b15 	stw	r17,1132(sp)
 8002b40:	dfc11d15 	stw	ra,1140(sp)
 8002b44:	2025883a 	mov	r18,r4
 8002b48:	d881030d 	sth	r2,1036(sp)
 8002b4c:	dac11915 	stw	r11,1124(sp)
 8002b50:	da81038d 	sth	r10,1038(sp)
 8002b54:	da410715 	stw	r9,1052(sp)
 8002b58:	da010915 	stw	r8,1060(sp)
 8002b5c:	dec10015 	stw	sp,1024(sp)
 8002b60:	dec10415 	stw	sp,1040(sp)
 8002b64:	d8c10215 	stw	r3,1032(sp)
 8002b68:	d8c10515 	stw	r3,1044(sp)
 8002b6c:	d8010615 	stw	zero,1048(sp)
 8002b70:	8000b980 	call	8000b98 <___vfprintf_internal_r>
 8002b74:	1023883a 	mov	r17,r2
 8002b78:	10000416 	blt	r2,zero,8002b8c <__sbprintf+0x80>
 8002b7c:	9009883a 	mov	r4,r18
 8002b80:	d9410004 	addi	r5,sp,1024
 8002b84:	800484c0 	call	800484c <_fflush_r>
 8002b88:	10000d1e 	bne	r2,zero,8002bc0 <__sbprintf+0xb4>
 8002b8c:	d8c1030b 	ldhu	r3,1036(sp)
 8002b90:	18c0100c 	andi	r3,r3,64
 8002b94:	18000326 	beq	r3,zero,8002ba4 <__sbprintf+0x98>
 8002b98:	8080030b 	ldhu	r2,12(r16)
 8002b9c:	10801014 	ori	r2,r2,64
 8002ba0:	8080030d 	sth	r2,12(r16)
 8002ba4:	8805883a 	mov	r2,r17
 8002ba8:	dfc11d17 	ldw	ra,1140(sp)
 8002bac:	dc811c17 	ldw	r18,1136(sp)
 8002bb0:	dc411b17 	ldw	r17,1132(sp)
 8002bb4:	dc011a17 	ldw	r16,1128(sp)
 8002bb8:	dec11e04 	addi	sp,sp,1144
 8002bbc:	f800283a 	ret
 8002bc0:	047fffc4 	movi	r17,-1
 8002bc4:	003ff106 	br	8002b8c <__flash_exceptions_start+0xf7e01b6c>

08002bc8 <__swsetup_r>:
 8002bc8:	00820074 	movhi	r2,2049
 8002bcc:	defffd04 	addi	sp,sp,-12
 8002bd0:	10bdb004 	addi	r2,r2,-2368
 8002bd4:	dc400115 	stw	r17,4(sp)
 8002bd8:	2023883a 	mov	r17,r4
 8002bdc:	11000017 	ldw	r4,0(r2)
 8002be0:	dc000015 	stw	r16,0(sp)
 8002be4:	dfc00215 	stw	ra,8(sp)
 8002be8:	2821883a 	mov	r16,r5
 8002bec:	20000226 	beq	r4,zero,8002bf8 <__swsetup_r+0x30>
 8002bf0:	20c00e17 	ldw	r3,56(r4)
 8002bf4:	18003126 	beq	r3,zero,8002cbc <__swsetup_r+0xf4>
 8002bf8:	8080030b 	ldhu	r2,12(r16)
 8002bfc:	10c0020c 	andi	r3,r2,8
 8002c00:	100d883a 	mov	r6,r2
 8002c04:	18000f26 	beq	r3,zero,8002c44 <__swsetup_r+0x7c>
 8002c08:	80c00417 	ldw	r3,16(r16)
 8002c0c:	18001526 	beq	r3,zero,8002c64 <__swsetup_r+0x9c>
 8002c10:	1100004c 	andi	r4,r2,1
 8002c14:	20001c1e 	bne	r4,zero,8002c88 <__swsetup_r+0xc0>
 8002c18:	1080008c 	andi	r2,r2,2
 8002c1c:	1000291e 	bne	r2,zero,8002cc4 <__swsetup_r+0xfc>
 8002c20:	80800517 	ldw	r2,20(r16)
 8002c24:	80800215 	stw	r2,8(r16)
 8002c28:	18001c26 	beq	r3,zero,8002c9c <__swsetup_r+0xd4>
 8002c2c:	0005883a 	mov	r2,zero
 8002c30:	dfc00217 	ldw	ra,8(sp)
 8002c34:	dc400117 	ldw	r17,4(sp)
 8002c38:	dc000017 	ldw	r16,0(sp)
 8002c3c:	dec00304 	addi	sp,sp,12
 8002c40:	f800283a 	ret
 8002c44:	3080040c 	andi	r2,r6,16
 8002c48:	10002e26 	beq	r2,zero,8002d04 <__swsetup_r+0x13c>
 8002c4c:	3080010c 	andi	r2,r6,4
 8002c50:	10001e1e 	bne	r2,zero,8002ccc <__swsetup_r+0x104>
 8002c54:	80c00417 	ldw	r3,16(r16)
 8002c58:	30800214 	ori	r2,r6,8
 8002c5c:	8080030d 	sth	r2,12(r16)
 8002c60:	183feb1e 	bne	r3,zero,8002c10 <__flash_exceptions_start+0xf7e01bf0>
 8002c64:	1140a00c 	andi	r5,r2,640
 8002c68:	01008004 	movi	r4,512
 8002c6c:	293fe826 	beq	r5,r4,8002c10 <__flash_exceptions_start+0xf7e01bf0>
 8002c70:	8809883a 	mov	r4,r17
 8002c74:	800b883a 	mov	r5,r16
 8002c78:	80057b40 	call	80057b4 <__smakebuf_r>
 8002c7c:	8080030b 	ldhu	r2,12(r16)
 8002c80:	80c00417 	ldw	r3,16(r16)
 8002c84:	003fe206 	br	8002c10 <__flash_exceptions_start+0xf7e01bf0>
 8002c88:	80800517 	ldw	r2,20(r16)
 8002c8c:	80000215 	stw	zero,8(r16)
 8002c90:	0085c83a 	sub	r2,zero,r2
 8002c94:	80800615 	stw	r2,24(r16)
 8002c98:	183fe41e 	bne	r3,zero,8002c2c <__flash_exceptions_start+0xf7e01c0c>
 8002c9c:	80c0030b 	ldhu	r3,12(r16)
 8002ca0:	0005883a 	mov	r2,zero
 8002ca4:	1900200c 	andi	r4,r3,128
 8002ca8:	203fe126 	beq	r4,zero,8002c30 <__flash_exceptions_start+0xf7e01c10>
 8002cac:	18c01014 	ori	r3,r3,64
 8002cb0:	80c0030d 	sth	r3,12(r16)
 8002cb4:	00bfffc4 	movi	r2,-1
 8002cb8:	003fdd06 	br	8002c30 <__flash_exceptions_start+0xf7e01c10>
 8002cbc:	8004c280 	call	8004c28 <__sinit>
 8002cc0:	003fcd06 	br	8002bf8 <__flash_exceptions_start+0xf7e01bd8>
 8002cc4:	0005883a 	mov	r2,zero
 8002cc8:	003fd606 	br	8002c24 <__flash_exceptions_start+0xf7e01c04>
 8002ccc:	81400c17 	ldw	r5,48(r16)
 8002cd0:	28000626 	beq	r5,zero,8002cec <__swsetup_r+0x124>
 8002cd4:	80801004 	addi	r2,r16,64
 8002cd8:	28800326 	beq	r5,r2,8002ce8 <__swsetup_r+0x120>
 8002cdc:	8809883a 	mov	r4,r17
 8002ce0:	8004d9c0 	call	8004d9c <_free_r>
 8002ce4:	8180030b 	ldhu	r6,12(r16)
 8002ce8:	80000c15 	stw	zero,48(r16)
 8002cec:	80c00417 	ldw	r3,16(r16)
 8002cf0:	00bff6c4 	movi	r2,-37
 8002cf4:	118c703a 	and	r6,r2,r6
 8002cf8:	80000115 	stw	zero,4(r16)
 8002cfc:	80c00015 	stw	r3,0(r16)
 8002d00:	003fd506 	br	8002c58 <__flash_exceptions_start+0xf7e01c38>
 8002d04:	00800244 	movi	r2,9
 8002d08:	88800015 	stw	r2,0(r17)
 8002d0c:	30801014 	ori	r2,r6,64
 8002d10:	8080030d 	sth	r2,12(r16)
 8002d14:	00bfffc4 	movi	r2,-1
 8002d18:	003fc506 	br	8002c30 <__flash_exceptions_start+0xf7e01c10>

08002d1c <quorem>:
 8002d1c:	defff704 	addi	sp,sp,-36
 8002d20:	dc800215 	stw	r18,8(sp)
 8002d24:	20800417 	ldw	r2,16(r4)
 8002d28:	2c800417 	ldw	r18,16(r5)
 8002d2c:	dfc00815 	stw	ra,32(sp)
 8002d30:	ddc00715 	stw	r23,28(sp)
 8002d34:	dd800615 	stw	r22,24(sp)
 8002d38:	dd400515 	stw	r21,20(sp)
 8002d3c:	dd000415 	stw	r20,16(sp)
 8002d40:	dcc00315 	stw	r19,12(sp)
 8002d44:	dc400115 	stw	r17,4(sp)
 8002d48:	dc000015 	stw	r16,0(sp)
 8002d4c:	14807116 	blt	r2,r18,8002f14 <quorem+0x1f8>
 8002d50:	94bfffc4 	addi	r18,r18,-1
 8002d54:	94ad883a 	add	r22,r18,r18
 8002d58:	b5ad883a 	add	r22,r22,r22
 8002d5c:	2c400504 	addi	r17,r5,20
 8002d60:	8da9883a 	add	r20,r17,r22
 8002d64:	25400504 	addi	r21,r4,20
 8002d68:	282f883a 	mov	r23,r5
 8002d6c:	adad883a 	add	r22,r21,r22
 8002d70:	a1400017 	ldw	r5,0(r20)
 8002d74:	2021883a 	mov	r16,r4
 8002d78:	b1000017 	ldw	r4,0(r22)
 8002d7c:	29400044 	addi	r5,r5,1
 8002d80:	800a78c0 	call	800a78c <__udivsi3>
 8002d84:	1027883a 	mov	r19,r2
 8002d88:	10002c26 	beq	r2,zero,8002e3c <quorem+0x120>
 8002d8c:	a813883a 	mov	r9,r21
 8002d90:	8811883a 	mov	r8,r17
 8002d94:	0009883a 	mov	r4,zero
 8002d98:	000d883a 	mov	r6,zero
 8002d9c:	41c00017 	ldw	r7,0(r8)
 8002da0:	49400017 	ldw	r5,0(r9)
 8002da4:	42000104 	addi	r8,r8,4
 8002da8:	38bfffcc 	andi	r2,r7,65535
 8002dac:	14c5383a 	mul	r2,r2,r19
 8002db0:	380ed43a 	srli	r7,r7,16
 8002db4:	28ffffcc 	andi	r3,r5,65535
 8002db8:	2085883a 	add	r2,r4,r2
 8002dbc:	1008d43a 	srli	r4,r2,16
 8002dc0:	3ccf383a 	mul	r7,r7,r19
 8002dc4:	198d883a 	add	r6,r3,r6
 8002dc8:	10ffffcc 	andi	r3,r2,65535
 8002dcc:	30c7c83a 	sub	r3,r6,r3
 8002dd0:	280ad43a 	srli	r5,r5,16
 8002dd4:	21c9883a 	add	r4,r4,r7
 8002dd8:	180dd43a 	srai	r6,r3,16
 8002ddc:	20bfffcc 	andi	r2,r4,65535
 8002de0:	288bc83a 	sub	r5,r5,r2
 8002de4:	298b883a 	add	r5,r5,r6
 8002de8:	280e943a 	slli	r7,r5,16
 8002dec:	18ffffcc 	andi	r3,r3,65535
 8002df0:	2008d43a 	srli	r4,r4,16
 8002df4:	38ceb03a 	or	r7,r7,r3
 8002df8:	49c00015 	stw	r7,0(r9)
 8002dfc:	280dd43a 	srai	r6,r5,16
 8002e00:	4a400104 	addi	r9,r9,4
 8002e04:	a23fe52e 	bgeu	r20,r8,8002d9c <__flash_exceptions_start+0xf7e01d7c>
 8002e08:	b0800017 	ldw	r2,0(r22)
 8002e0c:	10000b1e 	bne	r2,zero,8002e3c <quorem+0x120>
 8002e10:	b0bfff04 	addi	r2,r22,-4
 8002e14:	a880082e 	bgeu	r21,r2,8002e38 <quorem+0x11c>
 8002e18:	b0ffff17 	ldw	r3,-4(r22)
 8002e1c:	18000326 	beq	r3,zero,8002e2c <quorem+0x110>
 8002e20:	00000506 	br	8002e38 <quorem+0x11c>
 8002e24:	10c00017 	ldw	r3,0(r2)
 8002e28:	1800031e 	bne	r3,zero,8002e38 <quorem+0x11c>
 8002e2c:	10bfff04 	addi	r2,r2,-4
 8002e30:	94bfffc4 	addi	r18,r18,-1
 8002e34:	a8bffb36 	bltu	r21,r2,8002e24 <__flash_exceptions_start+0xf7e01e04>
 8002e38:	84800415 	stw	r18,16(r16)
 8002e3c:	8009883a 	mov	r4,r16
 8002e40:	b80b883a 	mov	r5,r23
 8002e44:	8006e880 	call	8006e88 <__mcmp>
 8002e48:	10002616 	blt	r2,zero,8002ee4 <quorem+0x1c8>
 8002e4c:	9cc00044 	addi	r19,r19,1
 8002e50:	a80d883a 	mov	r6,r21
 8002e54:	000b883a 	mov	r5,zero
 8002e58:	31000017 	ldw	r4,0(r6)
 8002e5c:	88800017 	ldw	r2,0(r17)
 8002e60:	31800104 	addi	r6,r6,4
 8002e64:	20ffffcc 	andi	r3,r4,65535
 8002e68:	194b883a 	add	r5,r3,r5
 8002e6c:	10ffffcc 	andi	r3,r2,65535
 8002e70:	28c7c83a 	sub	r3,r5,r3
 8002e74:	1004d43a 	srli	r2,r2,16
 8002e78:	2008d43a 	srli	r4,r4,16
 8002e7c:	180bd43a 	srai	r5,r3,16
 8002e80:	18ffffcc 	andi	r3,r3,65535
 8002e84:	2089c83a 	sub	r4,r4,r2
 8002e88:	2149883a 	add	r4,r4,r5
 8002e8c:	2004943a 	slli	r2,r4,16
 8002e90:	8c400104 	addi	r17,r17,4
 8002e94:	200bd43a 	srai	r5,r4,16
 8002e98:	10c6b03a 	or	r3,r2,r3
 8002e9c:	30ffff15 	stw	r3,-4(r6)
 8002ea0:	a47fed2e 	bgeu	r20,r17,8002e58 <__flash_exceptions_start+0xf7e01e38>
 8002ea4:	9485883a 	add	r2,r18,r18
 8002ea8:	1085883a 	add	r2,r2,r2
 8002eac:	a887883a 	add	r3,r21,r2
 8002eb0:	18800017 	ldw	r2,0(r3)
 8002eb4:	10000b1e 	bne	r2,zero,8002ee4 <quorem+0x1c8>
 8002eb8:	18bfff04 	addi	r2,r3,-4
 8002ebc:	a880082e 	bgeu	r21,r2,8002ee0 <quorem+0x1c4>
 8002ec0:	18ffff17 	ldw	r3,-4(r3)
 8002ec4:	18000326 	beq	r3,zero,8002ed4 <quorem+0x1b8>
 8002ec8:	00000506 	br	8002ee0 <quorem+0x1c4>
 8002ecc:	10c00017 	ldw	r3,0(r2)
 8002ed0:	1800031e 	bne	r3,zero,8002ee0 <quorem+0x1c4>
 8002ed4:	10bfff04 	addi	r2,r2,-4
 8002ed8:	94bfffc4 	addi	r18,r18,-1
 8002edc:	a8bffb36 	bltu	r21,r2,8002ecc <__flash_exceptions_start+0xf7e01eac>
 8002ee0:	84800415 	stw	r18,16(r16)
 8002ee4:	9805883a 	mov	r2,r19
 8002ee8:	dfc00817 	ldw	ra,32(sp)
 8002eec:	ddc00717 	ldw	r23,28(sp)
 8002ef0:	dd800617 	ldw	r22,24(sp)
 8002ef4:	dd400517 	ldw	r21,20(sp)
 8002ef8:	dd000417 	ldw	r20,16(sp)
 8002efc:	dcc00317 	ldw	r19,12(sp)
 8002f00:	dc800217 	ldw	r18,8(sp)
 8002f04:	dc400117 	ldw	r17,4(sp)
 8002f08:	dc000017 	ldw	r16,0(sp)
 8002f0c:	dec00904 	addi	sp,sp,36
 8002f10:	f800283a 	ret
 8002f14:	0005883a 	mov	r2,zero
 8002f18:	003ff306 	br	8002ee8 <__flash_exceptions_start+0xf7e01ec8>

08002f1c <_dtoa_r>:
 8002f1c:	20801017 	ldw	r2,64(r4)
 8002f20:	deffde04 	addi	sp,sp,-136
 8002f24:	dd401d15 	stw	r21,116(sp)
 8002f28:	dcc01b15 	stw	r19,108(sp)
 8002f2c:	dc801a15 	stw	r18,104(sp)
 8002f30:	dc401915 	stw	r17,100(sp)
 8002f34:	dc001815 	stw	r16,96(sp)
 8002f38:	dfc02115 	stw	ra,132(sp)
 8002f3c:	df002015 	stw	fp,128(sp)
 8002f40:	ddc01f15 	stw	r23,124(sp)
 8002f44:	dd801e15 	stw	r22,120(sp)
 8002f48:	dd001c15 	stw	r20,112(sp)
 8002f4c:	d9c00315 	stw	r7,12(sp)
 8002f50:	2021883a 	mov	r16,r4
 8002f54:	302b883a 	mov	r21,r6
 8002f58:	2825883a 	mov	r18,r5
 8002f5c:	dc402417 	ldw	r17,144(sp)
 8002f60:	3027883a 	mov	r19,r6
 8002f64:	10000826 	beq	r2,zero,8002f88 <_dtoa_r+0x6c>
 8002f68:	21801117 	ldw	r6,68(r4)
 8002f6c:	00c00044 	movi	r3,1
 8002f70:	100b883a 	mov	r5,r2
 8002f74:	1986983a 	sll	r3,r3,r6
 8002f78:	11800115 	stw	r6,4(r2)
 8002f7c:	10c00215 	stw	r3,8(r2)
 8002f80:	800665c0 	call	800665c <_Bfree>
 8002f84:	80001015 	stw	zero,64(r16)
 8002f88:	a8002d16 	blt	r21,zero,8003040 <_dtoa_r+0x124>
 8002f8c:	88000015 	stw	zero,0(r17)
 8002f90:	a8dffc2c 	andhi	r3,r21,32752
 8002f94:	009ffc34 	movhi	r2,32752
 8002f98:	18801b26 	beq	r3,r2,8003008 <_dtoa_r+0xec>
 8002f9c:	9009883a 	mov	r4,r18
 8002fa0:	980b883a 	mov	r5,r19
 8002fa4:	000d883a 	mov	r6,zero
 8002fa8:	000f883a 	mov	r7,zero
 8002fac:	800b9040 	call	800b904 <__eqdf2>
 8002fb0:	10002a1e 	bne	r2,zero,800305c <_dtoa_r+0x140>
 8002fb4:	d8c02317 	ldw	r3,140(sp)
 8002fb8:	d9002517 	ldw	r4,148(sp)
 8002fbc:	00800044 	movi	r2,1
 8002fc0:	18800015 	stw	r2,0(r3)
 8002fc4:	2001a226 	beq	r4,zero,8003650 <_dtoa_r+0x734>
 8002fc8:	00820074 	movhi	r2,2049
 8002fcc:	10ba3444 	addi	r2,r2,-5935
 8002fd0:	20800015 	stw	r2,0(r4)
 8002fd4:	10bfffc4 	addi	r2,r2,-1
 8002fd8:	dfc02117 	ldw	ra,132(sp)
 8002fdc:	df002017 	ldw	fp,128(sp)
 8002fe0:	ddc01f17 	ldw	r23,124(sp)
 8002fe4:	dd801e17 	ldw	r22,120(sp)
 8002fe8:	dd401d17 	ldw	r21,116(sp)
 8002fec:	dd001c17 	ldw	r20,112(sp)
 8002ff0:	dcc01b17 	ldw	r19,108(sp)
 8002ff4:	dc801a17 	ldw	r18,104(sp)
 8002ff8:	dc401917 	ldw	r17,100(sp)
 8002ffc:	dc001817 	ldw	r16,96(sp)
 8003000:	dec02204 	addi	sp,sp,136
 8003004:	f800283a 	ret
 8003008:	d8c02317 	ldw	r3,140(sp)
 800300c:	0089c3c4 	movi	r2,9999
 8003010:	18800015 	stw	r2,0(r3)
 8003014:	90017c26 	beq	r18,zero,8003608 <_dtoa_r+0x6ec>
 8003018:	00820074 	movhi	r2,2049
 800301c:	10ba4004 	addi	r2,r2,-5888
 8003020:	d9002517 	ldw	r4,148(sp)
 8003024:	203fec26 	beq	r4,zero,8002fd8 <__flash_exceptions_start+0xf7e01fb8>
 8003028:	10c000c7 	ldb	r3,3(r2)
 800302c:	18017d1e 	bne	r3,zero,8003624 <_dtoa_r+0x708>
 8003030:	10c000c4 	addi	r3,r2,3
 8003034:	d9802517 	ldw	r6,148(sp)
 8003038:	30c00015 	stw	r3,0(r6)
 800303c:	003fe606 	br	8002fd8 <__flash_exceptions_start+0xf7e01fb8>
 8003040:	04e00034 	movhi	r19,32768
 8003044:	9cffffc4 	addi	r19,r19,-1
 8003048:	00800044 	movi	r2,1
 800304c:	ace6703a 	and	r19,r21,r19
 8003050:	88800015 	stw	r2,0(r17)
 8003054:	982b883a 	mov	r21,r19
 8003058:	003fcd06 	br	8002f90 <__flash_exceptions_start+0xf7e01f70>
 800305c:	d8800204 	addi	r2,sp,8
 8003060:	a822d53a 	srli	r17,r21,20
 8003064:	d8800015 	stw	r2,0(sp)
 8003068:	8009883a 	mov	r4,r16
 800306c:	900b883a 	mov	r5,r18
 8003070:	980d883a 	mov	r6,r19
 8003074:	d9c00104 	addi	r7,sp,4
 8003078:	80071fc0 	call	80071fc <__d2b>
 800307c:	1039883a 	mov	fp,r2
 8003080:	88016a1e 	bne	r17,zero,800362c <_dtoa_r+0x710>
 8003084:	dd000217 	ldw	r20,8(sp)
 8003088:	dc400117 	ldw	r17,4(sp)
 800308c:	00befbc4 	movi	r2,-1041
 8003090:	a463883a 	add	r17,r20,r17
 8003094:	8882ea16 	blt	r17,r2,8003c40 <_dtoa_r+0xd24>
 8003098:	00bf0384 	movi	r2,-1010
 800309c:	1445c83a 	sub	r2,r2,r17
 80030a0:	89010484 	addi	r4,r17,1042
 80030a4:	a8aa983a 	sll	r21,r21,r2
 80030a8:	9108d83a 	srl	r4,r18,r4
 80030ac:	a908b03a 	or	r4,r21,r4
 80030b0:	800cc940 	call	800cc94 <__floatunsidf>
 80030b4:	017f8434 	movhi	r5,65040
 80030b8:	01800044 	movi	r6,1
 80030bc:	1009883a 	mov	r4,r2
 80030c0:	194b883a 	add	r5,r3,r5
 80030c4:	8c7fffc4 	addi	r17,r17,-1
 80030c8:	d9800f15 	stw	r6,60(sp)
 80030cc:	000d883a 	mov	r6,zero
 80030d0:	01cffe34 	movhi	r7,16376
 80030d4:	800c26c0 	call	800c26c <__subdf3>
 80030d8:	0198dbf4 	movhi	r6,25455
 80030dc:	01cff4f4 	movhi	r7,16339
 80030e0:	1009883a 	mov	r4,r2
 80030e4:	180b883a 	mov	r5,r3
 80030e8:	3190d844 	addi	r6,r6,17249
 80030ec:	39e1e9c4 	addi	r7,r7,-30809
 80030f0:	800bb480 	call	800bb48 <__muldf3>
 80030f4:	01a2d874 	movhi	r6,35681
 80030f8:	01cff1f4 	movhi	r7,16327
 80030fc:	180b883a 	mov	r5,r3
 8003100:	31b22cc4 	addi	r6,r6,-14157
 8003104:	39e28a04 	addi	r7,r7,-30168
 8003108:	1009883a 	mov	r4,r2
 800310c:	800a79c0 	call	800a79c <__adddf3>
 8003110:	8809883a 	mov	r4,r17
 8003114:	102d883a 	mov	r22,r2
 8003118:	182b883a 	mov	r21,r3
 800311c:	800cbc40 	call	800cbc4 <__floatsidf>
 8003120:	019427f4 	movhi	r6,20639
 8003124:	01cff4f4 	movhi	r7,16339
 8003128:	1009883a 	mov	r4,r2
 800312c:	180b883a 	mov	r5,r3
 8003130:	319e7ec4 	addi	r6,r6,31227
 8003134:	39d104c4 	addi	r7,r7,17427
 8003138:	800bb480 	call	800bb48 <__muldf3>
 800313c:	b009883a 	mov	r4,r22
 8003140:	a80b883a 	mov	r5,r21
 8003144:	100d883a 	mov	r6,r2
 8003148:	180f883a 	mov	r7,r3
 800314c:	800a79c0 	call	800a79c <__adddf3>
 8003150:	1009883a 	mov	r4,r2
 8003154:	180b883a 	mov	r5,r3
 8003158:	102d883a 	mov	r22,r2
 800315c:	182b883a 	mov	r21,r3
 8003160:	800cb3c0 	call	800cb3c <__fixdfsi>
 8003164:	b009883a 	mov	r4,r22
 8003168:	a80b883a 	mov	r5,r21
 800316c:	000d883a 	mov	r6,zero
 8003170:	000f883a 	mov	r7,zero
 8003174:	d8800515 	stw	r2,20(sp)
 8003178:	800ba680 	call	800ba68 <__ledf2>
 800317c:	10023116 	blt	r2,zero,8003a44 <_dtoa_r+0xb28>
 8003180:	d8c00517 	ldw	r3,20(sp)
 8003184:	00800584 	movi	r2,22
 8003188:	10c21f36 	bltu	r2,r3,8003a08 <_dtoa_r+0xaec>
 800318c:	180490fa 	slli	r2,r3,3
 8003190:	00c20074 	movhi	r3,2049
 8003194:	18fa5c04 	addi	r3,r3,-5776
 8003198:	1885883a 	add	r2,r3,r2
 800319c:	11000017 	ldw	r4,0(r2)
 80031a0:	11400117 	ldw	r5,4(r2)
 80031a4:	900d883a 	mov	r6,r18
 80031a8:	980f883a 	mov	r7,r19
 80031ac:	800b9880 	call	800b988 <__gedf2>
 80031b0:	0082a70e 	bge	zero,r2,8003c50 <_dtoa_r+0xd34>
 80031b4:	d9000517 	ldw	r4,20(sp)
 80031b8:	d8000d15 	stw	zero,52(sp)
 80031bc:	213fffc4 	addi	r4,r4,-1
 80031c0:	d9000515 	stw	r4,20(sp)
 80031c4:	a463c83a 	sub	r17,r20,r17
 80031c8:	8dbfffc4 	addi	r22,r17,-1
 80031cc:	b0021916 	blt	r22,zero,8003a34 <_dtoa_r+0xb18>
 80031d0:	d8000815 	stw	zero,32(sp)
 80031d4:	d8800517 	ldw	r2,20(sp)
 80031d8:	10020e16 	blt	r2,zero,8003a14 <_dtoa_r+0xaf8>
 80031dc:	b0ad883a 	add	r22,r22,r2
 80031e0:	d8800a15 	stw	r2,40(sp)
 80031e4:	d8000915 	stw	zero,36(sp)
 80031e8:	d8c00317 	ldw	r3,12(sp)
 80031ec:	00800244 	movi	r2,9
 80031f0:	10c11a36 	bltu	r2,r3,800365c <_dtoa_r+0x740>
 80031f4:	00800144 	movi	r2,5
 80031f8:	10c4fc0e 	bge	r2,r3,80045ec <_dtoa_r+0x16d0>
 80031fc:	18ffff04 	addi	r3,r3,-4
 8003200:	d8c00315 	stw	r3,12(sp)
 8003204:	0029883a 	mov	r20,zero
 8003208:	d9800317 	ldw	r6,12(sp)
 800320c:	008000c4 	movi	r2,3
 8003210:	3083bd26 	beq	r6,r2,8004108 <_dtoa_r+0x11ec>
 8003214:	1183670e 	bge	r2,r6,8003fb4 <_dtoa_r+0x1098>
 8003218:	d8c00317 	ldw	r3,12(sp)
 800321c:	00800104 	movi	r2,4
 8003220:	1882e726 	beq	r3,r2,8003dc0 <_dtoa_r+0xea4>
 8003224:	00800144 	movi	r2,5
 8003228:	1884f21e 	bne	r3,r2,80045f4 <_dtoa_r+0x16d8>
 800322c:	00800044 	movi	r2,1
 8003230:	d8800b15 	stw	r2,44(sp)
 8003234:	d8c02217 	ldw	r3,136(sp)
 8003238:	d9000517 	ldw	r4,20(sp)
 800323c:	1907883a 	add	r3,r3,r4
 8003240:	19800044 	addi	r6,r3,1
 8003244:	d8c00c15 	stw	r3,48(sp)
 8003248:	d9800615 	stw	r6,24(sp)
 800324c:	0183c30e 	bge	zero,r6,800415c <_dtoa_r+0x1240>
 8003250:	d9800617 	ldw	r6,24(sp)
 8003254:	3023883a 	mov	r17,r6
 8003258:	80001115 	stw	zero,68(r16)
 800325c:	008005c4 	movi	r2,23
 8003260:	1184f62e 	bgeu	r2,r6,800463c <_dtoa_r+0x1720>
 8003264:	00c00044 	movi	r3,1
 8003268:	00800104 	movi	r2,4
 800326c:	1085883a 	add	r2,r2,r2
 8003270:	11000504 	addi	r4,r2,20
 8003274:	180b883a 	mov	r5,r3
 8003278:	18c00044 	addi	r3,r3,1
 800327c:	313ffb2e 	bgeu	r6,r4,800326c <__flash_exceptions_start+0xf7e0224c>
 8003280:	81401115 	stw	r5,68(r16)
 8003284:	8009883a 	mov	r4,r16
 8003288:	80065b40 	call	80065b4 <_Balloc>
 800328c:	d8800715 	stw	r2,28(sp)
 8003290:	80801015 	stw	r2,64(r16)
 8003294:	00800384 	movi	r2,14
 8003298:	1440fd36 	bltu	r2,r17,8003690 <_dtoa_r+0x774>
 800329c:	a000fc26 	beq	r20,zero,8003690 <_dtoa_r+0x774>
 80032a0:	d8800517 	ldw	r2,20(sp)
 80032a4:	0083b90e 	bge	zero,r2,800418c <_dtoa_r+0x1270>
 80032a8:	d8c00517 	ldw	r3,20(sp)
 80032ac:	108003cc 	andi	r2,r2,15
 80032b0:	100490fa 	slli	r2,r2,3
 80032b4:	182fd13a 	srai	r23,r3,4
 80032b8:	00c20074 	movhi	r3,2049
 80032bc:	18fa5c04 	addi	r3,r3,-5776
 80032c0:	1885883a 	add	r2,r3,r2
 80032c4:	b8c0040c 	andi	r3,r23,16
 80032c8:	12c00017 	ldw	r11,0(r2)
 80032cc:	12800117 	ldw	r10,4(r2)
 80032d0:	18039726 	beq	r3,zero,8004130 <_dtoa_r+0x1214>
 80032d4:	00820074 	movhi	r2,2049
 80032d8:	10ba5204 	addi	r2,r2,-5816
 80032dc:	11800817 	ldw	r6,32(r2)
 80032e0:	11c00917 	ldw	r7,36(r2)
 80032e4:	9009883a 	mov	r4,r18
 80032e8:	980b883a 	mov	r5,r19
 80032ec:	da801615 	stw	r10,88(sp)
 80032f0:	dac01515 	stw	r11,84(sp)
 80032f4:	800b0380 	call	800b038 <__divdf3>
 80032f8:	da801617 	ldw	r10,88(sp)
 80032fc:	dac01517 	ldw	r11,84(sp)
 8003300:	bdc003cc 	andi	r23,r23,15
 8003304:	044000c4 	movi	r17,3
 8003308:	d8800e15 	stw	r2,56(sp)
 800330c:	182b883a 	mov	r21,r3
 8003310:	b8001126 	beq	r23,zero,8003358 <_dtoa_r+0x43c>
 8003314:	05020074 	movhi	r20,2049
 8003318:	a53a5204 	addi	r20,r20,-5816
 800331c:	5805883a 	mov	r2,r11
 8003320:	5007883a 	mov	r3,r10
 8003324:	b980004c 	andi	r6,r23,1
 8003328:	1009883a 	mov	r4,r2
 800332c:	b82fd07a 	srai	r23,r23,1
 8003330:	180b883a 	mov	r5,r3
 8003334:	30000426 	beq	r6,zero,8003348 <_dtoa_r+0x42c>
 8003338:	a1800017 	ldw	r6,0(r20)
 800333c:	a1c00117 	ldw	r7,4(r20)
 8003340:	8c400044 	addi	r17,r17,1
 8003344:	800bb480 	call	800bb48 <__muldf3>
 8003348:	a5000204 	addi	r20,r20,8
 800334c:	b83ff51e 	bne	r23,zero,8003324 <__flash_exceptions_start+0xf7e02304>
 8003350:	1017883a 	mov	r11,r2
 8003354:	1815883a 	mov	r10,r3
 8003358:	d9000e17 	ldw	r4,56(sp)
 800335c:	a80b883a 	mov	r5,r21
 8003360:	580d883a 	mov	r6,r11
 8003364:	500f883a 	mov	r7,r10
 8003368:	800b0380 	call	800b038 <__divdf3>
 800336c:	1029883a 	mov	r20,r2
 8003370:	182b883a 	mov	r21,r3
 8003374:	d9800d17 	ldw	r6,52(sp)
 8003378:	30000626 	beq	r6,zero,8003394 <_dtoa_r+0x478>
 800337c:	a009883a 	mov	r4,r20
 8003380:	a80b883a 	mov	r5,r21
 8003384:	000d883a 	mov	r6,zero
 8003388:	01cffc34 	movhi	r7,16368
 800338c:	800ba680 	call	800ba68 <__ledf2>
 8003390:	10043216 	blt	r2,zero,800445c <_dtoa_r+0x1540>
 8003394:	8809883a 	mov	r4,r17
 8003398:	800cbc40 	call	800cbc4 <__floatsidf>
 800339c:	1009883a 	mov	r4,r2
 80033a0:	180b883a 	mov	r5,r3
 80033a4:	a00d883a 	mov	r6,r20
 80033a8:	a80f883a 	mov	r7,r21
 80033ac:	800bb480 	call	800bb48 <__muldf3>
 80033b0:	000d883a 	mov	r6,zero
 80033b4:	1009883a 	mov	r4,r2
 80033b8:	180b883a 	mov	r5,r3
 80033bc:	01d00734 	movhi	r7,16412
 80033c0:	800a79c0 	call	800a79c <__adddf3>
 80033c4:	1023883a 	mov	r17,r2
 80033c8:	d9800617 	ldw	r6,24(sp)
 80033cc:	00bf3034 	movhi	r2,64704
 80033d0:	1885883a 	add	r2,r3,r2
 80033d4:	d8800e15 	stw	r2,56(sp)
 80033d8:	30032e26 	beq	r6,zero,8004094 <_dtoa_r+0x1178>
 80033dc:	d8c00517 	ldw	r3,20(sp)
 80033e0:	da800617 	ldw	r10,24(sp)
 80033e4:	d8c01215 	stw	r3,72(sp)
 80033e8:	d9000b17 	ldw	r4,44(sp)
 80033ec:	2003b026 	beq	r4,zero,80042b0 <_dtoa_r+0x1394>
 80033f0:	50bfffc4 	addi	r2,r10,-1
 80033f4:	100490fa 	slli	r2,r2,3
 80033f8:	00c20074 	movhi	r3,2049
 80033fc:	18fa5c04 	addi	r3,r3,-5776
 8003400:	1885883a 	add	r2,r3,r2
 8003404:	11800017 	ldw	r6,0(r2)
 8003408:	11c00117 	ldw	r7,4(r2)
 800340c:	d8800717 	ldw	r2,28(sp)
 8003410:	0009883a 	mov	r4,zero
 8003414:	014ff834 	movhi	r5,16352
 8003418:	da801615 	stw	r10,88(sp)
 800341c:	15c00044 	addi	r23,r2,1
 8003420:	800b0380 	call	800b038 <__divdf3>
 8003424:	d9c00e17 	ldw	r7,56(sp)
 8003428:	880d883a 	mov	r6,r17
 800342c:	1009883a 	mov	r4,r2
 8003430:	180b883a 	mov	r5,r3
 8003434:	800c26c0 	call	800c26c <__subdf3>
 8003438:	a80b883a 	mov	r5,r21
 800343c:	a009883a 	mov	r4,r20
 8003440:	d8c01015 	stw	r3,64(sp)
 8003444:	d8800e15 	stw	r2,56(sp)
 8003448:	800cb3c0 	call	800cb3c <__fixdfsi>
 800344c:	1009883a 	mov	r4,r2
 8003450:	d8801715 	stw	r2,92(sp)
 8003454:	800cbc40 	call	800cbc4 <__floatsidf>
 8003458:	a009883a 	mov	r4,r20
 800345c:	a80b883a 	mov	r5,r21
 8003460:	100d883a 	mov	r6,r2
 8003464:	180f883a 	mov	r7,r3
 8003468:	800c26c0 	call	800c26c <__subdf3>
 800346c:	da001717 	ldw	r8,92(sp)
 8003470:	1829883a 	mov	r20,r3
 8003474:	d8c00717 	ldw	r3,28(sp)
 8003478:	d9000e17 	ldw	r4,56(sp)
 800347c:	d9401017 	ldw	r5,64(sp)
 8003480:	42000c04 	addi	r8,r8,48
 8003484:	1023883a 	mov	r17,r2
 8003488:	1a000005 	stb	r8,0(r3)
 800348c:	880d883a 	mov	r6,r17
 8003490:	a00f883a 	mov	r7,r20
 8003494:	402b883a 	mov	r21,r8
 8003498:	800b9880 	call	800b988 <__gedf2>
 800349c:	00844516 	blt	zero,r2,80045b4 <_dtoa_r+0x1698>
 80034a0:	0009883a 	mov	r4,zero
 80034a4:	014ffc34 	movhi	r5,16368
 80034a8:	880d883a 	mov	r6,r17
 80034ac:	a00f883a 	mov	r7,r20
 80034b0:	800c26c0 	call	800c26c <__subdf3>
 80034b4:	d9000e17 	ldw	r4,56(sp)
 80034b8:	d9401017 	ldw	r5,64(sp)
 80034bc:	100d883a 	mov	r6,r2
 80034c0:	180f883a 	mov	r7,r3
 80034c4:	800b9880 	call	800b988 <__gedf2>
 80034c8:	da801617 	ldw	r10,88(sp)
 80034cc:	00843616 	blt	zero,r2,80045a8 <_dtoa_r+0x168c>
 80034d0:	00800044 	movi	r2,1
 80034d4:	12806e0e 	bge	r2,r10,8003690 <_dtoa_r+0x774>
 80034d8:	d9000717 	ldw	r4,28(sp)
 80034dc:	dd801315 	stw	r22,76(sp)
 80034e0:	dc001115 	stw	r16,68(sp)
 80034e4:	2295883a 	add	r10,r4,r10
 80034e8:	dcc01415 	stw	r19,80(sp)
 80034ec:	502d883a 	mov	r22,r10
 80034f0:	dcc01017 	ldw	r19,64(sp)
 80034f4:	b821883a 	mov	r16,r23
 80034f8:	dc801015 	stw	r18,64(sp)
 80034fc:	dc800e17 	ldw	r18,56(sp)
 8003500:	00000906 	br	8003528 <_dtoa_r+0x60c>
 8003504:	800c26c0 	call	800c26c <__subdf3>
 8003508:	1009883a 	mov	r4,r2
 800350c:	180b883a 	mov	r5,r3
 8003510:	900d883a 	mov	r6,r18
 8003514:	980f883a 	mov	r7,r19
 8003518:	800ba680 	call	800ba68 <__ledf2>
 800351c:	10040e16 	blt	r2,zero,8004558 <_dtoa_r+0x163c>
 8003520:	b821883a 	mov	r16,r23
 8003524:	bd841026 	beq	r23,r22,8004568 <_dtoa_r+0x164c>
 8003528:	9009883a 	mov	r4,r18
 800352c:	980b883a 	mov	r5,r19
 8003530:	000d883a 	mov	r6,zero
 8003534:	01d00934 	movhi	r7,16420
 8003538:	800bb480 	call	800bb48 <__muldf3>
 800353c:	000d883a 	mov	r6,zero
 8003540:	01d00934 	movhi	r7,16420
 8003544:	8809883a 	mov	r4,r17
 8003548:	a00b883a 	mov	r5,r20
 800354c:	1025883a 	mov	r18,r2
 8003550:	1827883a 	mov	r19,r3
 8003554:	800bb480 	call	800bb48 <__muldf3>
 8003558:	180b883a 	mov	r5,r3
 800355c:	1009883a 	mov	r4,r2
 8003560:	1823883a 	mov	r17,r3
 8003564:	1029883a 	mov	r20,r2
 8003568:	800cb3c0 	call	800cb3c <__fixdfsi>
 800356c:	1009883a 	mov	r4,r2
 8003570:	102b883a 	mov	r21,r2
 8003574:	800cbc40 	call	800cbc4 <__floatsidf>
 8003578:	a009883a 	mov	r4,r20
 800357c:	880b883a 	mov	r5,r17
 8003580:	100d883a 	mov	r6,r2
 8003584:	180f883a 	mov	r7,r3
 8003588:	800c26c0 	call	800c26c <__subdf3>
 800358c:	ad400c04 	addi	r21,r21,48
 8003590:	1009883a 	mov	r4,r2
 8003594:	180b883a 	mov	r5,r3
 8003598:	900d883a 	mov	r6,r18
 800359c:	980f883a 	mov	r7,r19
 80035a0:	85400005 	stb	r21,0(r16)
 80035a4:	1023883a 	mov	r17,r2
 80035a8:	1829883a 	mov	r20,r3
 80035ac:	800ba680 	call	800ba68 <__ledf2>
 80035b0:	bdc00044 	addi	r23,r23,1
 80035b4:	0009883a 	mov	r4,zero
 80035b8:	014ffc34 	movhi	r5,16368
 80035bc:	880d883a 	mov	r6,r17
 80035c0:	a00f883a 	mov	r7,r20
 80035c4:	103fcf0e 	bge	r2,zero,8003504 <__flash_exceptions_start+0xf7e024e4>
 80035c8:	d9801217 	ldw	r6,72(sp)
 80035cc:	dc001117 	ldw	r16,68(sp)
 80035d0:	d9800515 	stw	r6,20(sp)
 80035d4:	8009883a 	mov	r4,r16
 80035d8:	e00b883a 	mov	r5,fp
 80035dc:	800665c0 	call	800665c <_Bfree>
 80035e0:	d8c00517 	ldw	r3,20(sp)
 80035e4:	d9002317 	ldw	r4,140(sp)
 80035e8:	d9802517 	ldw	r6,148(sp)
 80035ec:	b8000005 	stb	zero,0(r23)
 80035f0:	18800044 	addi	r2,r3,1
 80035f4:	20800015 	stw	r2,0(r4)
 80035f8:	30027226 	beq	r6,zero,8003fc4 <_dtoa_r+0x10a8>
 80035fc:	35c00015 	stw	r23,0(r6)
 8003600:	d8800717 	ldw	r2,28(sp)
 8003604:	003e7406 	br	8002fd8 <__flash_exceptions_start+0xf7e01fb8>
 8003608:	00800434 	movhi	r2,16
 800360c:	10bfffc4 	addi	r2,r2,-1
 8003610:	a8aa703a 	and	r21,r21,r2
 8003614:	a83e801e 	bne	r21,zero,8003018 <__flash_exceptions_start+0xf7e01ff8>
 8003618:	00820074 	movhi	r2,2049
 800361c:	10ba3d04 	addi	r2,r2,-5900
 8003620:	003e7f06 	br	8003020 <__flash_exceptions_start+0xf7e02000>
 8003624:	10c00204 	addi	r3,r2,8
 8003628:	003e8206 	br	8003034 <__flash_exceptions_start+0xf7e02014>
 800362c:	01400434 	movhi	r5,16
 8003630:	297fffc4 	addi	r5,r5,-1
 8003634:	994a703a 	and	r5,r19,r5
 8003638:	9009883a 	mov	r4,r18
 800363c:	8c7f0044 	addi	r17,r17,-1023
 8003640:	294ffc34 	orhi	r5,r5,16368
 8003644:	dd000217 	ldw	r20,8(sp)
 8003648:	d8000f15 	stw	zero,60(sp)
 800364c:	003e9f06 	br	80030cc <__flash_exceptions_start+0xf7e020ac>
 8003650:	00820074 	movhi	r2,2049
 8003654:	10ba3404 	addi	r2,r2,-5936
 8003658:	003e5f06 	br	8002fd8 <__flash_exceptions_start+0xf7e01fb8>
 800365c:	80001115 	stw	zero,68(r16)
 8003660:	8009883a 	mov	r4,r16
 8003664:	000b883a 	mov	r5,zero
 8003668:	80065b40 	call	80065b4 <_Balloc>
 800366c:	01bfffc4 	movi	r6,-1
 8003670:	d8800715 	stw	r2,28(sp)
 8003674:	80801015 	stw	r2,64(r16)
 8003678:	00800044 	movi	r2,1
 800367c:	d9800c15 	stw	r6,48(sp)
 8003680:	d8800b15 	stw	r2,44(sp)
 8003684:	d9800615 	stw	r6,24(sp)
 8003688:	d8002215 	stw	zero,136(sp)
 800368c:	d8000315 	stw	zero,12(sp)
 8003690:	d8800117 	ldw	r2,4(sp)
 8003694:	10008e16 	blt	r2,zero,80038d0 <_dtoa_r+0x9b4>
 8003698:	d9000517 	ldw	r4,20(sp)
 800369c:	00c00384 	movi	r3,14
 80036a0:	19008b16 	blt	r3,r4,80038d0 <_dtoa_r+0x9b4>
 80036a4:	200490fa 	slli	r2,r4,3
 80036a8:	00c20074 	movhi	r3,2049
 80036ac:	d9802217 	ldw	r6,136(sp)
 80036b0:	18fa5c04 	addi	r3,r3,-5776
 80036b4:	1885883a 	add	r2,r3,r2
 80036b8:	14400017 	ldw	r17,0(r2)
 80036bc:	15000117 	ldw	r20,4(r2)
 80036c0:	3001c716 	blt	r6,zero,8003de0 <_dtoa_r+0xec4>
 80036c4:	880d883a 	mov	r6,r17
 80036c8:	a00f883a 	mov	r7,r20
 80036cc:	9009883a 	mov	r4,r18
 80036d0:	980b883a 	mov	r5,r19
 80036d4:	800b0380 	call	800b038 <__divdf3>
 80036d8:	180b883a 	mov	r5,r3
 80036dc:	1009883a 	mov	r4,r2
 80036e0:	800cb3c0 	call	800cb3c <__fixdfsi>
 80036e4:	1009883a 	mov	r4,r2
 80036e8:	102d883a 	mov	r22,r2
 80036ec:	800cbc40 	call	800cbc4 <__floatsidf>
 80036f0:	1009883a 	mov	r4,r2
 80036f4:	180b883a 	mov	r5,r3
 80036f8:	880d883a 	mov	r6,r17
 80036fc:	a00f883a 	mov	r7,r20
 8003700:	800bb480 	call	800bb48 <__muldf3>
 8003704:	9009883a 	mov	r4,r18
 8003708:	980b883a 	mov	r5,r19
 800370c:	100d883a 	mov	r6,r2
 8003710:	180f883a 	mov	r7,r3
 8003714:	800c26c0 	call	800c26c <__subdf3>
 8003718:	d9000717 	ldw	r4,28(sp)
 800371c:	d9800617 	ldw	r6,24(sp)
 8003720:	180b883a 	mov	r5,r3
 8003724:	b0c00c04 	addi	r3,r22,48
 8003728:	20c00005 	stb	r3,0(r4)
 800372c:	25c00044 	addi	r23,r4,1
 8003730:	01000044 	movi	r4,1
 8003734:	1011883a 	mov	r8,r2
 8003738:	2807883a 	mov	r3,r5
 800373c:	31003d26 	beq	r6,r4,8003834 <_dtoa_r+0x918>
 8003740:	000d883a 	mov	r6,zero
 8003744:	01d00934 	movhi	r7,16420
 8003748:	1009883a 	mov	r4,r2
 800374c:	800bb480 	call	800bb48 <__muldf3>
 8003750:	1009883a 	mov	r4,r2
 8003754:	180b883a 	mov	r5,r3
 8003758:	000d883a 	mov	r6,zero
 800375c:	000f883a 	mov	r7,zero
 8003760:	1027883a 	mov	r19,r2
 8003764:	182b883a 	mov	r21,r3
 8003768:	800b9040 	call	800b904 <__eqdf2>
 800376c:	103f9926 	beq	r2,zero,80035d4 <__flash_exceptions_start+0xf7e025b4>
 8003770:	d8c00617 	ldw	r3,24(sp)
 8003774:	d9000717 	ldw	r4,28(sp)
 8003778:	b825883a 	mov	r18,r23
 800377c:	18bfffc4 	addi	r2,r3,-1
 8003780:	20ad883a 	add	r22,r4,r2
 8003784:	dc000315 	stw	r16,12(sp)
 8003788:	00000a06 	br	80037b4 <_dtoa_r+0x898>
 800378c:	800bb480 	call	800bb48 <__muldf3>
 8003790:	1009883a 	mov	r4,r2
 8003794:	180b883a 	mov	r5,r3
 8003798:	000d883a 	mov	r6,zero
 800379c:	000f883a 	mov	r7,zero
 80037a0:	1027883a 	mov	r19,r2
 80037a4:	182b883a 	mov	r21,r3
 80037a8:	b825883a 	mov	r18,r23
 80037ac:	800b9040 	call	800b904 <__eqdf2>
 80037b0:	10022626 	beq	r2,zero,800404c <_dtoa_r+0x1130>
 80037b4:	880d883a 	mov	r6,r17
 80037b8:	a00f883a 	mov	r7,r20
 80037bc:	9809883a 	mov	r4,r19
 80037c0:	a80b883a 	mov	r5,r21
 80037c4:	800b0380 	call	800b038 <__divdf3>
 80037c8:	180b883a 	mov	r5,r3
 80037cc:	1009883a 	mov	r4,r2
 80037d0:	800cb3c0 	call	800cb3c <__fixdfsi>
 80037d4:	1009883a 	mov	r4,r2
 80037d8:	1021883a 	mov	r16,r2
 80037dc:	800cbc40 	call	800cbc4 <__floatsidf>
 80037e0:	1009883a 	mov	r4,r2
 80037e4:	180b883a 	mov	r5,r3
 80037e8:	880d883a 	mov	r6,r17
 80037ec:	a00f883a 	mov	r7,r20
 80037f0:	800bb480 	call	800bb48 <__muldf3>
 80037f4:	9809883a 	mov	r4,r19
 80037f8:	a80b883a 	mov	r5,r21
 80037fc:	100d883a 	mov	r6,r2
 8003800:	180f883a 	mov	r7,r3
 8003804:	800c26c0 	call	800c26c <__subdf3>
 8003808:	82000c04 	addi	r8,r16,48
 800380c:	92000005 	stb	r8,0(r18)
 8003810:	1009883a 	mov	r4,r2
 8003814:	180b883a 	mov	r5,r3
 8003818:	000d883a 	mov	r6,zero
 800381c:	01d00934 	movhi	r7,16420
 8003820:	1011883a 	mov	r8,r2
 8003824:	bdc00044 	addi	r23,r23,1
 8003828:	95bfd81e 	bne	r18,r22,800378c <__flash_exceptions_start+0xf7e0276c>
 800382c:	802d883a 	mov	r22,r16
 8003830:	dc000317 	ldw	r16,12(sp)
 8003834:	4009883a 	mov	r4,r8
 8003838:	180b883a 	mov	r5,r3
 800383c:	400d883a 	mov	r6,r8
 8003840:	180f883a 	mov	r7,r3
 8003844:	800a79c0 	call	800a79c <__adddf3>
 8003848:	8809883a 	mov	r4,r17
 800384c:	a00b883a 	mov	r5,r20
 8003850:	100d883a 	mov	r6,r2
 8003854:	180f883a 	mov	r7,r3
 8003858:	1027883a 	mov	r19,r2
 800385c:	1825883a 	mov	r18,r3
 8003860:	800ba680 	call	800ba68 <__ledf2>
 8003864:	10000816 	blt	r2,zero,8003888 <_dtoa_r+0x96c>
 8003868:	8809883a 	mov	r4,r17
 800386c:	a00b883a 	mov	r5,r20
 8003870:	980d883a 	mov	r6,r19
 8003874:	900f883a 	mov	r7,r18
 8003878:	800b9040 	call	800b904 <__eqdf2>
 800387c:	103f551e 	bne	r2,zero,80035d4 <__flash_exceptions_start+0xf7e025b4>
 8003880:	b580004c 	andi	r22,r22,1
 8003884:	b03f5326 	beq	r22,zero,80035d4 <__flash_exceptions_start+0xf7e025b4>
 8003888:	bd7fffc3 	ldbu	r21,-1(r23)
 800388c:	b8bfffc4 	addi	r2,r23,-1
 8003890:	1007883a 	mov	r3,r2
 8003894:	01400e44 	movi	r5,57
 8003898:	d9800717 	ldw	r6,28(sp)
 800389c:	00000506 	br	80038b4 <_dtoa_r+0x998>
 80038a0:	18ffffc4 	addi	r3,r3,-1
 80038a4:	30825e26 	beq	r6,r2,8004220 <_dtoa_r+0x1304>
 80038a8:	1d400003 	ldbu	r21,0(r3)
 80038ac:	102f883a 	mov	r23,r2
 80038b0:	10bfffc4 	addi	r2,r2,-1
 80038b4:	a9003fcc 	andi	r4,r21,255
 80038b8:	2100201c 	xori	r4,r4,128
 80038bc:	213fe004 	addi	r4,r4,-128
 80038c0:	217ff726 	beq	r4,r5,80038a0 <__flash_exceptions_start+0xf7e02880>
 80038c4:	aa000044 	addi	r8,r21,1
 80038c8:	12000005 	stb	r8,0(r2)
 80038cc:	003f4106 	br	80035d4 <__flash_exceptions_start+0xf7e025b4>
 80038d0:	d8c00b17 	ldw	r3,44(sp)
 80038d4:	18006726 	beq	r3,zero,8003a74 <_dtoa_r+0xb58>
 80038d8:	d9000317 	ldw	r4,12(sp)
 80038dc:	00c00044 	movi	r3,1
 80038e0:	19016a0e 	bge	r3,r4,8003e8c <_dtoa_r+0xf70>
 80038e4:	d8800617 	ldw	r2,24(sp)
 80038e8:	d8c00917 	ldw	r3,36(sp)
 80038ec:	157fffc4 	addi	r21,r2,-1
 80038f0:	1d420716 	blt	r3,r21,8004110 <_dtoa_r+0x11f4>
 80038f4:	1d6bc83a 	sub	r21,r3,r21
 80038f8:	d8800617 	ldw	r2,24(sp)
 80038fc:	1002c716 	blt	r2,zero,800441c <_dtoa_r+0x1500>
 8003900:	dd000817 	ldw	r20,32(sp)
 8003904:	d8800617 	ldw	r2,24(sp)
 8003908:	d9800817 	ldw	r6,32(sp)
 800390c:	8009883a 	mov	r4,r16
 8003910:	01400044 	movi	r5,1
 8003914:	308d883a 	add	r6,r6,r2
 8003918:	d9800815 	stw	r6,32(sp)
 800391c:	b0ad883a 	add	r22,r22,r2
 8003920:	80069c00 	call	80069c0 <__i2b>
 8003924:	1023883a 	mov	r17,r2
 8003928:	a0000826 	beq	r20,zero,800394c <_dtoa_r+0xa30>
 800392c:	0580070e 	bge	zero,r22,800394c <_dtoa_r+0xa30>
 8003930:	b005883a 	mov	r2,r22
 8003934:	a5812016 	blt	r20,r22,8003db8 <_dtoa_r+0xe9c>
 8003938:	d8c00817 	ldw	r3,32(sp)
 800393c:	a0a9c83a 	sub	r20,r20,r2
 8003940:	b0adc83a 	sub	r22,r22,r2
 8003944:	1887c83a 	sub	r3,r3,r2
 8003948:	d8c00815 	stw	r3,32(sp)
 800394c:	d9000917 	ldw	r4,36(sp)
 8003950:	0100140e 	bge	zero,r4,80039a4 <_dtoa_r+0xa88>
 8003954:	d9800b17 	ldw	r6,44(sp)
 8003958:	3001e526 	beq	r6,zero,80040f0 <_dtoa_r+0x11d4>
 800395c:	05400e0e 	bge	zero,r21,8003998 <_dtoa_r+0xa7c>
 8003960:	880b883a 	mov	r5,r17
 8003964:	8009883a 	mov	r4,r16
 8003968:	a80d883a 	mov	r6,r21
 800396c:	8006bf80 	call	8006bf8 <__pow5mult>
 8003970:	e00d883a 	mov	r6,fp
 8003974:	8009883a 	mov	r4,r16
 8003978:	100b883a 	mov	r5,r2
 800397c:	1023883a 	mov	r17,r2
 8003980:	80069fc0 	call	80069fc <__multiply>
 8003984:	102f883a 	mov	r23,r2
 8003988:	e00b883a 	mov	r5,fp
 800398c:	8009883a 	mov	r4,r16
 8003990:	800665c0 	call	800665c <_Bfree>
 8003994:	b839883a 	mov	fp,r23
 8003998:	d8800917 	ldw	r2,36(sp)
 800399c:	154dc83a 	sub	r6,r2,r21
 80039a0:	3001281e 	bne	r6,zero,8003e44 <_dtoa_r+0xf28>
 80039a4:	05c00044 	movi	r23,1
 80039a8:	8009883a 	mov	r4,r16
 80039ac:	b80b883a 	mov	r5,r23
 80039b0:	80069c00 	call	80069c0 <__i2b>
 80039b4:	d8c00a17 	ldw	r3,40(sp)
 80039b8:	102b883a 	mov	r21,r2
 80039bc:	00c0310e 	bge	zero,r3,8003a84 <_dtoa_r+0xb68>
 80039c0:	8009883a 	mov	r4,r16
 80039c4:	100b883a 	mov	r5,r2
 80039c8:	180d883a 	mov	r6,r3
 80039cc:	8006bf80 	call	8006bf8 <__pow5mult>
 80039d0:	d9000317 	ldw	r4,12(sp)
 80039d4:	102b883a 	mov	r21,r2
 80039d8:	b9011f0e 	bge	r23,r4,8003e58 <_dtoa_r+0xf3c>
 80039dc:	0027883a 	mov	r19,zero
 80039e0:	a8800417 	ldw	r2,16(r21)
 80039e4:	10800104 	addi	r2,r2,4
 80039e8:	1085883a 	add	r2,r2,r2
 80039ec:	1085883a 	add	r2,r2,r2
 80039f0:	a885883a 	add	r2,r21,r2
 80039f4:	11000017 	ldw	r4,0(r2)
 80039f8:	80068a80 	call	80068a8 <__hi0bits>
 80039fc:	00c00804 	movi	r3,32
 8003a00:	1885c83a 	sub	r2,r3,r2
 8003a04:	00002506 	br	8003a9c <_dtoa_r+0xb80>
 8003a08:	01800044 	movi	r6,1
 8003a0c:	d9800d15 	stw	r6,52(sp)
 8003a10:	003dec06 	br	80031c4 <__flash_exceptions_start+0xf7e021a4>
 8003a14:	d8c00817 	ldw	r3,32(sp)
 8003a18:	d9000517 	ldw	r4,20(sp)
 8003a1c:	d8000a15 	stw	zero,40(sp)
 8003a20:	1907c83a 	sub	r3,r3,r4
 8003a24:	010dc83a 	sub	r6,zero,r4
 8003a28:	d8c00815 	stw	r3,32(sp)
 8003a2c:	d9800915 	stw	r6,36(sp)
 8003a30:	003ded06 	br	80031e8 <__flash_exceptions_start+0xf7e021c8>
 8003a34:	05adc83a 	sub	r22,zero,r22
 8003a38:	dd800815 	stw	r22,32(sp)
 8003a3c:	002d883a 	mov	r22,zero
 8003a40:	003de406 	br	80031d4 <__flash_exceptions_start+0xf7e021b4>
 8003a44:	d9000517 	ldw	r4,20(sp)
 8003a48:	800cbc40 	call	800cbc4 <__floatsidf>
 8003a4c:	1009883a 	mov	r4,r2
 8003a50:	180b883a 	mov	r5,r3
 8003a54:	b00d883a 	mov	r6,r22
 8003a58:	a80f883a 	mov	r7,r21
 8003a5c:	800b9040 	call	800b904 <__eqdf2>
 8003a60:	103dc726 	beq	r2,zero,8003180 <__flash_exceptions_start+0xf7e02160>
 8003a64:	d8800517 	ldw	r2,20(sp)
 8003a68:	10bfffc4 	addi	r2,r2,-1
 8003a6c:	d8800515 	stw	r2,20(sp)
 8003a70:	003dc306 	br	8003180 <__flash_exceptions_start+0xf7e02160>
 8003a74:	dd400917 	ldw	r21,36(sp)
 8003a78:	dd000817 	ldw	r20,32(sp)
 8003a7c:	0023883a 	mov	r17,zero
 8003a80:	003fa906 	br	8003928 <__flash_exceptions_start+0xf7e02908>
 8003a84:	d9800317 	ldw	r6,12(sp)
 8003a88:	b981670e 	bge	r23,r6,8004028 <_dtoa_r+0x110c>
 8003a8c:	0027883a 	mov	r19,zero
 8003a90:	d8c00a17 	ldw	r3,40(sp)
 8003a94:	183fd21e 	bne	r3,zero,80039e0 <__flash_exceptions_start+0xf7e029c0>
 8003a98:	00800044 	movi	r2,1
 8003a9c:	1585883a 	add	r2,r2,r22
 8003aa0:	108007cc 	andi	r2,r2,31
 8003aa4:	10005f26 	beq	r2,zero,8003c24 <_dtoa_r+0xd08>
 8003aa8:	00c00804 	movi	r3,32
 8003aac:	1887c83a 	sub	r3,r3,r2
 8003ab0:	01000104 	movi	r4,4
 8003ab4:	20c2dd0e 	bge	r4,r3,800462c <_dtoa_r+0x1710>
 8003ab8:	d9000817 	ldw	r4,32(sp)
 8003abc:	00c00704 	movi	r3,28
 8003ac0:	1885c83a 	sub	r2,r3,r2
 8003ac4:	2089883a 	add	r4,r4,r2
 8003ac8:	d9000815 	stw	r4,32(sp)
 8003acc:	a0a9883a 	add	r20,r20,r2
 8003ad0:	b0ad883a 	add	r22,r22,r2
 8003ad4:	d8800817 	ldw	r2,32(sp)
 8003ad8:	0080050e 	bge	zero,r2,8003af0 <_dtoa_r+0xbd4>
 8003adc:	e00b883a 	mov	r5,fp
 8003ae0:	8009883a 	mov	r4,r16
 8003ae4:	100d883a 	mov	r6,r2
 8003ae8:	8006d380 	call	8006d38 <__lshift>
 8003aec:	1039883a 	mov	fp,r2
 8003af0:	0580050e 	bge	zero,r22,8003b08 <_dtoa_r+0xbec>
 8003af4:	a80b883a 	mov	r5,r21
 8003af8:	8009883a 	mov	r4,r16
 8003afc:	b00d883a 	mov	r6,r22
 8003b00:	8006d380 	call	8006d38 <__lshift>
 8003b04:	102b883a 	mov	r21,r2
 8003b08:	d8c00d17 	ldw	r3,52(sp)
 8003b0c:	1801161e 	bne	r3,zero,8003f68 <_dtoa_r+0x104c>
 8003b10:	d8c00617 	ldw	r3,24(sp)
 8003b14:	00c12d0e 	bge	zero,r3,8003fcc <_dtoa_r+0x10b0>
 8003b18:	d8c00b17 	ldw	r3,44(sp)
 8003b1c:	1800571e 	bne	r3,zero,8003c7c <_dtoa_r+0xd60>
 8003b20:	dc800717 	ldw	r18,28(sp)
 8003b24:	dcc00617 	ldw	r19,24(sp)
 8003b28:	9029883a 	mov	r20,r18
 8003b2c:	00000206 	br	8003b38 <_dtoa_r+0xc1c>
 8003b30:	80066840 	call	8006684 <__multadd>
 8003b34:	1039883a 	mov	fp,r2
 8003b38:	e009883a 	mov	r4,fp
 8003b3c:	a80b883a 	mov	r5,r21
 8003b40:	8002d1c0 	call	8002d1c <quorem>
 8003b44:	10800c04 	addi	r2,r2,48
 8003b48:	90800005 	stb	r2,0(r18)
 8003b4c:	94800044 	addi	r18,r18,1
 8003b50:	9507c83a 	sub	r3,r18,r20
 8003b54:	8009883a 	mov	r4,r16
 8003b58:	e00b883a 	mov	r5,fp
 8003b5c:	01800284 	movi	r6,10
 8003b60:	000f883a 	mov	r7,zero
 8003b64:	1cfff216 	blt	r3,r19,8003b30 <__flash_exceptions_start+0xf7e02b10>
 8003b68:	1011883a 	mov	r8,r2
 8003b6c:	d8800617 	ldw	r2,24(sp)
 8003b70:	00822e0e 	bge	zero,r2,800442c <_dtoa_r+0x1510>
 8003b74:	d9000717 	ldw	r4,28(sp)
 8003b78:	0025883a 	mov	r18,zero
 8003b7c:	20af883a 	add	r23,r4,r2
 8003b80:	e00b883a 	mov	r5,fp
 8003b84:	01800044 	movi	r6,1
 8003b88:	8009883a 	mov	r4,r16
 8003b8c:	da001715 	stw	r8,92(sp)
 8003b90:	8006d380 	call	8006d38 <__lshift>
 8003b94:	1009883a 	mov	r4,r2
 8003b98:	a80b883a 	mov	r5,r21
 8003b9c:	1039883a 	mov	fp,r2
 8003ba0:	8006e880 	call	8006e88 <__mcmp>
 8003ba4:	da001717 	ldw	r8,92(sp)
 8003ba8:	00816e0e 	bge	zero,r2,8004164 <_dtoa_r+0x1248>
 8003bac:	b93fffc3 	ldbu	r4,-1(r23)
 8003bb0:	b8bfffc4 	addi	r2,r23,-1
 8003bb4:	1007883a 	mov	r3,r2
 8003bb8:	01800e44 	movi	r6,57
 8003bbc:	d9c00717 	ldw	r7,28(sp)
 8003bc0:	00000506 	br	8003bd8 <_dtoa_r+0xcbc>
 8003bc4:	18ffffc4 	addi	r3,r3,-1
 8003bc8:	38811926 	beq	r7,r2,8004030 <_dtoa_r+0x1114>
 8003bcc:	19000003 	ldbu	r4,0(r3)
 8003bd0:	102f883a 	mov	r23,r2
 8003bd4:	10bfffc4 	addi	r2,r2,-1
 8003bd8:	21403fcc 	andi	r5,r4,255
 8003bdc:	2940201c 	xori	r5,r5,128
 8003be0:	297fe004 	addi	r5,r5,-128
 8003be4:	29bff726 	beq	r5,r6,8003bc4 <__flash_exceptions_start+0xf7e02ba4>
 8003be8:	21000044 	addi	r4,r4,1
 8003bec:	11000005 	stb	r4,0(r2)
 8003bf0:	8009883a 	mov	r4,r16
 8003bf4:	a80b883a 	mov	r5,r21
 8003bf8:	800665c0 	call	800665c <_Bfree>
 8003bfc:	883e7526 	beq	r17,zero,80035d4 <__flash_exceptions_start+0xf7e025b4>
 8003c00:	90000426 	beq	r18,zero,8003c14 <_dtoa_r+0xcf8>
 8003c04:	94400326 	beq	r18,r17,8003c14 <_dtoa_r+0xcf8>
 8003c08:	8009883a 	mov	r4,r16
 8003c0c:	900b883a 	mov	r5,r18
 8003c10:	800665c0 	call	800665c <_Bfree>
 8003c14:	8009883a 	mov	r4,r16
 8003c18:	880b883a 	mov	r5,r17
 8003c1c:	800665c0 	call	800665c <_Bfree>
 8003c20:	003e6c06 	br	80035d4 <__flash_exceptions_start+0xf7e025b4>
 8003c24:	00800704 	movi	r2,28
 8003c28:	d9800817 	ldw	r6,32(sp)
 8003c2c:	a0a9883a 	add	r20,r20,r2
 8003c30:	b0ad883a 	add	r22,r22,r2
 8003c34:	308d883a 	add	r6,r6,r2
 8003c38:	d9800815 	stw	r6,32(sp)
 8003c3c:	003fa506 	br	8003ad4 <__flash_exceptions_start+0xf7e02ab4>
 8003c40:	013efb84 	movi	r4,-1042
 8003c44:	246bc83a 	sub	r21,r4,r17
 8003c48:	9548983a 	sll	r4,r18,r21
 8003c4c:	003d1806 	br	80030b0 <__flash_exceptions_start+0xf7e02090>
 8003c50:	d8000d15 	stw	zero,52(sp)
 8003c54:	003d5b06 	br	80031c4 <__flash_exceptions_start+0xf7e021a4>
 8003c58:	880b883a 	mov	r5,r17
 8003c5c:	8009883a 	mov	r4,r16
 8003c60:	01800284 	movi	r6,10
 8003c64:	000f883a 	mov	r7,zero
 8003c68:	80066840 	call	8006684 <__multadd>
 8003c6c:	1023883a 	mov	r17,r2
 8003c70:	d8800c17 	ldw	r2,48(sp)
 8003c74:	0082550e 	bge	zero,r2,80045cc <_dtoa_r+0x16b0>
 8003c78:	d8800615 	stw	r2,24(sp)
 8003c7c:	0500050e 	bge	zero,r20,8003c94 <_dtoa_r+0xd78>
 8003c80:	880b883a 	mov	r5,r17
 8003c84:	8009883a 	mov	r4,r16
 8003c88:	a00d883a 	mov	r6,r20
 8003c8c:	8006d380 	call	8006d38 <__lshift>
 8003c90:	1023883a 	mov	r17,r2
 8003c94:	98016a1e 	bne	r19,zero,8004240 <_dtoa_r+0x1324>
 8003c98:	8829883a 	mov	r20,r17
 8003c9c:	d9000617 	ldw	r4,24(sp)
 8003ca0:	dcc00717 	ldw	r19,28(sp)
 8003ca4:	9480004c 	andi	r18,r18,1
 8003ca8:	20bfffc4 	addi	r2,r4,-1
 8003cac:	9885883a 	add	r2,r19,r2
 8003cb0:	d8800415 	stw	r2,16(sp)
 8003cb4:	dc800615 	stw	r18,24(sp)
 8003cb8:	e009883a 	mov	r4,fp
 8003cbc:	a80b883a 	mov	r5,r21
 8003cc0:	8002d1c0 	call	8002d1c <quorem>
 8003cc4:	e009883a 	mov	r4,fp
 8003cc8:	880b883a 	mov	r5,r17
 8003ccc:	102f883a 	mov	r23,r2
 8003cd0:	8006e880 	call	8006e88 <__mcmp>
 8003cd4:	8009883a 	mov	r4,r16
 8003cd8:	a80b883a 	mov	r5,r21
 8003cdc:	a00d883a 	mov	r6,r20
 8003ce0:	102d883a 	mov	r22,r2
 8003ce4:	8006ee80 	call	8006ee8 <__mdiff>
 8003ce8:	1007883a 	mov	r3,r2
 8003cec:	10800317 	ldw	r2,12(r2)
 8003cf0:	bc800c04 	addi	r18,r23,48
 8003cf4:	1000971e 	bne	r2,zero,8003f54 <_dtoa_r+0x1038>
 8003cf8:	180b883a 	mov	r5,r3
 8003cfc:	e009883a 	mov	r4,fp
 8003d00:	d8c01515 	stw	r3,84(sp)
 8003d04:	8006e880 	call	8006e88 <__mcmp>
 8003d08:	d8c01517 	ldw	r3,84(sp)
 8003d0c:	8009883a 	mov	r4,r16
 8003d10:	d8801515 	stw	r2,84(sp)
 8003d14:	180b883a 	mov	r5,r3
 8003d18:	800665c0 	call	800665c <_Bfree>
 8003d1c:	d8801517 	ldw	r2,84(sp)
 8003d20:	1000041e 	bne	r2,zero,8003d34 <_dtoa_r+0xe18>
 8003d24:	d9800317 	ldw	r6,12(sp)
 8003d28:	3000021e 	bne	r6,zero,8003d34 <_dtoa_r+0xe18>
 8003d2c:	d8c00617 	ldw	r3,24(sp)
 8003d30:	18007626 	beq	r3,zero,8003f0c <_dtoa_r+0xff0>
 8003d34:	b0005b16 	blt	r22,zero,8003ea4 <_dtoa_r+0xf88>
 8003d38:	b000041e 	bne	r22,zero,8003d4c <_dtoa_r+0xe30>
 8003d3c:	d9000317 	ldw	r4,12(sp)
 8003d40:	2000021e 	bne	r4,zero,8003d4c <_dtoa_r+0xe30>
 8003d44:	d8c00617 	ldw	r3,24(sp)
 8003d48:	18005626 	beq	r3,zero,8003ea4 <_dtoa_r+0xf88>
 8003d4c:	00814d16 	blt	zero,r2,8004284 <_dtoa_r+0x1368>
 8003d50:	d8c00417 	ldw	r3,16(sp)
 8003d54:	9d800044 	addi	r22,r19,1
 8003d58:	9c800005 	stb	r18,0(r19)
 8003d5c:	b02f883a 	mov	r23,r22
 8003d60:	98c14c26 	beq	r19,r3,8004294 <_dtoa_r+0x1378>
 8003d64:	e00b883a 	mov	r5,fp
 8003d68:	8009883a 	mov	r4,r16
 8003d6c:	01800284 	movi	r6,10
 8003d70:	000f883a 	mov	r7,zero
 8003d74:	80066840 	call	8006684 <__multadd>
 8003d78:	1039883a 	mov	fp,r2
 8003d7c:	8d006d26 	beq	r17,r20,8003f34 <_dtoa_r+0x1018>
 8003d80:	880b883a 	mov	r5,r17
 8003d84:	01800284 	movi	r6,10
 8003d88:	000f883a 	mov	r7,zero
 8003d8c:	8009883a 	mov	r4,r16
 8003d90:	80066840 	call	8006684 <__multadd>
 8003d94:	a00b883a 	mov	r5,r20
 8003d98:	8009883a 	mov	r4,r16
 8003d9c:	01800284 	movi	r6,10
 8003da0:	000f883a 	mov	r7,zero
 8003da4:	1023883a 	mov	r17,r2
 8003da8:	80066840 	call	8006684 <__multadd>
 8003dac:	1029883a 	mov	r20,r2
 8003db0:	b027883a 	mov	r19,r22
 8003db4:	003fc006 	br	8003cb8 <__flash_exceptions_start+0xf7e02c98>
 8003db8:	a005883a 	mov	r2,r20
 8003dbc:	003ede06 	br	8003938 <__flash_exceptions_start+0xf7e02918>
 8003dc0:	01000044 	movi	r4,1
 8003dc4:	d9000b15 	stw	r4,44(sp)
 8003dc8:	d9802217 	ldw	r6,136(sp)
 8003dcc:	0180dc0e 	bge	zero,r6,8004140 <_dtoa_r+0x1224>
 8003dd0:	3023883a 	mov	r17,r6
 8003dd4:	d9800c15 	stw	r6,48(sp)
 8003dd8:	d9800615 	stw	r6,24(sp)
 8003ddc:	003d1e06 	br	8003258 <__flash_exceptions_start+0xf7e02238>
 8003de0:	d8800617 	ldw	r2,24(sp)
 8003de4:	00be3716 	blt	zero,r2,80036c4 <__flash_exceptions_start+0xf7e026a4>
 8003de8:	1000be1e 	bne	r2,zero,80040e4 <_dtoa_r+0x11c8>
 8003dec:	8809883a 	mov	r4,r17
 8003df0:	a00b883a 	mov	r5,r20
 8003df4:	000d883a 	mov	r6,zero
 8003df8:	01d00534 	movhi	r7,16404
 8003dfc:	800bb480 	call	800bb48 <__muldf3>
 8003e00:	1009883a 	mov	r4,r2
 8003e04:	180b883a 	mov	r5,r3
 8003e08:	900d883a 	mov	r6,r18
 8003e0c:	980f883a 	mov	r7,r19
 8003e10:	800b9880 	call	800b988 <__gedf2>
 8003e14:	002b883a 	mov	r21,zero
 8003e18:	0023883a 	mov	r17,zero
 8003e1c:	10007a16 	blt	r2,zero,8004008 <_dtoa_r+0x10ec>
 8003e20:	d9002217 	ldw	r4,136(sp)
 8003e24:	ddc00717 	ldw	r23,28(sp)
 8003e28:	0108303a 	nor	r4,zero,r4
 8003e2c:	d9000515 	stw	r4,20(sp)
 8003e30:	8009883a 	mov	r4,r16
 8003e34:	a80b883a 	mov	r5,r21
 8003e38:	800665c0 	call	800665c <_Bfree>
 8003e3c:	883f751e 	bne	r17,zero,8003c14 <__flash_exceptions_start+0xf7e02bf4>
 8003e40:	003de406 	br	80035d4 <__flash_exceptions_start+0xf7e025b4>
 8003e44:	e00b883a 	mov	r5,fp
 8003e48:	8009883a 	mov	r4,r16
 8003e4c:	8006bf80 	call	8006bf8 <__pow5mult>
 8003e50:	1039883a 	mov	fp,r2
 8003e54:	003ed306 	br	80039a4 <__flash_exceptions_start+0xf7e02984>
 8003e58:	903ee01e 	bne	r18,zero,80039dc <__flash_exceptions_start+0xf7e029bc>
 8003e5c:	00800434 	movhi	r2,16
 8003e60:	10bfffc4 	addi	r2,r2,-1
 8003e64:	9884703a 	and	r2,r19,r2
 8003e68:	103f081e 	bne	r2,zero,8003a8c <__flash_exceptions_start+0xf7e02a6c>
 8003e6c:	9cdffc2c 	andhi	r19,r19,32752
 8003e70:	983f0626 	beq	r19,zero,8003a8c <__flash_exceptions_start+0xf7e02a6c>
 8003e74:	d8800817 	ldw	r2,32(sp)
 8003e78:	b5800044 	addi	r22,r22,1
 8003e7c:	04c00044 	movi	r19,1
 8003e80:	10800044 	addi	r2,r2,1
 8003e84:	d8800815 	stw	r2,32(sp)
 8003e88:	003f0106 	br	8003a90 <__flash_exceptions_start+0xf7e02a70>
 8003e8c:	d9800f17 	ldw	r6,60(sp)
 8003e90:	30016826 	beq	r6,zero,8004434 <_dtoa_r+0x1518>
 8003e94:	10810cc4 	addi	r2,r2,1075
 8003e98:	dd400917 	ldw	r21,36(sp)
 8003e9c:	dd000817 	ldw	r20,32(sp)
 8003ea0:	003e9906 	br	8003908 <__flash_exceptions_start+0xf7e028e8>
 8003ea4:	9011883a 	mov	r8,r18
 8003ea8:	4007883a 	mov	r3,r8
 8003eac:	e02d883a 	mov	r22,fp
 8003eb0:	0080100e 	bge	zero,r2,8003ef4 <_dtoa_r+0xfd8>
 8003eb4:	01800044 	movi	r6,1
 8003eb8:	8009883a 	mov	r4,r16
 8003ebc:	e00b883a 	mov	r5,fp
 8003ec0:	da001515 	stw	r8,84(sp)
 8003ec4:	da001715 	stw	r8,92(sp)
 8003ec8:	8006d380 	call	8006d38 <__lshift>
 8003ecc:	1009883a 	mov	r4,r2
 8003ed0:	a80b883a 	mov	r5,r21
 8003ed4:	102d883a 	mov	r22,r2
 8003ed8:	8006e880 	call	8006e88 <__mcmp>
 8003edc:	d8c01517 	ldw	r3,84(sp)
 8003ee0:	da001717 	ldw	r8,92(sp)
 8003ee4:	0081a50e 	bge	zero,r2,800457c <_dtoa_r+0x1660>
 8003ee8:	00800e44 	movi	r2,57
 8003eec:	40817b26 	beq	r8,r2,80044dc <_dtoa_r+0x15c0>
 8003ef0:	40c00044 	addi	r3,r8,1
 8003ef4:	8825883a 	mov	r18,r17
 8003ef8:	9dc00044 	addi	r23,r19,1
 8003efc:	98c00005 	stb	r3,0(r19)
 8003f00:	a023883a 	mov	r17,r20
 8003f04:	b039883a 	mov	fp,r22
 8003f08:	003f3906 	br	8003bf0 <__flash_exceptions_start+0xf7e02bd0>
 8003f0c:	00800e44 	movi	r2,57
 8003f10:	9011883a 	mov	r8,r18
 8003f14:	90817226 	beq	r18,r2,80044e0 <_dtoa_r+0x15c4>
 8003f18:	0580010e 	bge	zero,r22,8003f20 <_dtoa_r+0x1004>
 8003f1c:	ba000c44 	addi	r8,r23,49
 8003f20:	8825883a 	mov	r18,r17
 8003f24:	9dc00044 	addi	r23,r19,1
 8003f28:	9a000005 	stb	r8,0(r19)
 8003f2c:	a023883a 	mov	r17,r20
 8003f30:	003f2f06 	br	8003bf0 <__flash_exceptions_start+0xf7e02bd0>
 8003f34:	880b883a 	mov	r5,r17
 8003f38:	8009883a 	mov	r4,r16
 8003f3c:	01800284 	movi	r6,10
 8003f40:	000f883a 	mov	r7,zero
 8003f44:	80066840 	call	8006684 <__multadd>
 8003f48:	1023883a 	mov	r17,r2
 8003f4c:	1029883a 	mov	r20,r2
 8003f50:	003f9706 	br	8003db0 <__flash_exceptions_start+0xf7e02d90>
 8003f54:	8009883a 	mov	r4,r16
 8003f58:	180b883a 	mov	r5,r3
 8003f5c:	800665c0 	call	800665c <_Bfree>
 8003f60:	00800044 	movi	r2,1
 8003f64:	003f7306 	br	8003d34 <__flash_exceptions_start+0xf7e02d14>
 8003f68:	e009883a 	mov	r4,fp
 8003f6c:	a80b883a 	mov	r5,r21
 8003f70:	8006e880 	call	8006e88 <__mcmp>
 8003f74:	103ee60e 	bge	r2,zero,8003b10 <__flash_exceptions_start+0xf7e02af0>
 8003f78:	8009883a 	mov	r4,r16
 8003f7c:	e00b883a 	mov	r5,fp
 8003f80:	01800284 	movi	r6,10
 8003f84:	000f883a 	mov	r7,zero
 8003f88:	80066840 	call	8006684 <__multadd>
 8003f8c:	d9000517 	ldw	r4,20(sp)
 8003f90:	d9800b17 	ldw	r6,44(sp)
 8003f94:	1039883a 	mov	fp,r2
 8003f98:	213fffc4 	addi	r4,r4,-1
 8003f9c:	d9000515 	stw	r4,20(sp)
 8003fa0:	303f2d1e 	bne	r6,zero,8003c58 <__flash_exceptions_start+0xf7e02c38>
 8003fa4:	d9000c17 	ldw	r4,48(sp)
 8003fa8:	0101780e 	bge	zero,r4,800458c <_dtoa_r+0x1670>
 8003fac:	d9000615 	stw	r4,24(sp)
 8003fb0:	003edb06 	br	8003b20 <__flash_exceptions_start+0xf7e02b00>
 8003fb4:	00800084 	movi	r2,2
 8003fb8:	30818e1e 	bne	r6,r2,80045f4 <_dtoa_r+0x16d8>
 8003fbc:	d8000b15 	stw	zero,44(sp)
 8003fc0:	003f8106 	br	8003dc8 <__flash_exceptions_start+0xf7e02da8>
 8003fc4:	d8800717 	ldw	r2,28(sp)
 8003fc8:	003c0306 	br	8002fd8 <__flash_exceptions_start+0xf7e01fb8>
 8003fcc:	d9000317 	ldw	r4,12(sp)
 8003fd0:	00800084 	movi	r2,2
 8003fd4:	113ed00e 	bge	r2,r4,8003b18 <__flash_exceptions_start+0xf7e02af8>
 8003fd8:	d8c00617 	ldw	r3,24(sp)
 8003fdc:	183f901e 	bne	r3,zero,8003e20 <__flash_exceptions_start+0xf7e02e00>
 8003fe0:	a80b883a 	mov	r5,r21
 8003fe4:	8009883a 	mov	r4,r16
 8003fe8:	01800144 	movi	r6,5
 8003fec:	000f883a 	mov	r7,zero
 8003ff0:	80066840 	call	8006684 <__multadd>
 8003ff4:	e009883a 	mov	r4,fp
 8003ff8:	100b883a 	mov	r5,r2
 8003ffc:	102b883a 	mov	r21,r2
 8004000:	8006e880 	call	8006e88 <__mcmp>
 8004004:	00bf860e 	bge	zero,r2,8003e20 <__flash_exceptions_start+0xf7e02e00>
 8004008:	d9800717 	ldw	r6,28(sp)
 800400c:	00800c44 	movi	r2,49
 8004010:	30800005 	stb	r2,0(r6)
 8004014:	d8800517 	ldw	r2,20(sp)
 8004018:	35c00044 	addi	r23,r6,1
 800401c:	10800044 	addi	r2,r2,1
 8004020:	d8800515 	stw	r2,20(sp)
 8004024:	003f8206 	br	8003e30 <__flash_exceptions_start+0xf7e02e10>
 8004028:	903e981e 	bne	r18,zero,8003a8c <__flash_exceptions_start+0xf7e02a6c>
 800402c:	003f8b06 	br	8003e5c <__flash_exceptions_start+0xf7e02e3c>
 8004030:	d9800517 	ldw	r6,20(sp)
 8004034:	d8c00717 	ldw	r3,28(sp)
 8004038:	00800c44 	movi	r2,49
 800403c:	31800044 	addi	r6,r6,1
 8004040:	d9800515 	stw	r6,20(sp)
 8004044:	18800005 	stb	r2,0(r3)
 8004048:	003ee906 	br	8003bf0 <__flash_exceptions_start+0xf7e02bd0>
 800404c:	dc000317 	ldw	r16,12(sp)
 8004050:	003d6006 	br	80035d4 <__flash_exceptions_start+0xf7e025b4>
 8004054:	8809883a 	mov	r4,r17
 8004058:	800cbc40 	call	800cbc4 <__floatsidf>
 800405c:	a009883a 	mov	r4,r20
 8004060:	a80b883a 	mov	r5,r21
 8004064:	100d883a 	mov	r6,r2
 8004068:	180f883a 	mov	r7,r3
 800406c:	800bb480 	call	800bb48 <__muldf3>
 8004070:	1009883a 	mov	r4,r2
 8004074:	180b883a 	mov	r5,r3
 8004078:	000d883a 	mov	r6,zero
 800407c:	01d00734 	movhi	r7,16412
 8004080:	800a79c0 	call	800a79c <__adddf3>
 8004084:	1023883a 	mov	r17,r2
 8004088:	00bf3034 	movhi	r2,64704
 800408c:	1885883a 	add	r2,r3,r2
 8004090:	d8800e15 	stw	r2,56(sp)
 8004094:	a009883a 	mov	r4,r20
 8004098:	a80b883a 	mov	r5,r21
 800409c:	000d883a 	mov	r6,zero
 80040a0:	01d00534 	movhi	r7,16404
 80040a4:	800c26c0 	call	800c26c <__subdf3>
 80040a8:	d9c00e17 	ldw	r7,56(sp)
 80040ac:	1009883a 	mov	r4,r2
 80040b0:	180b883a 	mov	r5,r3
 80040b4:	880d883a 	mov	r6,r17
 80040b8:	102b883a 	mov	r21,r2
 80040bc:	1829883a 	mov	r20,r3
 80040c0:	800b9880 	call	800b988 <__gedf2>
 80040c4:	00807716 	blt	zero,r2,80042a4 <_dtoa_r+0x1388>
 80040c8:	d8800e17 	ldw	r2,56(sp)
 80040cc:	a809883a 	mov	r4,r21
 80040d0:	a00b883a 	mov	r5,r20
 80040d4:	11e0003c 	xorhi	r7,r2,32768
 80040d8:	880d883a 	mov	r6,r17
 80040dc:	800ba680 	call	800ba68 <__ledf2>
 80040e0:	103d6b0e 	bge	r2,zero,8003690 <__flash_exceptions_start+0xf7e02670>
 80040e4:	002b883a 	mov	r21,zero
 80040e8:	0023883a 	mov	r17,zero
 80040ec:	003f4c06 	br	8003e20 <__flash_exceptions_start+0xf7e02e00>
 80040f0:	d9800917 	ldw	r6,36(sp)
 80040f4:	e00b883a 	mov	r5,fp
 80040f8:	8009883a 	mov	r4,r16
 80040fc:	8006bf80 	call	8006bf8 <__pow5mult>
 8004100:	1039883a 	mov	fp,r2
 8004104:	003e2706 	br	80039a4 <__flash_exceptions_start+0xf7e02984>
 8004108:	d8000b15 	stw	zero,44(sp)
 800410c:	003c4906 	br	8003234 <__flash_exceptions_start+0xf7e02214>
 8004110:	d9000917 	ldw	r4,36(sp)
 8004114:	d9800a17 	ldw	r6,40(sp)
 8004118:	dd400915 	stw	r21,36(sp)
 800411c:	a905c83a 	sub	r2,r21,r4
 8004120:	308d883a 	add	r6,r6,r2
 8004124:	d9800a15 	stw	r6,40(sp)
 8004128:	002b883a 	mov	r21,zero
 800412c:	003df206 	br	80038f8 <__flash_exceptions_start+0xf7e028d8>
 8004130:	dc800e15 	stw	r18,56(sp)
 8004134:	982b883a 	mov	r21,r19
 8004138:	04400084 	movi	r17,2
 800413c:	003c7406 	br	8003310 <__flash_exceptions_start+0xf7e022f0>
 8004140:	04400044 	movi	r17,1
 8004144:	dc400c15 	stw	r17,48(sp)
 8004148:	dc400615 	stw	r17,24(sp)
 800414c:	dc402215 	stw	r17,136(sp)
 8004150:	80001115 	stw	zero,68(r16)
 8004154:	000b883a 	mov	r5,zero
 8004158:	003c4a06 	br	8003284 <__flash_exceptions_start+0xf7e02264>
 800415c:	3023883a 	mov	r17,r6
 8004160:	003ffb06 	br	8004150 <__flash_exceptions_start+0xf7e03130>
 8004164:	1000021e 	bne	r2,zero,8004170 <_dtoa_r+0x1254>
 8004168:	4200004c 	andi	r8,r8,1
 800416c:	403e8f1e 	bne	r8,zero,8003bac <__flash_exceptions_start+0xf7e02b8c>
 8004170:	01000c04 	movi	r4,48
 8004174:	00000106 	br	800417c <_dtoa_r+0x1260>
 8004178:	102f883a 	mov	r23,r2
 800417c:	b8bfffc4 	addi	r2,r23,-1
 8004180:	10c00007 	ldb	r3,0(r2)
 8004184:	193ffc26 	beq	r3,r4,8004178 <__flash_exceptions_start+0xf7e03158>
 8004188:	003e9906 	br	8003bf0 <__flash_exceptions_start+0xf7e02bd0>
 800418c:	d9000517 	ldw	r4,20(sp)
 8004190:	012fc83a 	sub	r23,zero,r4
 8004194:	b800ad26 	beq	r23,zero,800444c <_dtoa_r+0x1530>
 8004198:	b88003cc 	andi	r2,r23,15
 800419c:	100490fa 	slli	r2,r2,3
 80041a0:	00c20074 	movhi	r3,2049
 80041a4:	18fa5c04 	addi	r3,r3,-5776
 80041a8:	1885883a 	add	r2,r3,r2
 80041ac:	11800017 	ldw	r6,0(r2)
 80041b0:	11c00117 	ldw	r7,4(r2)
 80041b4:	b82fd13a 	srai	r23,r23,4
 80041b8:	9009883a 	mov	r4,r18
 80041bc:	980b883a 	mov	r5,r19
 80041c0:	800bb480 	call	800bb48 <__muldf3>
 80041c4:	1029883a 	mov	r20,r2
 80041c8:	182b883a 	mov	r21,r3
 80041cc:	b800f426 	beq	r23,zero,80045a0 <_dtoa_r+0x1684>
 80041d0:	02020074 	movhi	r8,2049
 80041d4:	423a5204 	addi	r8,r8,-5816
 80041d8:	8029883a 	mov	r20,r16
 80041dc:	04400084 	movi	r17,2
 80041e0:	4021883a 	mov	r16,r8
 80041e4:	b980004c 	andi	r6,r23,1
 80041e8:	1009883a 	mov	r4,r2
 80041ec:	b82fd07a 	srai	r23,r23,1
 80041f0:	180b883a 	mov	r5,r3
 80041f4:	30000426 	beq	r6,zero,8004208 <_dtoa_r+0x12ec>
 80041f8:	81800017 	ldw	r6,0(r16)
 80041fc:	81c00117 	ldw	r7,4(r16)
 8004200:	8c400044 	addi	r17,r17,1
 8004204:	800bb480 	call	800bb48 <__muldf3>
 8004208:	84000204 	addi	r16,r16,8
 800420c:	b83ff51e 	bne	r23,zero,80041e4 <__flash_exceptions_start+0xf7e031c4>
 8004210:	a021883a 	mov	r16,r20
 8004214:	182b883a 	mov	r21,r3
 8004218:	1029883a 	mov	r20,r2
 800421c:	003c5506 	br	8003374 <__flash_exceptions_start+0xf7e02354>
 8004220:	d9800517 	ldw	r6,20(sp)
 8004224:	d9000717 	ldw	r4,28(sp)
 8004228:	00c00c04 	movi	r3,48
 800422c:	31800044 	addi	r6,r6,1
 8004230:	d9800515 	stw	r6,20(sp)
 8004234:	20c00005 	stb	r3,0(r4)
 8004238:	02000c44 	movi	r8,49
 800423c:	003da206 	br	80038c8 <__flash_exceptions_start+0xf7e028a8>
 8004240:	89400117 	ldw	r5,4(r17)
 8004244:	8009883a 	mov	r4,r16
 8004248:	80065b40 	call	80065b4 <_Balloc>
 800424c:	89800417 	ldw	r6,16(r17)
 8004250:	11000304 	addi	r4,r2,12
 8004254:	89400304 	addi	r5,r17,12
 8004258:	31800084 	addi	r6,r6,2
 800425c:	318d883a 	add	r6,r6,r6
 8004260:	318d883a 	add	r6,r6,r6
 8004264:	1027883a 	mov	r19,r2
 8004268:	80061fc0 	call	80061fc <memcpy>
 800426c:	8009883a 	mov	r4,r16
 8004270:	980b883a 	mov	r5,r19
 8004274:	01800044 	movi	r6,1
 8004278:	8006d380 	call	8006d38 <__lshift>
 800427c:	1029883a 	mov	r20,r2
 8004280:	003e8606 	br	8003c9c <__flash_exceptions_start+0xf7e02c7c>
 8004284:	00800e44 	movi	r2,57
 8004288:	90809526 	beq	r18,r2,80044e0 <_dtoa_r+0x15c4>
 800428c:	92000044 	addi	r8,r18,1
 8004290:	003f2306 	br	8003f20 <__flash_exceptions_start+0xf7e02f00>
 8004294:	9011883a 	mov	r8,r18
 8004298:	8825883a 	mov	r18,r17
 800429c:	a023883a 	mov	r17,r20
 80042a0:	003e3706 	br	8003b80 <__flash_exceptions_start+0xf7e02b60>
 80042a4:	002b883a 	mov	r21,zero
 80042a8:	0023883a 	mov	r17,zero
 80042ac:	003f5606 	br	8004008 <__flash_exceptions_start+0xf7e02fe8>
 80042b0:	51bfffc4 	addi	r6,r10,-1
 80042b4:	300490fa 	slli	r2,r6,3
 80042b8:	00c20074 	movhi	r3,2049
 80042bc:	18fa5c04 	addi	r3,r3,-5776
 80042c0:	1885883a 	add	r2,r3,r2
 80042c4:	d9c00e17 	ldw	r7,56(sp)
 80042c8:	11000017 	ldw	r4,0(r2)
 80042cc:	11400117 	ldw	r5,4(r2)
 80042d0:	d8800717 	ldw	r2,28(sp)
 80042d4:	d9801015 	stw	r6,64(sp)
 80042d8:	880d883a 	mov	r6,r17
 80042dc:	da801615 	stw	r10,88(sp)
 80042e0:	15c00044 	addi	r23,r2,1
 80042e4:	800bb480 	call	800bb48 <__muldf3>
 80042e8:	a80b883a 	mov	r5,r21
 80042ec:	a009883a 	mov	r4,r20
 80042f0:	d8c01115 	stw	r3,68(sp)
 80042f4:	d8800e15 	stw	r2,56(sp)
 80042f8:	800cb3c0 	call	800cb3c <__fixdfsi>
 80042fc:	1009883a 	mov	r4,r2
 8004300:	1023883a 	mov	r17,r2
 8004304:	800cbc40 	call	800cbc4 <__floatsidf>
 8004308:	a009883a 	mov	r4,r20
 800430c:	a80b883a 	mov	r5,r21
 8004310:	100d883a 	mov	r6,r2
 8004314:	180f883a 	mov	r7,r3
 8004318:	800c26c0 	call	800c26c <__subdf3>
 800431c:	1813883a 	mov	r9,r3
 8004320:	d8c00717 	ldw	r3,28(sp)
 8004324:	8c400c04 	addi	r17,r17,48
 8004328:	1011883a 	mov	r8,r2
 800432c:	1c400005 	stb	r17,0(r3)
 8004330:	da801617 	ldw	r10,88(sp)
 8004334:	00800044 	movi	r2,1
 8004338:	50802326 	beq	r10,r2,80043c8 <_dtoa_r+0x14ac>
 800433c:	d8800717 	ldw	r2,28(sp)
 8004340:	b82b883a 	mov	r21,r23
 8004344:	dc001315 	stw	r16,76(sp)
 8004348:	12a9883a 	add	r20,r2,r10
 800434c:	4807883a 	mov	r3,r9
 8004350:	4005883a 	mov	r2,r8
 8004354:	dc801415 	stw	r18,80(sp)
 8004358:	000d883a 	mov	r6,zero
 800435c:	01d00934 	movhi	r7,16420
 8004360:	1009883a 	mov	r4,r2
 8004364:	180b883a 	mov	r5,r3
 8004368:	800bb480 	call	800bb48 <__muldf3>
 800436c:	180b883a 	mov	r5,r3
 8004370:	1009883a 	mov	r4,r2
 8004374:	1821883a 	mov	r16,r3
 8004378:	1025883a 	mov	r18,r2
 800437c:	800cb3c0 	call	800cb3c <__fixdfsi>
 8004380:	1009883a 	mov	r4,r2
 8004384:	1023883a 	mov	r17,r2
 8004388:	800cbc40 	call	800cbc4 <__floatsidf>
 800438c:	9009883a 	mov	r4,r18
 8004390:	800b883a 	mov	r5,r16
 8004394:	100d883a 	mov	r6,r2
 8004398:	180f883a 	mov	r7,r3
 800439c:	8c400c04 	addi	r17,r17,48
 80043a0:	800c26c0 	call	800c26c <__subdf3>
 80043a4:	ad400044 	addi	r21,r21,1
 80043a8:	ac7fffc5 	stb	r17,-1(r21)
 80043ac:	ad3fea1e 	bne	r21,r20,8004358 <__flash_exceptions_start+0xf7e03338>
 80043b0:	1813883a 	mov	r9,r3
 80043b4:	d8c01017 	ldw	r3,64(sp)
 80043b8:	dc001317 	ldw	r16,76(sp)
 80043bc:	dc801417 	ldw	r18,80(sp)
 80043c0:	1011883a 	mov	r8,r2
 80043c4:	b8ef883a 	add	r23,r23,r3
 80043c8:	d9000e17 	ldw	r4,56(sp)
 80043cc:	d9401117 	ldw	r5,68(sp)
 80043d0:	000d883a 	mov	r6,zero
 80043d4:	01cff834 	movhi	r7,16352
 80043d8:	da001715 	stw	r8,92(sp)
 80043dc:	da401515 	stw	r9,84(sp)
 80043e0:	800a79c0 	call	800a79c <__adddf3>
 80043e4:	da001717 	ldw	r8,92(sp)
 80043e8:	da401517 	ldw	r9,84(sp)
 80043ec:	1009883a 	mov	r4,r2
 80043f0:	400d883a 	mov	r6,r8
 80043f4:	480f883a 	mov	r7,r9
 80043f8:	180b883a 	mov	r5,r3
 80043fc:	800ba680 	call	800ba68 <__ledf2>
 8004400:	da001717 	ldw	r8,92(sp)
 8004404:	da401517 	ldw	r9,84(sp)
 8004408:	10003b0e 	bge	r2,zero,80044f8 <_dtoa_r+0x15dc>
 800440c:	d9001217 	ldw	r4,72(sp)
 8004410:	bd7fffc3 	ldbu	r21,-1(r23)
 8004414:	d9000515 	stw	r4,20(sp)
 8004418:	003d1c06 	br	800388c <__flash_exceptions_start+0xf7e0286c>
 800441c:	d8c00817 	ldw	r3,32(sp)
 8004420:	18a9c83a 	sub	r20,r3,r2
 8004424:	0005883a 	mov	r2,zero
 8004428:	003d3706 	br	8003908 <__flash_exceptions_start+0xf7e028e8>
 800442c:	00800044 	movi	r2,1
 8004430:	003dd006 	br	8003b74 <__flash_exceptions_start+0xf7e02b54>
 8004434:	d8c00217 	ldw	r3,8(sp)
 8004438:	00800d84 	movi	r2,54
 800443c:	dd400917 	ldw	r21,36(sp)
 8004440:	10c5c83a 	sub	r2,r2,r3
 8004444:	dd000817 	ldw	r20,32(sp)
 8004448:	003d2f06 	br	8003908 <__flash_exceptions_start+0xf7e028e8>
 800444c:	9029883a 	mov	r20,r18
 8004450:	982b883a 	mov	r21,r19
 8004454:	04400084 	movi	r17,2
 8004458:	003bc606 	br	8003374 <__flash_exceptions_start+0xf7e02354>
 800445c:	d8800617 	ldw	r2,24(sp)
 8004460:	103efc26 	beq	r2,zero,8004054 <__flash_exceptions_start+0xf7e03034>
 8004464:	d8c00c17 	ldw	r3,48(sp)
 8004468:	00fc890e 	bge	zero,r3,8003690 <__flash_exceptions_start+0xf7e02670>
 800446c:	a80b883a 	mov	r5,r21
 8004470:	a009883a 	mov	r4,r20
 8004474:	000d883a 	mov	r6,zero
 8004478:	01d00934 	movhi	r7,16420
 800447c:	800bb480 	call	800bb48 <__muldf3>
 8004480:	89000044 	addi	r4,r17,1
 8004484:	1029883a 	mov	r20,r2
 8004488:	182b883a 	mov	r21,r3
 800448c:	800cbc40 	call	800cbc4 <__floatsidf>
 8004490:	a009883a 	mov	r4,r20
 8004494:	a80b883a 	mov	r5,r21
 8004498:	100d883a 	mov	r6,r2
 800449c:	180f883a 	mov	r7,r3
 80044a0:	800bb480 	call	800bb48 <__muldf3>
 80044a4:	1009883a 	mov	r4,r2
 80044a8:	180b883a 	mov	r5,r3
 80044ac:	000d883a 	mov	r6,zero
 80044b0:	01d00734 	movhi	r7,16412
 80044b4:	800a79c0 	call	800a79c <__adddf3>
 80044b8:	d9000517 	ldw	r4,20(sp)
 80044bc:	1023883a 	mov	r17,r2
 80044c0:	00bf3034 	movhi	r2,64704
 80044c4:	213fffc4 	addi	r4,r4,-1
 80044c8:	1885883a 	add	r2,r3,r2
 80044cc:	d9001215 	stw	r4,72(sp)
 80044d0:	d8800e15 	stw	r2,56(sp)
 80044d4:	da800c17 	ldw	r10,48(sp)
 80044d8:	003bc306 	br	80033e8 <__flash_exceptions_start+0xf7e023c8>
 80044dc:	b039883a 	mov	fp,r22
 80044e0:	01000e44 	movi	r4,57
 80044e4:	8825883a 	mov	r18,r17
 80044e8:	9dc00044 	addi	r23,r19,1
 80044ec:	99000005 	stb	r4,0(r19)
 80044f0:	a023883a 	mov	r17,r20
 80044f4:	003dae06 	br	8003bb0 <__flash_exceptions_start+0xf7e02b90>
 80044f8:	d9800e17 	ldw	r6,56(sp)
 80044fc:	d9c01117 	ldw	r7,68(sp)
 8004500:	0009883a 	mov	r4,zero
 8004504:	014ff834 	movhi	r5,16352
 8004508:	da001715 	stw	r8,92(sp)
 800450c:	da401515 	stw	r9,84(sp)
 8004510:	800c26c0 	call	800c26c <__subdf3>
 8004514:	da001717 	ldw	r8,92(sp)
 8004518:	da401517 	ldw	r9,84(sp)
 800451c:	1009883a 	mov	r4,r2
 8004520:	180b883a 	mov	r5,r3
 8004524:	400d883a 	mov	r6,r8
 8004528:	480f883a 	mov	r7,r9
 800452c:	800b9880 	call	800b988 <__gedf2>
 8004530:	00bc570e 	bge	zero,r2,8003690 <__flash_exceptions_start+0xf7e02670>
 8004534:	01000c04 	movi	r4,48
 8004538:	00000106 	br	8004540 <_dtoa_r+0x1624>
 800453c:	102f883a 	mov	r23,r2
 8004540:	b8bfffc4 	addi	r2,r23,-1
 8004544:	10c00007 	ldb	r3,0(r2)
 8004548:	193ffc26 	beq	r3,r4,800453c <__flash_exceptions_start+0xf7e0351c>
 800454c:	d9801217 	ldw	r6,72(sp)
 8004550:	d9800515 	stw	r6,20(sp)
 8004554:	003c1f06 	br	80035d4 <__flash_exceptions_start+0xf7e025b4>
 8004558:	d8801217 	ldw	r2,72(sp)
 800455c:	dc001117 	ldw	r16,68(sp)
 8004560:	d8800515 	stw	r2,20(sp)
 8004564:	003cc906 	br	800388c <__flash_exceptions_start+0xf7e0286c>
 8004568:	dd801317 	ldw	r22,76(sp)
 800456c:	dc001117 	ldw	r16,68(sp)
 8004570:	dcc01417 	ldw	r19,80(sp)
 8004574:	dc801017 	ldw	r18,64(sp)
 8004578:	003c4506 	br	8003690 <__flash_exceptions_start+0xf7e02670>
 800457c:	103e5d1e 	bne	r2,zero,8003ef4 <__flash_exceptions_start+0xf7e02ed4>
 8004580:	4080004c 	andi	r2,r8,1
 8004584:	103e5b26 	beq	r2,zero,8003ef4 <__flash_exceptions_start+0xf7e02ed4>
 8004588:	003e5706 	br	8003ee8 <__flash_exceptions_start+0xf7e02ec8>
 800458c:	d8c00317 	ldw	r3,12(sp)
 8004590:	00800084 	movi	r2,2
 8004594:	10c00a16 	blt	r2,r3,80045c0 <_dtoa_r+0x16a4>
 8004598:	d9000c17 	ldw	r4,48(sp)
 800459c:	003e8306 	br	8003fac <__flash_exceptions_start+0xf7e02f8c>
 80045a0:	04400084 	movi	r17,2
 80045a4:	003b7306 	br	8003374 <__flash_exceptions_start+0xf7e02354>
 80045a8:	d9801217 	ldw	r6,72(sp)
 80045ac:	d9800515 	stw	r6,20(sp)
 80045b0:	003cb606 	br	800388c <__flash_exceptions_start+0xf7e0286c>
 80045b4:	d9001217 	ldw	r4,72(sp)
 80045b8:	d9000515 	stw	r4,20(sp)
 80045bc:	003c0506 	br	80035d4 <__flash_exceptions_start+0xf7e025b4>
 80045c0:	d9800c17 	ldw	r6,48(sp)
 80045c4:	d9800615 	stw	r6,24(sp)
 80045c8:	003e8306 	br	8003fd8 <__flash_exceptions_start+0xf7e02fb8>
 80045cc:	d9800317 	ldw	r6,12(sp)
 80045d0:	00800084 	movi	r2,2
 80045d4:	11800216 	blt	r2,r6,80045e0 <_dtoa_r+0x16c4>
 80045d8:	d8800c17 	ldw	r2,48(sp)
 80045dc:	003da606 	br	8003c78 <__flash_exceptions_start+0xf7e02c58>
 80045e0:	d8800c17 	ldw	r2,48(sp)
 80045e4:	d8800615 	stw	r2,24(sp)
 80045e8:	003e7b06 	br	8003fd8 <__flash_exceptions_start+0xf7e02fb8>
 80045ec:	05000044 	movi	r20,1
 80045f0:	003b0506 	br	8003208 <__flash_exceptions_start+0xf7e021e8>
 80045f4:	8009883a 	mov	r4,r16
 80045f8:	80001115 	stw	zero,68(r16)
 80045fc:	000b883a 	mov	r5,zero
 8004600:	80065b40 	call	80065b4 <_Balloc>
 8004604:	d8800715 	stw	r2,28(sp)
 8004608:	d8c00717 	ldw	r3,28(sp)
 800460c:	00bfffc4 	movi	r2,-1
 8004610:	01000044 	movi	r4,1
 8004614:	d8800c15 	stw	r2,48(sp)
 8004618:	80c01015 	stw	r3,64(r16)
 800461c:	d9000b15 	stw	r4,44(sp)
 8004620:	d8800615 	stw	r2,24(sp)
 8004624:	d8002215 	stw	zero,136(sp)
 8004628:	003c1906 	br	8003690 <__flash_exceptions_start+0xf7e02670>
 800462c:	193d2926 	beq	r3,r4,8003ad4 <__flash_exceptions_start+0xf7e02ab4>
 8004630:	00c00f04 	movi	r3,60
 8004634:	1885c83a 	sub	r2,r3,r2
 8004638:	003d7b06 	br	8003c28 <__flash_exceptions_start+0xf7e02c08>
 800463c:	000b883a 	mov	r5,zero
 8004640:	003b1006 	br	8003284 <__flash_exceptions_start+0xf7e02264>

08004644 <__sflush_r>:
 8004644:	2880030b 	ldhu	r2,12(r5)
 8004648:	defffb04 	addi	sp,sp,-20
 800464c:	dcc00315 	stw	r19,12(sp)
 8004650:	dc400115 	stw	r17,4(sp)
 8004654:	dfc00415 	stw	ra,16(sp)
 8004658:	dc800215 	stw	r18,8(sp)
 800465c:	dc000015 	stw	r16,0(sp)
 8004660:	10c0020c 	andi	r3,r2,8
 8004664:	2823883a 	mov	r17,r5
 8004668:	2027883a 	mov	r19,r4
 800466c:	1800311e 	bne	r3,zero,8004734 <__sflush_r+0xf0>
 8004670:	28c00117 	ldw	r3,4(r5)
 8004674:	10820014 	ori	r2,r2,2048
 8004678:	2880030d 	sth	r2,12(r5)
 800467c:	00c04b0e 	bge	zero,r3,80047ac <__sflush_r+0x168>
 8004680:	8a000a17 	ldw	r8,40(r17)
 8004684:	40002326 	beq	r8,zero,8004714 <__sflush_r+0xd0>
 8004688:	9c000017 	ldw	r16,0(r19)
 800468c:	10c4000c 	andi	r3,r2,4096
 8004690:	98000015 	stw	zero,0(r19)
 8004694:	18004826 	beq	r3,zero,80047b8 <__sflush_r+0x174>
 8004698:	89801417 	ldw	r6,80(r17)
 800469c:	10c0010c 	andi	r3,r2,4
 80046a0:	18000626 	beq	r3,zero,80046bc <__sflush_r+0x78>
 80046a4:	88c00117 	ldw	r3,4(r17)
 80046a8:	88800c17 	ldw	r2,48(r17)
 80046ac:	30cdc83a 	sub	r6,r6,r3
 80046b0:	10000226 	beq	r2,zero,80046bc <__sflush_r+0x78>
 80046b4:	88800f17 	ldw	r2,60(r17)
 80046b8:	308dc83a 	sub	r6,r6,r2
 80046bc:	89400717 	ldw	r5,28(r17)
 80046c0:	9809883a 	mov	r4,r19
 80046c4:	000f883a 	mov	r7,zero
 80046c8:	403ee83a 	callr	r8
 80046cc:	00ffffc4 	movi	r3,-1
 80046d0:	10c04426 	beq	r2,r3,80047e4 <__sflush_r+0x1a0>
 80046d4:	88c0030b 	ldhu	r3,12(r17)
 80046d8:	89000417 	ldw	r4,16(r17)
 80046dc:	88000115 	stw	zero,4(r17)
 80046e0:	197dffcc 	andi	r5,r3,63487
 80046e4:	8940030d 	sth	r5,12(r17)
 80046e8:	89000015 	stw	r4,0(r17)
 80046ec:	18c4000c 	andi	r3,r3,4096
 80046f0:	18002c1e 	bne	r3,zero,80047a4 <__sflush_r+0x160>
 80046f4:	89400c17 	ldw	r5,48(r17)
 80046f8:	9c000015 	stw	r16,0(r19)
 80046fc:	28000526 	beq	r5,zero,8004714 <__sflush_r+0xd0>
 8004700:	88801004 	addi	r2,r17,64
 8004704:	28800226 	beq	r5,r2,8004710 <__sflush_r+0xcc>
 8004708:	9809883a 	mov	r4,r19
 800470c:	8004d9c0 	call	8004d9c <_free_r>
 8004710:	88000c15 	stw	zero,48(r17)
 8004714:	0005883a 	mov	r2,zero
 8004718:	dfc00417 	ldw	ra,16(sp)
 800471c:	dcc00317 	ldw	r19,12(sp)
 8004720:	dc800217 	ldw	r18,8(sp)
 8004724:	dc400117 	ldw	r17,4(sp)
 8004728:	dc000017 	ldw	r16,0(sp)
 800472c:	dec00504 	addi	sp,sp,20
 8004730:	f800283a 	ret
 8004734:	2c800417 	ldw	r18,16(r5)
 8004738:	903ff626 	beq	r18,zero,8004714 <__flash_exceptions_start+0xf7e036f4>
 800473c:	2c000017 	ldw	r16,0(r5)
 8004740:	108000cc 	andi	r2,r2,3
 8004744:	2c800015 	stw	r18,0(r5)
 8004748:	84a1c83a 	sub	r16,r16,r18
 800474c:	1000131e 	bne	r2,zero,800479c <__sflush_r+0x158>
 8004750:	28800517 	ldw	r2,20(r5)
 8004754:	88800215 	stw	r2,8(r17)
 8004758:	04000316 	blt	zero,r16,8004768 <__sflush_r+0x124>
 800475c:	003fed06 	br	8004714 <__flash_exceptions_start+0xf7e036f4>
 8004760:	90a5883a 	add	r18,r18,r2
 8004764:	043feb0e 	bge	zero,r16,8004714 <__flash_exceptions_start+0xf7e036f4>
 8004768:	88800917 	ldw	r2,36(r17)
 800476c:	89400717 	ldw	r5,28(r17)
 8004770:	800f883a 	mov	r7,r16
 8004774:	900d883a 	mov	r6,r18
 8004778:	9809883a 	mov	r4,r19
 800477c:	103ee83a 	callr	r2
 8004780:	80a1c83a 	sub	r16,r16,r2
 8004784:	00bff616 	blt	zero,r2,8004760 <__flash_exceptions_start+0xf7e03740>
 8004788:	88c0030b 	ldhu	r3,12(r17)
 800478c:	00bfffc4 	movi	r2,-1
 8004790:	18c01014 	ori	r3,r3,64
 8004794:	88c0030d 	sth	r3,12(r17)
 8004798:	003fdf06 	br	8004718 <__flash_exceptions_start+0xf7e036f8>
 800479c:	0005883a 	mov	r2,zero
 80047a0:	003fec06 	br	8004754 <__flash_exceptions_start+0xf7e03734>
 80047a4:	88801415 	stw	r2,80(r17)
 80047a8:	003fd206 	br	80046f4 <__flash_exceptions_start+0xf7e036d4>
 80047ac:	28c00f17 	ldw	r3,60(r5)
 80047b0:	00ffb316 	blt	zero,r3,8004680 <__flash_exceptions_start+0xf7e03660>
 80047b4:	003fd706 	br	8004714 <__flash_exceptions_start+0xf7e036f4>
 80047b8:	89400717 	ldw	r5,28(r17)
 80047bc:	000d883a 	mov	r6,zero
 80047c0:	9809883a 	mov	r4,r19
 80047c4:	01c00044 	movi	r7,1
 80047c8:	403ee83a 	callr	r8
 80047cc:	100d883a 	mov	r6,r2
 80047d0:	00bfffc4 	movi	r2,-1
 80047d4:	30801426 	beq	r6,r2,8004828 <__sflush_r+0x1e4>
 80047d8:	8880030b 	ldhu	r2,12(r17)
 80047dc:	8a000a17 	ldw	r8,40(r17)
 80047e0:	003fae06 	br	800469c <__flash_exceptions_start+0xf7e0367c>
 80047e4:	98c00017 	ldw	r3,0(r19)
 80047e8:	183fba26 	beq	r3,zero,80046d4 <__flash_exceptions_start+0xf7e036b4>
 80047ec:	01000744 	movi	r4,29
 80047f0:	19000626 	beq	r3,r4,800480c <__sflush_r+0x1c8>
 80047f4:	01000584 	movi	r4,22
 80047f8:	19000426 	beq	r3,r4,800480c <__sflush_r+0x1c8>
 80047fc:	88c0030b 	ldhu	r3,12(r17)
 8004800:	18c01014 	ori	r3,r3,64
 8004804:	88c0030d 	sth	r3,12(r17)
 8004808:	003fc306 	br	8004718 <__flash_exceptions_start+0xf7e036f8>
 800480c:	8880030b 	ldhu	r2,12(r17)
 8004810:	88c00417 	ldw	r3,16(r17)
 8004814:	88000115 	stw	zero,4(r17)
 8004818:	10bdffcc 	andi	r2,r2,63487
 800481c:	8880030d 	sth	r2,12(r17)
 8004820:	88c00015 	stw	r3,0(r17)
 8004824:	003fb306 	br	80046f4 <__flash_exceptions_start+0xf7e036d4>
 8004828:	98800017 	ldw	r2,0(r19)
 800482c:	103fea26 	beq	r2,zero,80047d8 <__flash_exceptions_start+0xf7e037b8>
 8004830:	00c00744 	movi	r3,29
 8004834:	10c00226 	beq	r2,r3,8004840 <__sflush_r+0x1fc>
 8004838:	00c00584 	movi	r3,22
 800483c:	10ffd21e 	bne	r2,r3,8004788 <__flash_exceptions_start+0xf7e03768>
 8004840:	9c000015 	stw	r16,0(r19)
 8004844:	0005883a 	mov	r2,zero
 8004848:	003fb306 	br	8004718 <__flash_exceptions_start+0xf7e036f8>

0800484c <_fflush_r>:
 800484c:	defffd04 	addi	sp,sp,-12
 8004850:	dc000115 	stw	r16,4(sp)
 8004854:	dfc00215 	stw	ra,8(sp)
 8004858:	2021883a 	mov	r16,r4
 800485c:	20000226 	beq	r4,zero,8004868 <_fflush_r+0x1c>
 8004860:	20800e17 	ldw	r2,56(r4)
 8004864:	10000c26 	beq	r2,zero,8004898 <_fflush_r+0x4c>
 8004868:	2880030f 	ldh	r2,12(r5)
 800486c:	1000051e 	bne	r2,zero,8004884 <_fflush_r+0x38>
 8004870:	0005883a 	mov	r2,zero
 8004874:	dfc00217 	ldw	ra,8(sp)
 8004878:	dc000117 	ldw	r16,4(sp)
 800487c:	dec00304 	addi	sp,sp,12
 8004880:	f800283a 	ret
 8004884:	8009883a 	mov	r4,r16
 8004888:	dfc00217 	ldw	ra,8(sp)
 800488c:	dc000117 	ldw	r16,4(sp)
 8004890:	dec00304 	addi	sp,sp,12
 8004894:	80046441 	jmpi	8004644 <__sflush_r>
 8004898:	d9400015 	stw	r5,0(sp)
 800489c:	8004c280 	call	8004c28 <__sinit>
 80048a0:	d9400017 	ldw	r5,0(sp)
 80048a4:	003ff006 	br	8004868 <__flash_exceptions_start+0xf7e03848>

080048a8 <fflush>:
 80048a8:	20000526 	beq	r4,zero,80048c0 <fflush+0x18>
 80048ac:	00820074 	movhi	r2,2049
 80048b0:	10bdb004 	addi	r2,r2,-2368
 80048b4:	200b883a 	mov	r5,r4
 80048b8:	11000017 	ldw	r4,0(r2)
 80048bc:	800484c1 	jmpi	800484c <_fflush_r>
 80048c0:	00820074 	movhi	r2,2049
 80048c4:	10bdaf04 	addi	r2,r2,-2372
 80048c8:	11000017 	ldw	r4,0(r2)
 80048cc:	01420034 	movhi	r5,2048
 80048d0:	29521304 	addi	r5,r5,18508
 80048d4:	80056101 	jmpi	8005610 <_fwalk_reent>

080048d8 <__fp_lock>:
 80048d8:	0005883a 	mov	r2,zero
 80048dc:	f800283a 	ret

080048e0 <__fp_unlock>:
 80048e0:	0005883a 	mov	r2,zero
 80048e4:	f800283a 	ret

080048e8 <_cleanup_r>:
 80048e8:	01420074 	movhi	r5,2049
 80048ec:	2964e704 	addi	r5,r5,-27748
 80048f0:	80056101 	jmpi	8005610 <_fwalk_reent>

080048f4 <__sinit.part.1>:
 80048f4:	defff704 	addi	sp,sp,-36
 80048f8:	00c20034 	movhi	r3,2048
 80048fc:	dfc00815 	stw	ra,32(sp)
 8004900:	ddc00715 	stw	r23,28(sp)
 8004904:	dd800615 	stw	r22,24(sp)
 8004908:	dd400515 	stw	r21,20(sp)
 800490c:	dd000415 	stw	r20,16(sp)
 8004910:	dcc00315 	stw	r19,12(sp)
 8004914:	dc800215 	stw	r18,8(sp)
 8004918:	dc400115 	stw	r17,4(sp)
 800491c:	dc000015 	stw	r16,0(sp)
 8004920:	18d23a04 	addi	r3,r3,18664
 8004924:	24000117 	ldw	r16,4(r4)
 8004928:	20c00f15 	stw	r3,60(r4)
 800492c:	2080bb04 	addi	r2,r4,748
 8004930:	00c000c4 	movi	r3,3
 8004934:	20c0b915 	stw	r3,740(r4)
 8004938:	2080ba15 	stw	r2,744(r4)
 800493c:	2000b815 	stw	zero,736(r4)
 8004940:	05c00204 	movi	r23,8
 8004944:	00800104 	movi	r2,4
 8004948:	2025883a 	mov	r18,r4
 800494c:	b80d883a 	mov	r6,r23
 8004950:	81001704 	addi	r4,r16,92
 8004954:	000b883a 	mov	r5,zero
 8004958:	80000015 	stw	zero,0(r16)
 800495c:	80000115 	stw	zero,4(r16)
 8004960:	80000215 	stw	zero,8(r16)
 8004964:	8080030d 	sth	r2,12(r16)
 8004968:	80001915 	stw	zero,100(r16)
 800496c:	8000038d 	sth	zero,14(r16)
 8004970:	80000415 	stw	zero,16(r16)
 8004974:	80000515 	stw	zero,20(r16)
 8004978:	80000615 	stw	zero,24(r16)
 800497c:	80064900 	call	8006490 <memset>
 8004980:	05820034 	movhi	r22,2048
 8004984:	94400217 	ldw	r17,8(r18)
 8004988:	05420034 	movhi	r21,2048
 800498c:	05020034 	movhi	r20,2048
 8004990:	04c20034 	movhi	r19,2048
 8004994:	b59ee104 	addi	r22,r22,31620
 8004998:	ad5ef804 	addi	r21,r21,31712
 800499c:	a51f1704 	addi	r20,r20,31836
 80049a0:	9cdf2e04 	addi	r19,r19,31928
 80049a4:	85800815 	stw	r22,32(r16)
 80049a8:	85400915 	stw	r21,36(r16)
 80049ac:	85000a15 	stw	r20,40(r16)
 80049b0:	84c00b15 	stw	r19,44(r16)
 80049b4:	84000715 	stw	r16,28(r16)
 80049b8:	00800284 	movi	r2,10
 80049bc:	8880030d 	sth	r2,12(r17)
 80049c0:	00800044 	movi	r2,1
 80049c4:	89001704 	addi	r4,r17,92
 80049c8:	b80d883a 	mov	r6,r23
 80049cc:	000b883a 	mov	r5,zero
 80049d0:	88000015 	stw	zero,0(r17)
 80049d4:	88000115 	stw	zero,4(r17)
 80049d8:	88000215 	stw	zero,8(r17)
 80049dc:	88001915 	stw	zero,100(r17)
 80049e0:	8880038d 	sth	r2,14(r17)
 80049e4:	88000415 	stw	zero,16(r17)
 80049e8:	88000515 	stw	zero,20(r17)
 80049ec:	88000615 	stw	zero,24(r17)
 80049f0:	80064900 	call	8006490 <memset>
 80049f4:	94000317 	ldw	r16,12(r18)
 80049f8:	00800484 	movi	r2,18
 80049fc:	8c400715 	stw	r17,28(r17)
 8004a00:	8d800815 	stw	r22,32(r17)
 8004a04:	8d400915 	stw	r21,36(r17)
 8004a08:	8d000a15 	stw	r20,40(r17)
 8004a0c:	8cc00b15 	stw	r19,44(r17)
 8004a10:	8080030d 	sth	r2,12(r16)
 8004a14:	00800084 	movi	r2,2
 8004a18:	80000015 	stw	zero,0(r16)
 8004a1c:	80000115 	stw	zero,4(r16)
 8004a20:	80000215 	stw	zero,8(r16)
 8004a24:	80001915 	stw	zero,100(r16)
 8004a28:	8080038d 	sth	r2,14(r16)
 8004a2c:	80000415 	stw	zero,16(r16)
 8004a30:	80000515 	stw	zero,20(r16)
 8004a34:	80000615 	stw	zero,24(r16)
 8004a38:	81001704 	addi	r4,r16,92
 8004a3c:	000b883a 	mov	r5,zero
 8004a40:	b80d883a 	mov	r6,r23
 8004a44:	80064900 	call	8006490 <memset>
 8004a48:	00800044 	movi	r2,1
 8004a4c:	84000715 	stw	r16,28(r16)
 8004a50:	85800815 	stw	r22,32(r16)
 8004a54:	85400915 	stw	r21,36(r16)
 8004a58:	85000a15 	stw	r20,40(r16)
 8004a5c:	84c00b15 	stw	r19,44(r16)
 8004a60:	90800e15 	stw	r2,56(r18)
 8004a64:	dfc00817 	ldw	ra,32(sp)
 8004a68:	ddc00717 	ldw	r23,28(sp)
 8004a6c:	dd800617 	ldw	r22,24(sp)
 8004a70:	dd400517 	ldw	r21,20(sp)
 8004a74:	dd000417 	ldw	r20,16(sp)
 8004a78:	dcc00317 	ldw	r19,12(sp)
 8004a7c:	dc800217 	ldw	r18,8(sp)
 8004a80:	dc400117 	ldw	r17,4(sp)
 8004a84:	dc000017 	ldw	r16,0(sp)
 8004a88:	dec00904 	addi	sp,sp,36
 8004a8c:	f800283a 	ret

08004a90 <__sfmoreglue>:
 8004a90:	defffc04 	addi	sp,sp,-16
 8004a94:	dc400115 	stw	r17,4(sp)
 8004a98:	2c7fffc4 	addi	r17,r5,-1
 8004a9c:	8c401a24 	muli	r17,r17,104
 8004aa0:	dc800215 	stw	r18,8(sp)
 8004aa4:	2825883a 	mov	r18,r5
 8004aa8:	89401d04 	addi	r5,r17,116
 8004aac:	dc000015 	stw	r16,0(sp)
 8004ab0:	dfc00315 	stw	ra,12(sp)
 8004ab4:	800596c0 	call	800596c <_malloc_r>
 8004ab8:	1021883a 	mov	r16,r2
 8004abc:	10000726 	beq	r2,zero,8004adc <__sfmoreglue+0x4c>
 8004ac0:	11000304 	addi	r4,r2,12
 8004ac4:	10000015 	stw	zero,0(r2)
 8004ac8:	14800115 	stw	r18,4(r2)
 8004acc:	11000215 	stw	r4,8(r2)
 8004ad0:	000b883a 	mov	r5,zero
 8004ad4:	89801a04 	addi	r6,r17,104
 8004ad8:	80064900 	call	8006490 <memset>
 8004adc:	8005883a 	mov	r2,r16
 8004ae0:	dfc00317 	ldw	ra,12(sp)
 8004ae4:	dc800217 	ldw	r18,8(sp)
 8004ae8:	dc400117 	ldw	r17,4(sp)
 8004aec:	dc000017 	ldw	r16,0(sp)
 8004af0:	dec00404 	addi	sp,sp,16
 8004af4:	f800283a 	ret

08004af8 <__sfp>:
 8004af8:	00820074 	movhi	r2,2049
 8004afc:	defffb04 	addi	sp,sp,-20
 8004b00:	10bdaf04 	addi	r2,r2,-2372
 8004b04:	dc800215 	stw	r18,8(sp)
 8004b08:	14800017 	ldw	r18,0(r2)
 8004b0c:	dcc00315 	stw	r19,12(sp)
 8004b10:	dfc00415 	stw	ra,16(sp)
 8004b14:	90800e17 	ldw	r2,56(r18)
 8004b18:	dc400115 	stw	r17,4(sp)
 8004b1c:	dc000015 	stw	r16,0(sp)
 8004b20:	2027883a 	mov	r19,r4
 8004b24:	1000021e 	bne	r2,zero,8004b30 <__sfp+0x38>
 8004b28:	9009883a 	mov	r4,r18
 8004b2c:	80048f40 	call	80048f4 <__sinit.part.1>
 8004b30:	9480b804 	addi	r18,r18,736
 8004b34:	047fffc4 	movi	r17,-1
 8004b38:	91400117 	ldw	r5,4(r18)
 8004b3c:	94000217 	ldw	r16,8(r18)
 8004b40:	297fffc4 	addi	r5,r5,-1
 8004b44:	28000a16 	blt	r5,zero,8004b70 <__sfp+0x78>
 8004b48:	8080030f 	ldh	r2,12(r16)
 8004b4c:	10000c26 	beq	r2,zero,8004b80 <__sfp+0x88>
 8004b50:	80c01d04 	addi	r3,r16,116
 8004b54:	00000206 	br	8004b60 <__sfp+0x68>
 8004b58:	18bfe60f 	ldh	r2,-104(r3)
 8004b5c:	10000826 	beq	r2,zero,8004b80 <__sfp+0x88>
 8004b60:	297fffc4 	addi	r5,r5,-1
 8004b64:	1c3ffd04 	addi	r16,r3,-12
 8004b68:	18c01a04 	addi	r3,r3,104
 8004b6c:	2c7ffa1e 	bne	r5,r17,8004b58 <__flash_exceptions_start+0xf7e03b38>
 8004b70:	90800017 	ldw	r2,0(r18)
 8004b74:	10001d26 	beq	r2,zero,8004bec <__sfp+0xf4>
 8004b78:	1025883a 	mov	r18,r2
 8004b7c:	003fee06 	br	8004b38 <__flash_exceptions_start+0xf7e03b18>
 8004b80:	00bfffc4 	movi	r2,-1
 8004b84:	8080038d 	sth	r2,14(r16)
 8004b88:	00800044 	movi	r2,1
 8004b8c:	8080030d 	sth	r2,12(r16)
 8004b90:	80001915 	stw	zero,100(r16)
 8004b94:	80000015 	stw	zero,0(r16)
 8004b98:	80000215 	stw	zero,8(r16)
 8004b9c:	80000115 	stw	zero,4(r16)
 8004ba0:	80000415 	stw	zero,16(r16)
 8004ba4:	80000515 	stw	zero,20(r16)
 8004ba8:	80000615 	stw	zero,24(r16)
 8004bac:	81001704 	addi	r4,r16,92
 8004bb0:	000b883a 	mov	r5,zero
 8004bb4:	01800204 	movi	r6,8
 8004bb8:	80064900 	call	8006490 <memset>
 8004bbc:	8005883a 	mov	r2,r16
 8004bc0:	80000c15 	stw	zero,48(r16)
 8004bc4:	80000d15 	stw	zero,52(r16)
 8004bc8:	80001115 	stw	zero,68(r16)
 8004bcc:	80001215 	stw	zero,72(r16)
 8004bd0:	dfc00417 	ldw	ra,16(sp)
 8004bd4:	dcc00317 	ldw	r19,12(sp)
 8004bd8:	dc800217 	ldw	r18,8(sp)
 8004bdc:	dc400117 	ldw	r17,4(sp)
 8004be0:	dc000017 	ldw	r16,0(sp)
 8004be4:	dec00504 	addi	sp,sp,20
 8004be8:	f800283a 	ret
 8004bec:	9809883a 	mov	r4,r19
 8004bf0:	01400104 	movi	r5,4
 8004bf4:	8004a900 	call	8004a90 <__sfmoreglue>
 8004bf8:	90800015 	stw	r2,0(r18)
 8004bfc:	103fde1e 	bne	r2,zero,8004b78 <__flash_exceptions_start+0xf7e03b58>
 8004c00:	00800304 	movi	r2,12
 8004c04:	98800015 	stw	r2,0(r19)
 8004c08:	0005883a 	mov	r2,zero
 8004c0c:	003ff006 	br	8004bd0 <__flash_exceptions_start+0xf7e03bb0>

08004c10 <_cleanup>:
 8004c10:	00820074 	movhi	r2,2049
 8004c14:	10bdaf04 	addi	r2,r2,-2372
 8004c18:	11000017 	ldw	r4,0(r2)
 8004c1c:	01420074 	movhi	r5,2049
 8004c20:	2964e704 	addi	r5,r5,-27748
 8004c24:	80056101 	jmpi	8005610 <_fwalk_reent>

08004c28 <__sinit>:
 8004c28:	20800e17 	ldw	r2,56(r4)
 8004c2c:	10000126 	beq	r2,zero,8004c34 <__sinit+0xc>
 8004c30:	f800283a 	ret
 8004c34:	80048f41 	jmpi	80048f4 <__sinit.part.1>

08004c38 <__sfp_lock_acquire>:
 8004c38:	f800283a 	ret

08004c3c <__sfp_lock_release>:
 8004c3c:	f800283a 	ret

08004c40 <__sinit_lock_acquire>:
 8004c40:	f800283a 	ret

08004c44 <__sinit_lock_release>:
 8004c44:	f800283a 	ret

08004c48 <__fp_lock_all>:
 8004c48:	00820074 	movhi	r2,2049
 8004c4c:	10bdb004 	addi	r2,r2,-2368
 8004c50:	11000017 	ldw	r4,0(r2)
 8004c54:	01420034 	movhi	r5,2048
 8004c58:	29523604 	addi	r5,r5,18648
 8004c5c:	800554c1 	jmpi	800554c <_fwalk>

08004c60 <__fp_unlock_all>:
 8004c60:	00820074 	movhi	r2,2049
 8004c64:	10bdb004 	addi	r2,r2,-2368
 8004c68:	11000017 	ldw	r4,0(r2)
 8004c6c:	01420034 	movhi	r5,2048
 8004c70:	29523804 	addi	r5,r5,18656
 8004c74:	800554c1 	jmpi	800554c <_fwalk>

08004c78 <_malloc_trim_r>:
 8004c78:	defffb04 	addi	sp,sp,-20
 8004c7c:	dcc00315 	stw	r19,12(sp)
 8004c80:	04c20074 	movhi	r19,2049
 8004c84:	dc800215 	stw	r18,8(sp)
 8004c88:	dc400115 	stw	r17,4(sp)
 8004c8c:	dc000015 	stw	r16,0(sp)
 8004c90:	dfc00415 	stw	ra,16(sp)
 8004c94:	2821883a 	mov	r16,r5
 8004c98:	9cfc1204 	addi	r19,r19,-4024
 8004c9c:	2025883a 	mov	r18,r4
 8004ca0:	800d35c0 	call	800d35c <__malloc_lock>
 8004ca4:	98800217 	ldw	r2,8(r19)
 8004ca8:	14400117 	ldw	r17,4(r2)
 8004cac:	00bfff04 	movi	r2,-4
 8004cb0:	88a2703a 	and	r17,r17,r2
 8004cb4:	8c21c83a 	sub	r16,r17,r16
 8004cb8:	8403fbc4 	addi	r16,r16,4079
 8004cbc:	8020d33a 	srli	r16,r16,12
 8004cc0:	0083ffc4 	movi	r2,4095
 8004cc4:	843fffc4 	addi	r16,r16,-1
 8004cc8:	8020933a 	slli	r16,r16,12
 8004ccc:	1400060e 	bge	r2,r16,8004ce8 <_malloc_trim_r+0x70>
 8004cd0:	9009883a 	mov	r4,r18
 8004cd4:	000b883a 	mov	r5,zero
 8004cd8:	8007b300 	call	8007b30 <_sbrk_r>
 8004cdc:	98c00217 	ldw	r3,8(r19)
 8004ce0:	1c47883a 	add	r3,r3,r17
 8004ce4:	10c00a26 	beq	r2,r3,8004d10 <_malloc_trim_r+0x98>
 8004ce8:	9009883a 	mov	r4,r18
 8004cec:	800d37c0 	call	800d37c <__malloc_unlock>
 8004cf0:	0005883a 	mov	r2,zero
 8004cf4:	dfc00417 	ldw	ra,16(sp)
 8004cf8:	dcc00317 	ldw	r19,12(sp)
 8004cfc:	dc800217 	ldw	r18,8(sp)
 8004d00:	dc400117 	ldw	r17,4(sp)
 8004d04:	dc000017 	ldw	r16,0(sp)
 8004d08:	dec00504 	addi	sp,sp,20
 8004d0c:	f800283a 	ret
 8004d10:	9009883a 	mov	r4,r18
 8004d14:	040bc83a 	sub	r5,zero,r16
 8004d18:	8007b300 	call	8007b30 <_sbrk_r>
 8004d1c:	00ffffc4 	movi	r3,-1
 8004d20:	10c00d26 	beq	r2,r3,8004d58 <_malloc_trim_r+0xe0>
 8004d24:	00c20074 	movhi	r3,2049
 8004d28:	18c09904 	addi	r3,r3,612
 8004d2c:	18800017 	ldw	r2,0(r3)
 8004d30:	99000217 	ldw	r4,8(r19)
 8004d34:	8c23c83a 	sub	r17,r17,r16
 8004d38:	8c400054 	ori	r17,r17,1
 8004d3c:	1421c83a 	sub	r16,r2,r16
 8004d40:	24400115 	stw	r17,4(r4)
 8004d44:	9009883a 	mov	r4,r18
 8004d48:	1c000015 	stw	r16,0(r3)
 8004d4c:	800d37c0 	call	800d37c <__malloc_unlock>
 8004d50:	00800044 	movi	r2,1
 8004d54:	003fe706 	br	8004cf4 <__flash_exceptions_start+0xf7e03cd4>
 8004d58:	9009883a 	mov	r4,r18
 8004d5c:	000b883a 	mov	r5,zero
 8004d60:	8007b300 	call	8007b30 <_sbrk_r>
 8004d64:	99000217 	ldw	r4,8(r19)
 8004d68:	014003c4 	movi	r5,15
 8004d6c:	1107c83a 	sub	r3,r2,r4
 8004d70:	28ffdd0e 	bge	r5,r3,8004ce8 <__flash_exceptions_start+0xf7e03cc8>
 8004d74:	01420074 	movhi	r5,2049
 8004d78:	297db204 	addi	r5,r5,-2360
 8004d7c:	29400017 	ldw	r5,0(r5)
 8004d80:	18c00054 	ori	r3,r3,1
 8004d84:	20c00115 	stw	r3,4(r4)
 8004d88:	00c20074 	movhi	r3,2049
 8004d8c:	1145c83a 	sub	r2,r2,r5
 8004d90:	18c09904 	addi	r3,r3,612
 8004d94:	18800015 	stw	r2,0(r3)
 8004d98:	003fd306 	br	8004ce8 <__flash_exceptions_start+0xf7e03cc8>

08004d9c <_free_r>:
 8004d9c:	28004c26 	beq	r5,zero,8004ed0 <_free_r+0x134>
 8004da0:	defffd04 	addi	sp,sp,-12
 8004da4:	dc400115 	stw	r17,4(sp)
 8004da8:	dc000015 	stw	r16,0(sp)
 8004dac:	2023883a 	mov	r17,r4
 8004db0:	2821883a 	mov	r16,r5
 8004db4:	dfc00215 	stw	ra,8(sp)
 8004db8:	800d35c0 	call	800d35c <__malloc_lock>
 8004dbc:	813fff17 	ldw	r4,-4(r16)
 8004dc0:	00bfff84 	movi	r2,-2
 8004dc4:	02420074 	movhi	r9,2049
 8004dc8:	81bffe04 	addi	r6,r16,-8
 8004dcc:	2084703a 	and	r2,r4,r2
 8004dd0:	4a7c1204 	addi	r9,r9,-4024
 8004dd4:	308b883a 	add	r5,r6,r2
 8004dd8:	2a000117 	ldw	r8,4(r5)
 8004ddc:	49c00217 	ldw	r7,8(r9)
 8004de0:	00ffff04 	movi	r3,-4
 8004de4:	40c6703a 	and	r3,r8,r3
 8004de8:	39405326 	beq	r7,r5,8004f38 <_free_r+0x19c>
 8004dec:	28c00115 	stw	r3,4(r5)
 8004df0:	2100004c 	andi	r4,r4,1
 8004df4:	2000091e 	bne	r4,zero,8004e1c <_free_r+0x80>
 8004df8:	81fffe17 	ldw	r7,-8(r16)
 8004dfc:	4a000204 	addi	r8,r9,8
 8004e00:	31cdc83a 	sub	r6,r6,r7
 8004e04:	31000217 	ldw	r4,8(r6)
 8004e08:	11c5883a 	add	r2,r2,r7
 8004e0c:	22006126 	beq	r4,r8,8004f94 <_free_r+0x1f8>
 8004e10:	31c00317 	ldw	r7,12(r6)
 8004e14:	21c00315 	stw	r7,12(r4)
 8004e18:	39000215 	stw	r4,8(r7)
 8004e1c:	28c9883a 	add	r4,r5,r3
 8004e20:	21c00117 	ldw	r7,4(r4)
 8004e24:	39c0004c 	andi	r7,r7,1
 8004e28:	38000d1e 	bne	r7,zero,8004e60 <_free_r+0xc4>
 8004e2c:	29000217 	ldw	r4,8(r5)
 8004e30:	10c5883a 	add	r2,r2,r3
 8004e34:	00c20074 	movhi	r3,2049
 8004e38:	18fc1404 	addi	r3,r3,-4016
 8004e3c:	20c07526 	beq	r4,r3,8005014 <_free_r+0x278>
 8004e40:	29c00317 	ldw	r7,12(r5)
 8004e44:	11400054 	ori	r5,r2,1
 8004e48:	3087883a 	add	r3,r6,r2
 8004e4c:	21c00315 	stw	r7,12(r4)
 8004e50:	39000215 	stw	r4,8(r7)
 8004e54:	31400115 	stw	r5,4(r6)
 8004e58:	18800015 	stw	r2,0(r3)
 8004e5c:	00000406 	br	8004e70 <_free_r+0xd4>
 8004e60:	10c00054 	ori	r3,r2,1
 8004e64:	30c00115 	stw	r3,4(r6)
 8004e68:	3087883a 	add	r3,r6,r2
 8004e6c:	18800015 	stw	r2,0(r3)
 8004e70:	00c07fc4 	movi	r3,511
 8004e74:	18801736 	bltu	r3,r2,8004ed4 <_free_r+0x138>
 8004e78:	1004d0fa 	srli	r2,r2,3
 8004e7c:	01400044 	movi	r5,1
 8004e80:	49000117 	ldw	r4,4(r9)
 8004e84:	1087883a 	add	r3,r2,r2
 8004e88:	18c7883a 	add	r3,r3,r3
 8004e8c:	1005d0ba 	srai	r2,r2,2
 8004e90:	18c7883a 	add	r3,r3,r3
 8004e94:	1a47883a 	add	r3,r3,r9
 8004e98:	19c00217 	ldw	r7,8(r3)
 8004e9c:	2884983a 	sll	r2,r5,r2
 8004ea0:	30c00315 	stw	r3,12(r6)
 8004ea4:	31c00215 	stw	r7,8(r6)
 8004ea8:	1104b03a 	or	r2,r2,r4
 8004eac:	19800215 	stw	r6,8(r3)
 8004eb0:	48800115 	stw	r2,4(r9)
 8004eb4:	39800315 	stw	r6,12(r7)
 8004eb8:	8809883a 	mov	r4,r17
 8004ebc:	dfc00217 	ldw	ra,8(sp)
 8004ec0:	dc400117 	ldw	r17,4(sp)
 8004ec4:	dc000017 	ldw	r16,0(sp)
 8004ec8:	dec00304 	addi	sp,sp,12
 8004ecc:	800d37c1 	jmpi	800d37c <__malloc_unlock>
 8004ed0:	f800283a 	ret
 8004ed4:	1006d27a 	srli	r3,r2,9
 8004ed8:	01000104 	movi	r4,4
 8004edc:	20c04036 	bltu	r4,r3,8004fe0 <_free_r+0x244>
 8004ee0:	1006d1ba 	srli	r3,r2,6
 8004ee4:	19400e04 	addi	r5,r3,56
 8004ee8:	2947883a 	add	r3,r5,r5
 8004eec:	18c7883a 	add	r3,r3,r3
 8004ef0:	18c7883a 	add	r3,r3,r3
 8004ef4:	1a49883a 	add	r4,r3,r9
 8004ef8:	20c00217 	ldw	r3,8(r4)
 8004efc:	01c20074 	movhi	r7,2049
 8004f00:	39fc1204 	addi	r7,r7,-4024
 8004f04:	19003b26 	beq	r3,r4,8004ff4 <_free_r+0x258>
 8004f08:	01ffff04 	movi	r7,-4
 8004f0c:	19400117 	ldw	r5,4(r3)
 8004f10:	29ca703a 	and	r5,r5,r7
 8004f14:	1140022e 	bgeu	r2,r5,8004f20 <_free_r+0x184>
 8004f18:	18c00217 	ldw	r3,8(r3)
 8004f1c:	20fffb1e 	bne	r4,r3,8004f0c <__flash_exceptions_start+0xf7e03eec>
 8004f20:	18800317 	ldw	r2,12(r3)
 8004f24:	30800315 	stw	r2,12(r6)
 8004f28:	30c00215 	stw	r3,8(r6)
 8004f2c:	11800215 	stw	r6,8(r2)
 8004f30:	19800315 	stw	r6,12(r3)
 8004f34:	003fe006 	br	8004eb8 <__flash_exceptions_start+0xf7e03e98>
 8004f38:	2100004c 	andi	r4,r4,1
 8004f3c:	1885883a 	add	r2,r3,r2
 8004f40:	2000071e 	bne	r4,zero,8004f60 <_free_r+0x1c4>
 8004f44:	817ffe17 	ldw	r5,-8(r16)
 8004f48:	314dc83a 	sub	r6,r6,r5
 8004f4c:	30c00317 	ldw	r3,12(r6)
 8004f50:	31000217 	ldw	r4,8(r6)
 8004f54:	1145883a 	add	r2,r2,r5
 8004f58:	20c00315 	stw	r3,12(r4)
 8004f5c:	19000215 	stw	r4,8(r3)
 8004f60:	10c00054 	ori	r3,r2,1
 8004f64:	30c00115 	stw	r3,4(r6)
 8004f68:	00c20074 	movhi	r3,2049
 8004f6c:	18fdb304 	addi	r3,r3,-2356
 8004f70:	18c00017 	ldw	r3,0(r3)
 8004f74:	49800215 	stw	r6,8(r9)
 8004f78:	10ffcf36 	bltu	r2,r3,8004eb8 <__flash_exceptions_start+0xf7e03e98>
 8004f7c:	00820074 	movhi	r2,2049
 8004f80:	10809404 	addi	r2,r2,592
 8004f84:	11400017 	ldw	r5,0(r2)
 8004f88:	8809883a 	mov	r4,r17
 8004f8c:	8004c780 	call	8004c78 <_malloc_trim_r>
 8004f90:	003fc906 	br	8004eb8 <__flash_exceptions_start+0xf7e03e98>
 8004f94:	28c9883a 	add	r4,r5,r3
 8004f98:	21000117 	ldw	r4,4(r4)
 8004f9c:	2100004c 	andi	r4,r4,1
 8004fa0:	20000a1e 	bne	r4,zero,8004fcc <_free_r+0x230>
 8004fa4:	29000317 	ldw	r4,12(r5)
 8004fa8:	29400217 	ldw	r5,8(r5)
 8004fac:	10c5883a 	add	r2,r2,r3
 8004fb0:	10c00054 	ori	r3,r2,1
 8004fb4:	29000315 	stw	r4,12(r5)
 8004fb8:	21400215 	stw	r5,8(r4)
 8004fbc:	30c00115 	stw	r3,4(r6)
 8004fc0:	308d883a 	add	r6,r6,r2
 8004fc4:	30800015 	stw	r2,0(r6)
 8004fc8:	003fbb06 	br	8004eb8 <__flash_exceptions_start+0xf7e03e98>
 8004fcc:	10c00054 	ori	r3,r2,1
 8004fd0:	30c00115 	stw	r3,4(r6)
 8004fd4:	308d883a 	add	r6,r6,r2
 8004fd8:	30800015 	stw	r2,0(r6)
 8004fdc:	003fb606 	br	8004eb8 <__flash_exceptions_start+0xf7e03e98>
 8004fe0:	01000504 	movi	r4,20
 8004fe4:	20c01436 	bltu	r4,r3,8005038 <_free_r+0x29c>
 8004fe8:	194016c4 	addi	r5,r3,91
 8004fec:	2947883a 	add	r3,r5,r5
 8004ff0:	003fbe06 	br	8004eec <__flash_exceptions_start+0xf7e03ecc>
 8004ff4:	280bd0ba 	srai	r5,r5,2
 8004ff8:	00800044 	movi	r2,1
 8004ffc:	39000117 	ldw	r4,4(r7)
 8005000:	114a983a 	sll	r5,r2,r5
 8005004:	1805883a 	mov	r2,r3
 8005008:	2908b03a 	or	r4,r5,r4
 800500c:	39000115 	stw	r4,4(r7)
 8005010:	003fc406 	br	8004f24 <__flash_exceptions_start+0xf7e03f04>
 8005014:	49800515 	stw	r6,20(r9)
 8005018:	49800415 	stw	r6,16(r9)
 800501c:	10c00054 	ori	r3,r2,1
 8005020:	31000315 	stw	r4,12(r6)
 8005024:	31000215 	stw	r4,8(r6)
 8005028:	30c00115 	stw	r3,4(r6)
 800502c:	308d883a 	add	r6,r6,r2
 8005030:	30800015 	stw	r2,0(r6)
 8005034:	003fa006 	br	8004eb8 <__flash_exceptions_start+0xf7e03e98>
 8005038:	01001504 	movi	r4,84
 800503c:	20c00436 	bltu	r4,r3,8005050 <_free_r+0x2b4>
 8005040:	1006d33a 	srli	r3,r2,12
 8005044:	19401b84 	addi	r5,r3,110
 8005048:	2947883a 	add	r3,r5,r5
 800504c:	003fa706 	br	8004eec <__flash_exceptions_start+0xf7e03ecc>
 8005050:	01005504 	movi	r4,340
 8005054:	20c00436 	bltu	r4,r3,8005068 <_free_r+0x2cc>
 8005058:	1006d3fa 	srli	r3,r2,15
 800505c:	19401dc4 	addi	r5,r3,119
 8005060:	2947883a 	add	r3,r5,r5
 8005064:	003fa106 	br	8004eec <__flash_exceptions_start+0xf7e03ecc>
 8005068:	01015504 	movi	r4,1364
 800506c:	20c00436 	bltu	r4,r3,8005080 <_free_r+0x2e4>
 8005070:	1006d4ba 	srli	r3,r2,18
 8005074:	19401f04 	addi	r5,r3,124
 8005078:	2947883a 	add	r3,r5,r5
 800507c:	003f9b06 	br	8004eec <__flash_exceptions_start+0xf7e03ecc>
 8005080:	00c03f04 	movi	r3,252
 8005084:	01401f84 	movi	r5,126
 8005088:	003f9806 	br	8004eec <__flash_exceptions_start+0xf7e03ecc>

0800508c <__sfvwrite_r>:
 800508c:	30800217 	ldw	r2,8(r6)
 8005090:	10006726 	beq	r2,zero,8005230 <__sfvwrite_r+0x1a4>
 8005094:	defff404 	addi	sp,sp,-48
 8005098:	dd000615 	stw	r20,24(sp)
 800509c:	2029883a 	mov	r20,r4
 80050a0:	2900030b 	ldhu	r4,12(r5)
 80050a4:	ddc00915 	stw	r23,36(sp)
 80050a8:	dc000215 	stw	r16,8(sp)
 80050ac:	dfc00b15 	stw	ra,44(sp)
 80050b0:	df000a15 	stw	fp,40(sp)
 80050b4:	dd800815 	stw	r22,32(sp)
 80050b8:	dd400715 	stw	r21,28(sp)
 80050bc:	dcc00515 	stw	r19,20(sp)
 80050c0:	dc800415 	stw	r18,16(sp)
 80050c4:	dc400315 	stw	r17,12(sp)
 80050c8:	2080020c 	andi	r2,r4,8
 80050cc:	2821883a 	mov	r16,r5
 80050d0:	302f883a 	mov	r23,r6
 80050d4:	10002726 	beq	r2,zero,8005174 <__sfvwrite_r+0xe8>
 80050d8:	28800417 	ldw	r2,16(r5)
 80050dc:	10002526 	beq	r2,zero,8005174 <__sfvwrite_r+0xe8>
 80050e0:	2080008c 	andi	r2,r4,2
 80050e4:	bc400017 	ldw	r17,0(r23)
 80050e8:	10002a26 	beq	r2,zero,8005194 <__sfvwrite_r+0x108>
 80050ec:	05600034 	movhi	r21,32768
 80050f0:	0027883a 	mov	r19,zero
 80050f4:	0025883a 	mov	r18,zero
 80050f8:	ad7f0004 	addi	r21,r21,-1024
 80050fc:	980d883a 	mov	r6,r19
 8005100:	a009883a 	mov	r4,r20
 8005104:	90004626 	beq	r18,zero,8005220 <__sfvwrite_r+0x194>
 8005108:	900f883a 	mov	r7,r18
 800510c:	81400717 	ldw	r5,28(r16)
 8005110:	ac80022e 	bgeu	r21,r18,800511c <__sfvwrite_r+0x90>
 8005114:	01e00034 	movhi	r7,32768
 8005118:	39ff0004 	addi	r7,r7,-1024
 800511c:	80800917 	ldw	r2,36(r16)
 8005120:	103ee83a 	callr	r2
 8005124:	0080520e 	bge	zero,r2,8005270 <__sfvwrite_r+0x1e4>
 8005128:	b8c00217 	ldw	r3,8(r23)
 800512c:	98a7883a 	add	r19,r19,r2
 8005130:	90a5c83a 	sub	r18,r18,r2
 8005134:	1885c83a 	sub	r2,r3,r2
 8005138:	b8800215 	stw	r2,8(r23)
 800513c:	103fef1e 	bne	r2,zero,80050fc <__flash_exceptions_start+0xf7e040dc>
 8005140:	0005883a 	mov	r2,zero
 8005144:	dfc00b17 	ldw	ra,44(sp)
 8005148:	df000a17 	ldw	fp,40(sp)
 800514c:	ddc00917 	ldw	r23,36(sp)
 8005150:	dd800817 	ldw	r22,32(sp)
 8005154:	dd400717 	ldw	r21,28(sp)
 8005158:	dd000617 	ldw	r20,24(sp)
 800515c:	dcc00517 	ldw	r19,20(sp)
 8005160:	dc800417 	ldw	r18,16(sp)
 8005164:	dc400317 	ldw	r17,12(sp)
 8005168:	dc000217 	ldw	r16,8(sp)
 800516c:	dec00c04 	addi	sp,sp,48
 8005170:	f800283a 	ret
 8005174:	a009883a 	mov	r4,r20
 8005178:	800b883a 	mov	r5,r16
 800517c:	8002bc80 	call	8002bc8 <__swsetup_r>
 8005180:	1000ec1e 	bne	r2,zero,8005534 <__sfvwrite_r+0x4a8>
 8005184:	8100030b 	ldhu	r4,12(r16)
 8005188:	bc400017 	ldw	r17,0(r23)
 800518c:	2080008c 	andi	r2,r4,2
 8005190:	103fd61e 	bne	r2,zero,80050ec <__flash_exceptions_start+0xf7e040cc>
 8005194:	2080004c 	andi	r2,r4,1
 8005198:	10003a1e 	bne	r2,zero,8005284 <__sfvwrite_r+0x1f8>
 800519c:	0039883a 	mov	fp,zero
 80051a0:	0025883a 	mov	r18,zero
 80051a4:	90001a26 	beq	r18,zero,8005210 <__sfvwrite_r+0x184>
 80051a8:	2080800c 	andi	r2,r4,512
 80051ac:	85800217 	ldw	r22,8(r16)
 80051b0:	10007626 	beq	r2,zero,800538c <__sfvwrite_r+0x300>
 80051b4:	b027883a 	mov	r19,r22
 80051b8:	95809436 	bltu	r18,r22,800540c <__sfvwrite_r+0x380>
 80051bc:	2081200c 	andi	r2,r4,1152
 80051c0:	10009f1e 	bne	r2,zero,8005440 <__sfvwrite_r+0x3b4>
 80051c4:	81000017 	ldw	r4,0(r16)
 80051c8:	e00b883a 	mov	r5,fp
 80051cc:	980d883a 	mov	r6,r19
 80051d0:	80063340 	call	8006334 <memmove>
 80051d4:	81000217 	ldw	r4,8(r16)
 80051d8:	81400017 	ldw	r5,0(r16)
 80051dc:	9005883a 	mov	r2,r18
 80051e0:	2587c83a 	sub	r3,r4,r22
 80051e4:	2ce7883a 	add	r19,r5,r19
 80051e8:	80c00215 	stw	r3,8(r16)
 80051ec:	84c00015 	stw	r19,0(r16)
 80051f0:	b8c00217 	ldw	r3,8(r23)
 80051f4:	e0b9883a 	add	fp,fp,r2
 80051f8:	90a5c83a 	sub	r18,r18,r2
 80051fc:	1885c83a 	sub	r2,r3,r2
 8005200:	b8800215 	stw	r2,8(r23)
 8005204:	103fce26 	beq	r2,zero,8005140 <__flash_exceptions_start+0xf7e04120>
 8005208:	8100030b 	ldhu	r4,12(r16)
 800520c:	903fe61e 	bne	r18,zero,80051a8 <__flash_exceptions_start+0xf7e04188>
 8005210:	8f000017 	ldw	fp,0(r17)
 8005214:	8c800117 	ldw	r18,4(r17)
 8005218:	8c400204 	addi	r17,r17,8
 800521c:	003fe106 	br	80051a4 <__flash_exceptions_start+0xf7e04184>
 8005220:	8cc00017 	ldw	r19,0(r17)
 8005224:	8c800117 	ldw	r18,4(r17)
 8005228:	8c400204 	addi	r17,r17,8
 800522c:	003fb306 	br	80050fc <__flash_exceptions_start+0xf7e040dc>
 8005230:	0005883a 	mov	r2,zero
 8005234:	f800283a 	ret
 8005238:	00a00034 	movhi	r2,32768
 800523c:	10bfffc4 	addi	r2,r2,-1
 8005240:	9009883a 	mov	r4,r18
 8005244:	1480012e 	bgeu	r2,r18,800524c <__sfvwrite_r+0x1c0>
 8005248:	1009883a 	mov	r4,r2
 800524c:	980b883a 	mov	r5,r19
 8005250:	800a6dc0 	call	800a6dc <__divsi3>
 8005254:	81400717 	ldw	r5,28(r16)
 8005258:	80c00917 	ldw	r3,36(r16)
 800525c:	988f383a 	mul	r7,r19,r2
 8005260:	a009883a 	mov	r4,r20
 8005264:	e00d883a 	mov	r6,fp
 8005268:	183ee83a 	callr	r3
 800526c:	00bfe016 	blt	zero,r2,80051f0 <__flash_exceptions_start+0xf7e041d0>
 8005270:	8080030b 	ldhu	r2,12(r16)
 8005274:	10801014 	ori	r2,r2,64
 8005278:	8080030d 	sth	r2,12(r16)
 800527c:	00bfffc4 	movi	r2,-1
 8005280:	003fb006 	br	8005144 <__flash_exceptions_start+0xf7e04124>
 8005284:	0027883a 	mov	r19,zero
 8005288:	0011883a 	mov	r8,zero
 800528c:	0039883a 	mov	fp,zero
 8005290:	0025883a 	mov	r18,zero
 8005294:	90001f26 	beq	r18,zero,8005314 <__sfvwrite_r+0x288>
 8005298:	40006026 	beq	r8,zero,800541c <__sfvwrite_r+0x390>
 800529c:	982b883a 	mov	r21,r19
 80052a0:	94c0012e 	bgeu	r18,r19,80052a8 <__sfvwrite_r+0x21c>
 80052a4:	902b883a 	mov	r21,r18
 80052a8:	81000017 	ldw	r4,0(r16)
 80052ac:	80800417 	ldw	r2,16(r16)
 80052b0:	a82d883a 	mov	r22,r21
 80052b4:	81800217 	ldw	r6,8(r16)
 80052b8:	81c00517 	ldw	r7,20(r16)
 80052bc:	1100022e 	bgeu	r2,r4,80052c8 <__sfvwrite_r+0x23c>
 80052c0:	31c7883a 	add	r3,r6,r7
 80052c4:	1d401816 	blt	r3,r21,8005328 <__sfvwrite_r+0x29c>
 80052c8:	a9c04416 	blt	r21,r7,80053dc <__sfvwrite_r+0x350>
 80052cc:	80800917 	ldw	r2,36(r16)
 80052d0:	81400717 	ldw	r5,28(r16)
 80052d4:	a009883a 	mov	r4,r20
 80052d8:	da000115 	stw	r8,4(sp)
 80052dc:	e00d883a 	mov	r6,fp
 80052e0:	103ee83a 	callr	r2
 80052e4:	102d883a 	mov	r22,r2
 80052e8:	da000117 	ldw	r8,4(sp)
 80052ec:	00bfe00e 	bge	zero,r2,8005270 <__flash_exceptions_start+0xf7e04250>
 80052f0:	9da7c83a 	sub	r19,r19,r22
 80052f4:	98001f26 	beq	r19,zero,8005374 <__sfvwrite_r+0x2e8>
 80052f8:	b8800217 	ldw	r2,8(r23)
 80052fc:	e5b9883a 	add	fp,fp,r22
 8005300:	95a5c83a 	sub	r18,r18,r22
 8005304:	15adc83a 	sub	r22,r2,r22
 8005308:	bd800215 	stw	r22,8(r23)
 800530c:	b03f8c26 	beq	r22,zero,8005140 <__flash_exceptions_start+0xf7e04120>
 8005310:	903fe11e 	bne	r18,zero,8005298 <__flash_exceptions_start+0xf7e04278>
 8005314:	8f000017 	ldw	fp,0(r17)
 8005318:	8c800117 	ldw	r18,4(r17)
 800531c:	0011883a 	mov	r8,zero
 8005320:	8c400204 	addi	r17,r17,8
 8005324:	003fdb06 	br	8005294 <__flash_exceptions_start+0xf7e04274>
 8005328:	180d883a 	mov	r6,r3
 800532c:	e00b883a 	mov	r5,fp
 8005330:	da000115 	stw	r8,4(sp)
 8005334:	d8c00015 	stw	r3,0(sp)
 8005338:	80063340 	call	8006334 <memmove>
 800533c:	d8c00017 	ldw	r3,0(sp)
 8005340:	80800017 	ldw	r2,0(r16)
 8005344:	a009883a 	mov	r4,r20
 8005348:	800b883a 	mov	r5,r16
 800534c:	10c5883a 	add	r2,r2,r3
 8005350:	80800015 	stw	r2,0(r16)
 8005354:	d8c00015 	stw	r3,0(sp)
 8005358:	800484c0 	call	800484c <_fflush_r>
 800535c:	d8c00017 	ldw	r3,0(sp)
 8005360:	da000117 	ldw	r8,4(sp)
 8005364:	103fc21e 	bne	r2,zero,8005270 <__flash_exceptions_start+0xf7e04250>
 8005368:	182d883a 	mov	r22,r3
 800536c:	9da7c83a 	sub	r19,r19,r22
 8005370:	983fe11e 	bne	r19,zero,80052f8 <__flash_exceptions_start+0xf7e042d8>
 8005374:	a009883a 	mov	r4,r20
 8005378:	800b883a 	mov	r5,r16
 800537c:	800484c0 	call	800484c <_fflush_r>
 8005380:	103fbb1e 	bne	r2,zero,8005270 <__flash_exceptions_start+0xf7e04250>
 8005384:	0011883a 	mov	r8,zero
 8005388:	003fdb06 	br	80052f8 <__flash_exceptions_start+0xf7e042d8>
 800538c:	81000017 	ldw	r4,0(r16)
 8005390:	80800417 	ldw	r2,16(r16)
 8005394:	11000236 	bltu	r2,r4,80053a0 <__sfvwrite_r+0x314>
 8005398:	84c00517 	ldw	r19,20(r16)
 800539c:	94ffa62e 	bgeu	r18,r19,8005238 <__flash_exceptions_start+0xf7e04218>
 80053a0:	9027883a 	mov	r19,r18
 80053a4:	b480012e 	bgeu	r22,r18,80053ac <__sfvwrite_r+0x320>
 80053a8:	b027883a 	mov	r19,r22
 80053ac:	e00b883a 	mov	r5,fp
 80053b0:	980d883a 	mov	r6,r19
 80053b4:	80063340 	call	8006334 <memmove>
 80053b8:	80800217 	ldw	r2,8(r16)
 80053bc:	80c00017 	ldw	r3,0(r16)
 80053c0:	14c5c83a 	sub	r2,r2,r19
 80053c4:	1cc7883a 	add	r3,r3,r19
 80053c8:	80800215 	stw	r2,8(r16)
 80053cc:	80c00015 	stw	r3,0(r16)
 80053d0:	10004326 	beq	r2,zero,80054e0 <__sfvwrite_r+0x454>
 80053d4:	9805883a 	mov	r2,r19
 80053d8:	003f8506 	br	80051f0 <__flash_exceptions_start+0xf7e041d0>
 80053dc:	a80d883a 	mov	r6,r21
 80053e0:	e00b883a 	mov	r5,fp
 80053e4:	da000115 	stw	r8,4(sp)
 80053e8:	80063340 	call	8006334 <memmove>
 80053ec:	80800217 	ldw	r2,8(r16)
 80053f0:	80c00017 	ldw	r3,0(r16)
 80053f4:	da000117 	ldw	r8,4(sp)
 80053f8:	1545c83a 	sub	r2,r2,r21
 80053fc:	1d6b883a 	add	r21,r3,r21
 8005400:	80800215 	stw	r2,8(r16)
 8005404:	85400015 	stw	r21,0(r16)
 8005408:	003fb906 	br	80052f0 <__flash_exceptions_start+0xf7e042d0>
 800540c:	81000017 	ldw	r4,0(r16)
 8005410:	902d883a 	mov	r22,r18
 8005414:	9027883a 	mov	r19,r18
 8005418:	003f6b06 	br	80051c8 <__flash_exceptions_start+0xf7e041a8>
 800541c:	e009883a 	mov	r4,fp
 8005420:	01400284 	movi	r5,10
 8005424:	900d883a 	mov	r6,r18
 8005428:	80061140 	call	8006114 <memchr>
 800542c:	10003e26 	beq	r2,zero,8005528 <__sfvwrite_r+0x49c>
 8005430:	10800044 	addi	r2,r2,1
 8005434:	1727c83a 	sub	r19,r2,fp
 8005438:	02000044 	movi	r8,1
 800543c:	003f9706 	br	800529c <__flash_exceptions_start+0xf7e0427c>
 8005440:	80800517 	ldw	r2,20(r16)
 8005444:	81400417 	ldw	r5,16(r16)
 8005448:	80c00017 	ldw	r3,0(r16)
 800544c:	10a7883a 	add	r19,r2,r2
 8005450:	9885883a 	add	r2,r19,r2
 8005454:	1026d7fa 	srli	r19,r2,31
 8005458:	196bc83a 	sub	r21,r3,r5
 800545c:	a9800044 	addi	r6,r21,1
 8005460:	9885883a 	add	r2,r19,r2
 8005464:	1027d07a 	srai	r19,r2,1
 8005468:	3485883a 	add	r2,r6,r18
 800546c:	980d883a 	mov	r6,r19
 8005470:	9880022e 	bgeu	r19,r2,800547c <__sfvwrite_r+0x3f0>
 8005474:	1027883a 	mov	r19,r2
 8005478:	100d883a 	mov	r6,r2
 800547c:	2101000c 	andi	r4,r4,1024
 8005480:	20001c26 	beq	r4,zero,80054f4 <__sfvwrite_r+0x468>
 8005484:	a009883a 	mov	r4,r20
 8005488:	300b883a 	mov	r5,r6
 800548c:	800596c0 	call	800596c <_malloc_r>
 8005490:	102d883a 	mov	r22,r2
 8005494:	10002926 	beq	r2,zero,800553c <__sfvwrite_r+0x4b0>
 8005498:	81400417 	ldw	r5,16(r16)
 800549c:	1009883a 	mov	r4,r2
 80054a0:	a80d883a 	mov	r6,r21
 80054a4:	80061fc0 	call	80061fc <memcpy>
 80054a8:	8080030b 	ldhu	r2,12(r16)
 80054ac:	00fedfc4 	movi	r3,-1153
 80054b0:	10c4703a 	and	r2,r2,r3
 80054b4:	10802014 	ori	r2,r2,128
 80054b8:	8080030d 	sth	r2,12(r16)
 80054bc:	b549883a 	add	r4,r22,r21
 80054c0:	9d4bc83a 	sub	r5,r19,r21
 80054c4:	85800415 	stw	r22,16(r16)
 80054c8:	84c00515 	stw	r19,20(r16)
 80054cc:	81000015 	stw	r4,0(r16)
 80054d0:	902d883a 	mov	r22,r18
 80054d4:	81400215 	stw	r5,8(r16)
 80054d8:	9027883a 	mov	r19,r18
 80054dc:	003f3a06 	br	80051c8 <__flash_exceptions_start+0xf7e041a8>
 80054e0:	a009883a 	mov	r4,r20
 80054e4:	800b883a 	mov	r5,r16
 80054e8:	800484c0 	call	800484c <_fflush_r>
 80054ec:	103fb926 	beq	r2,zero,80053d4 <__flash_exceptions_start+0xf7e043b4>
 80054f0:	003f5f06 	br	8005270 <__flash_exceptions_start+0xf7e04250>
 80054f4:	a009883a 	mov	r4,r20
 80054f8:	80075540 	call	8007554 <_realloc_r>
 80054fc:	102d883a 	mov	r22,r2
 8005500:	103fee1e 	bne	r2,zero,80054bc <__flash_exceptions_start+0xf7e0449c>
 8005504:	81400417 	ldw	r5,16(r16)
 8005508:	a009883a 	mov	r4,r20
 800550c:	8004d9c0 	call	8004d9c <_free_r>
 8005510:	8080030b 	ldhu	r2,12(r16)
 8005514:	00ffdfc4 	movi	r3,-129
 8005518:	1884703a 	and	r2,r3,r2
 800551c:	00c00304 	movi	r3,12
 8005520:	a0c00015 	stw	r3,0(r20)
 8005524:	003f5306 	br	8005274 <__flash_exceptions_start+0xf7e04254>
 8005528:	94c00044 	addi	r19,r18,1
 800552c:	02000044 	movi	r8,1
 8005530:	003f5a06 	br	800529c <__flash_exceptions_start+0xf7e0427c>
 8005534:	00bfffc4 	movi	r2,-1
 8005538:	003f0206 	br	8005144 <__flash_exceptions_start+0xf7e04124>
 800553c:	00800304 	movi	r2,12
 8005540:	a0800015 	stw	r2,0(r20)
 8005544:	8080030b 	ldhu	r2,12(r16)
 8005548:	003f4a06 	br	8005274 <__flash_exceptions_start+0xf7e04254>

0800554c <_fwalk>:
 800554c:	defff704 	addi	sp,sp,-36
 8005550:	dd000415 	stw	r20,16(sp)
 8005554:	dfc00815 	stw	ra,32(sp)
 8005558:	ddc00715 	stw	r23,28(sp)
 800555c:	dd800615 	stw	r22,24(sp)
 8005560:	dd400515 	stw	r21,20(sp)
 8005564:	dcc00315 	stw	r19,12(sp)
 8005568:	dc800215 	stw	r18,8(sp)
 800556c:	dc400115 	stw	r17,4(sp)
 8005570:	dc000015 	stw	r16,0(sp)
 8005574:	2500b804 	addi	r20,r4,736
 8005578:	a0002326 	beq	r20,zero,8005608 <_fwalk+0xbc>
 800557c:	282b883a 	mov	r21,r5
 8005580:	002f883a 	mov	r23,zero
 8005584:	05800044 	movi	r22,1
 8005588:	04ffffc4 	movi	r19,-1
 800558c:	a4400117 	ldw	r17,4(r20)
 8005590:	a4800217 	ldw	r18,8(r20)
 8005594:	8c7fffc4 	addi	r17,r17,-1
 8005598:	88000d16 	blt	r17,zero,80055d0 <_fwalk+0x84>
 800559c:	94000304 	addi	r16,r18,12
 80055a0:	94800384 	addi	r18,r18,14
 80055a4:	80c0000b 	ldhu	r3,0(r16)
 80055a8:	8c7fffc4 	addi	r17,r17,-1
 80055ac:	813ffd04 	addi	r4,r16,-12
 80055b0:	b0c0042e 	bgeu	r22,r3,80055c4 <_fwalk+0x78>
 80055b4:	90c0000f 	ldh	r3,0(r18)
 80055b8:	1cc00226 	beq	r3,r19,80055c4 <_fwalk+0x78>
 80055bc:	a83ee83a 	callr	r21
 80055c0:	b8aeb03a 	or	r23,r23,r2
 80055c4:	84001a04 	addi	r16,r16,104
 80055c8:	94801a04 	addi	r18,r18,104
 80055cc:	8cfff51e 	bne	r17,r19,80055a4 <__flash_exceptions_start+0xf7e04584>
 80055d0:	a5000017 	ldw	r20,0(r20)
 80055d4:	a03fed1e 	bne	r20,zero,800558c <__flash_exceptions_start+0xf7e0456c>
 80055d8:	b805883a 	mov	r2,r23
 80055dc:	dfc00817 	ldw	ra,32(sp)
 80055e0:	ddc00717 	ldw	r23,28(sp)
 80055e4:	dd800617 	ldw	r22,24(sp)
 80055e8:	dd400517 	ldw	r21,20(sp)
 80055ec:	dd000417 	ldw	r20,16(sp)
 80055f0:	dcc00317 	ldw	r19,12(sp)
 80055f4:	dc800217 	ldw	r18,8(sp)
 80055f8:	dc400117 	ldw	r17,4(sp)
 80055fc:	dc000017 	ldw	r16,0(sp)
 8005600:	dec00904 	addi	sp,sp,36
 8005604:	f800283a 	ret
 8005608:	002f883a 	mov	r23,zero
 800560c:	003ff206 	br	80055d8 <__flash_exceptions_start+0xf7e045b8>

08005610 <_fwalk_reent>:
 8005610:	defff704 	addi	sp,sp,-36
 8005614:	dd400515 	stw	r21,20(sp)
 8005618:	dfc00815 	stw	ra,32(sp)
 800561c:	ddc00715 	stw	r23,28(sp)
 8005620:	dd800615 	stw	r22,24(sp)
 8005624:	dd000415 	stw	r20,16(sp)
 8005628:	dcc00315 	stw	r19,12(sp)
 800562c:	dc800215 	stw	r18,8(sp)
 8005630:	dc400115 	stw	r17,4(sp)
 8005634:	dc000015 	stw	r16,0(sp)
 8005638:	2540b804 	addi	r21,r4,736
 800563c:	a8002326 	beq	r21,zero,80056cc <_fwalk_reent+0xbc>
 8005640:	2829883a 	mov	r20,r5
 8005644:	202d883a 	mov	r22,r4
 8005648:	002f883a 	mov	r23,zero
 800564c:	04c00044 	movi	r19,1
 8005650:	04bfffc4 	movi	r18,-1
 8005654:	ac400117 	ldw	r17,4(r21)
 8005658:	ac000217 	ldw	r16,8(r21)
 800565c:	8c7fffc4 	addi	r17,r17,-1
 8005660:	88000c16 	blt	r17,zero,8005694 <_fwalk_reent+0x84>
 8005664:	84000304 	addi	r16,r16,12
 8005668:	80c0000b 	ldhu	r3,0(r16)
 800566c:	8c7fffc4 	addi	r17,r17,-1
 8005670:	817ffd04 	addi	r5,r16,-12
 8005674:	98c0052e 	bgeu	r19,r3,800568c <_fwalk_reent+0x7c>
 8005678:	80c0008f 	ldh	r3,2(r16)
 800567c:	b009883a 	mov	r4,r22
 8005680:	1c800226 	beq	r3,r18,800568c <_fwalk_reent+0x7c>
 8005684:	a03ee83a 	callr	r20
 8005688:	b8aeb03a 	or	r23,r23,r2
 800568c:	84001a04 	addi	r16,r16,104
 8005690:	8cbff51e 	bne	r17,r18,8005668 <__flash_exceptions_start+0xf7e04648>
 8005694:	ad400017 	ldw	r21,0(r21)
 8005698:	a83fee1e 	bne	r21,zero,8005654 <__flash_exceptions_start+0xf7e04634>
 800569c:	b805883a 	mov	r2,r23
 80056a0:	dfc00817 	ldw	ra,32(sp)
 80056a4:	ddc00717 	ldw	r23,28(sp)
 80056a8:	dd800617 	ldw	r22,24(sp)
 80056ac:	dd400517 	ldw	r21,20(sp)
 80056b0:	dd000417 	ldw	r20,16(sp)
 80056b4:	dcc00317 	ldw	r19,12(sp)
 80056b8:	dc800217 	ldw	r18,8(sp)
 80056bc:	dc400117 	ldw	r17,4(sp)
 80056c0:	dc000017 	ldw	r16,0(sp)
 80056c4:	dec00904 	addi	sp,sp,36
 80056c8:	f800283a 	ret
 80056cc:	002f883a 	mov	r23,zero
 80056d0:	003ff206 	br	800569c <__flash_exceptions_start+0xf7e0467c>

080056d4 <_setlocale_r>:
 80056d4:	30001b26 	beq	r6,zero,8005744 <_setlocale_r+0x70>
 80056d8:	01420074 	movhi	r5,2049
 80056dc:	defffe04 	addi	sp,sp,-8
 80056e0:	297a4204 	addi	r5,r5,-5880
 80056e4:	3009883a 	mov	r4,r6
 80056e8:	dc000015 	stw	r16,0(sp)
 80056ec:	dfc00115 	stw	ra,4(sp)
 80056f0:	3021883a 	mov	r16,r6
 80056f4:	8007cc00 	call	8007cc0 <strcmp>
 80056f8:	1000061e 	bne	r2,zero,8005714 <_setlocale_r+0x40>
 80056fc:	00820074 	movhi	r2,2049
 8005700:	10ba4104 	addi	r2,r2,-5884
 8005704:	dfc00117 	ldw	ra,4(sp)
 8005708:	dc000017 	ldw	r16,0(sp)
 800570c:	dec00204 	addi	sp,sp,8
 8005710:	f800283a 	ret
 8005714:	01420074 	movhi	r5,2049
 8005718:	297a4104 	addi	r5,r5,-5884
 800571c:	8009883a 	mov	r4,r16
 8005720:	8007cc00 	call	8007cc0 <strcmp>
 8005724:	103ff526 	beq	r2,zero,80056fc <__flash_exceptions_start+0xf7e046dc>
 8005728:	01420074 	movhi	r5,2049
 800572c:	297a2c04 	addi	r5,r5,-5968
 8005730:	8009883a 	mov	r4,r16
 8005734:	8007cc00 	call	8007cc0 <strcmp>
 8005738:	103ff026 	beq	r2,zero,80056fc <__flash_exceptions_start+0xf7e046dc>
 800573c:	0005883a 	mov	r2,zero
 8005740:	003ff006 	br	8005704 <__flash_exceptions_start+0xf7e046e4>
 8005744:	00820074 	movhi	r2,2049
 8005748:	10ba4104 	addi	r2,r2,-5884
 800574c:	f800283a 	ret

08005750 <__locale_charset>:
 8005750:	00820074 	movhi	r2,2049
 8005754:	10bbfc04 	addi	r2,r2,-4112
 8005758:	f800283a 	ret

0800575c <__locale_mb_cur_max>:
 800575c:	00820074 	movhi	r2,2049
 8005760:	10bdb104 	addi	r2,r2,-2364
 8005764:	10800017 	ldw	r2,0(r2)
 8005768:	f800283a 	ret

0800576c <__locale_msgcharset>:
 800576c:	00820074 	movhi	r2,2049
 8005770:	10bbf404 	addi	r2,r2,-4144
 8005774:	f800283a 	ret

08005778 <__locale_cjk_lang>:
 8005778:	0005883a 	mov	r2,zero
 800577c:	f800283a 	ret

08005780 <_localeconv_r>:
 8005780:	00820074 	movhi	r2,2049
 8005784:	10bc0404 	addi	r2,r2,-4080
 8005788:	f800283a 	ret

0800578c <setlocale>:
 800578c:	00c20074 	movhi	r3,2049
 8005790:	18fdb004 	addi	r3,r3,-2368
 8005794:	2005883a 	mov	r2,r4
 8005798:	19000017 	ldw	r4,0(r3)
 800579c:	280d883a 	mov	r6,r5
 80057a0:	100b883a 	mov	r5,r2
 80057a4:	80056d41 	jmpi	80056d4 <_setlocale_r>

080057a8 <localeconv>:
 80057a8:	00820074 	movhi	r2,2049
 80057ac:	10bc0404 	addi	r2,r2,-4080
 80057b0:	f800283a 	ret

080057b4 <__smakebuf_r>:
 80057b4:	2880030b 	ldhu	r2,12(r5)
 80057b8:	10c0008c 	andi	r3,r2,2
 80057bc:	1800401e 	bne	r3,zero,80058c0 <__smakebuf_r+0x10c>
 80057c0:	deffec04 	addi	sp,sp,-80
 80057c4:	dc000f15 	stw	r16,60(sp)
 80057c8:	2821883a 	mov	r16,r5
 80057cc:	2940038f 	ldh	r5,14(r5)
 80057d0:	dc401015 	stw	r17,64(sp)
 80057d4:	dfc01315 	stw	ra,76(sp)
 80057d8:	dcc01215 	stw	r19,72(sp)
 80057dc:	dc801115 	stw	r18,68(sp)
 80057e0:	2023883a 	mov	r17,r4
 80057e4:	28001b16 	blt	r5,zero,8005854 <__smakebuf_r+0xa0>
 80057e8:	d80d883a 	mov	r6,sp
 80057ec:	80096800 	call	8009680 <_fstat_r>
 80057f0:	10001716 	blt	r2,zero,8005850 <__smakebuf_r+0x9c>
 80057f4:	d8800117 	ldw	r2,4(sp)
 80057f8:	00e00014 	movui	r3,32768
 80057fc:	10bc000c 	andi	r2,r2,61440
 8005800:	10c03726 	beq	r2,r3,80058e0 <__smakebuf_r+0x12c>
 8005804:	80c0030b 	ldhu	r3,12(r16)
 8005808:	18c20014 	ori	r3,r3,2048
 800580c:	80c0030d 	sth	r3,12(r16)
 8005810:	00c80004 	movi	r3,8192
 8005814:	10c03c1e 	bne	r2,r3,8005908 <__smakebuf_r+0x154>
 8005818:	8140038f 	ldh	r5,14(r16)
 800581c:	8809883a 	mov	r4,r17
 8005820:	80096d80 	call	80096d8 <_isatty_r>
 8005824:	10004e26 	beq	r2,zero,8005960 <__smakebuf_r+0x1ac>
 8005828:	8080030b 	ldhu	r2,12(r16)
 800582c:	04c00044 	movi	r19,1
 8005830:	80c010c4 	addi	r3,r16,67
 8005834:	14c4b03a 	or	r2,r2,r19
 8005838:	8080030d 	sth	r2,12(r16)
 800583c:	80c00015 	stw	r3,0(r16)
 8005840:	80c00415 	stw	r3,16(r16)
 8005844:	84c00515 	stw	r19,20(r16)
 8005848:	04810004 	movi	r18,1024
 800584c:	00000706 	br	800586c <__smakebuf_r+0xb8>
 8005850:	8080030b 	ldhu	r2,12(r16)
 8005854:	10c0200c 	andi	r3,r2,128
 8005858:	18001f1e 	bne	r3,zero,80058d8 <__smakebuf_r+0x124>
 800585c:	04810004 	movi	r18,1024
 8005860:	10820014 	ori	r2,r2,2048
 8005864:	8080030d 	sth	r2,12(r16)
 8005868:	0027883a 	mov	r19,zero
 800586c:	8809883a 	mov	r4,r17
 8005870:	900b883a 	mov	r5,r18
 8005874:	800596c0 	call	800596c <_malloc_r>
 8005878:	10002e26 	beq	r2,zero,8005934 <__smakebuf_r+0x180>
 800587c:	80c0030b 	ldhu	r3,12(r16)
 8005880:	01020034 	movhi	r4,2048
 8005884:	21123a04 	addi	r4,r4,18664
 8005888:	89000f15 	stw	r4,60(r17)
 800588c:	18c02014 	ori	r3,r3,128
 8005890:	80c0030d 	sth	r3,12(r16)
 8005894:	80800015 	stw	r2,0(r16)
 8005898:	80800415 	stw	r2,16(r16)
 800589c:	84800515 	stw	r18,20(r16)
 80058a0:	98001c1e 	bne	r19,zero,8005914 <__smakebuf_r+0x160>
 80058a4:	dfc01317 	ldw	ra,76(sp)
 80058a8:	dcc01217 	ldw	r19,72(sp)
 80058ac:	dc801117 	ldw	r18,68(sp)
 80058b0:	dc401017 	ldw	r17,64(sp)
 80058b4:	dc000f17 	ldw	r16,60(sp)
 80058b8:	dec01404 	addi	sp,sp,80
 80058bc:	f800283a 	ret
 80058c0:	288010c4 	addi	r2,r5,67
 80058c4:	28800015 	stw	r2,0(r5)
 80058c8:	28800415 	stw	r2,16(r5)
 80058cc:	00800044 	movi	r2,1
 80058d0:	28800515 	stw	r2,20(r5)
 80058d4:	f800283a 	ret
 80058d8:	04801004 	movi	r18,64
 80058dc:	003fe006 	br	8005860 <__flash_exceptions_start+0xf7e04840>
 80058e0:	81000a17 	ldw	r4,40(r16)
 80058e4:	00c20034 	movhi	r3,2048
 80058e8:	18df1704 	addi	r3,r3,31836
 80058ec:	20ffc51e 	bne	r4,r3,8005804 <__flash_exceptions_start+0xf7e047e4>
 80058f0:	80c0030b 	ldhu	r3,12(r16)
 80058f4:	01010004 	movi	r4,1024
 80058f8:	81001315 	stw	r4,76(r16)
 80058fc:	1906b03a 	or	r3,r3,r4
 8005900:	80c0030d 	sth	r3,12(r16)
 8005904:	003fc206 	br	8005810 <__flash_exceptions_start+0xf7e047f0>
 8005908:	0027883a 	mov	r19,zero
 800590c:	04810004 	movi	r18,1024
 8005910:	003fd606 	br	800586c <__flash_exceptions_start+0xf7e0484c>
 8005914:	8140038f 	ldh	r5,14(r16)
 8005918:	8809883a 	mov	r4,r17
 800591c:	80096d80 	call	80096d8 <_isatty_r>
 8005920:	103fe026 	beq	r2,zero,80058a4 <__flash_exceptions_start+0xf7e04884>
 8005924:	8080030b 	ldhu	r2,12(r16)
 8005928:	10800054 	ori	r2,r2,1
 800592c:	8080030d 	sth	r2,12(r16)
 8005930:	003fdc06 	br	80058a4 <__flash_exceptions_start+0xf7e04884>
 8005934:	8080030b 	ldhu	r2,12(r16)
 8005938:	10c0800c 	andi	r3,r2,512
 800593c:	183fd91e 	bne	r3,zero,80058a4 <__flash_exceptions_start+0xf7e04884>
 8005940:	10800094 	ori	r2,r2,2
 8005944:	80c010c4 	addi	r3,r16,67
 8005948:	8080030d 	sth	r2,12(r16)
 800594c:	00800044 	movi	r2,1
 8005950:	80c00015 	stw	r3,0(r16)
 8005954:	80c00415 	stw	r3,16(r16)
 8005958:	80800515 	stw	r2,20(r16)
 800595c:	003fd106 	br	80058a4 <__flash_exceptions_start+0xf7e04884>
 8005960:	04c00044 	movi	r19,1
 8005964:	04810004 	movi	r18,1024
 8005968:	003fc006 	br	800586c <__flash_exceptions_start+0xf7e0484c>

0800596c <_malloc_r>:
 800596c:	defff504 	addi	sp,sp,-44
 8005970:	dc800315 	stw	r18,12(sp)
 8005974:	dfc00a15 	stw	ra,40(sp)
 8005978:	df000915 	stw	fp,36(sp)
 800597c:	ddc00815 	stw	r23,32(sp)
 8005980:	dd800715 	stw	r22,28(sp)
 8005984:	dd400615 	stw	r21,24(sp)
 8005988:	dd000515 	stw	r20,20(sp)
 800598c:	dcc00415 	stw	r19,16(sp)
 8005990:	dc400215 	stw	r17,8(sp)
 8005994:	dc000115 	stw	r16,4(sp)
 8005998:	288002c4 	addi	r2,r5,11
 800599c:	00c00584 	movi	r3,22
 80059a0:	2025883a 	mov	r18,r4
 80059a4:	18802a2e 	bgeu	r3,r2,8005a50 <_malloc_r+0xe4>
 80059a8:	047ffe04 	movi	r17,-8
 80059ac:	1462703a 	and	r17,r2,r17
 80059b0:	88009e16 	blt	r17,zero,8005c2c <_malloc_r+0x2c0>
 80059b4:	89409d36 	bltu	r17,r5,8005c2c <_malloc_r+0x2c0>
 80059b8:	800d35c0 	call	800d35c <__malloc_lock>
 80059bc:	00807dc4 	movi	r2,503
 80059c0:	14402736 	bltu	r2,r17,8005a60 <_malloc_r+0xf4>
 80059c4:	8806d0fa 	srli	r3,r17,3
 80059c8:	04c20074 	movhi	r19,2049
 80059cc:	9cfc1204 	addi	r19,r19,-4024
 80059d0:	18c5883a 	add	r2,r3,r3
 80059d4:	1085883a 	add	r2,r2,r2
 80059d8:	1085883a 	add	r2,r2,r2
 80059dc:	9885883a 	add	r2,r19,r2
 80059e0:	14000317 	ldw	r16,12(r2)
 80059e4:	80814a26 	beq	r16,r2,8005f10 <_malloc_r+0x5a4>
 80059e8:	80c00117 	ldw	r3,4(r16)
 80059ec:	81000317 	ldw	r4,12(r16)
 80059f0:	00bfff04 	movi	r2,-4
 80059f4:	1884703a 	and	r2,r3,r2
 80059f8:	81400217 	ldw	r5,8(r16)
 80059fc:	8085883a 	add	r2,r16,r2
 8005a00:	10c00117 	ldw	r3,4(r2)
 8005a04:	29000315 	stw	r4,12(r5)
 8005a08:	21400215 	stw	r5,8(r4)
 8005a0c:	18c00054 	ori	r3,r3,1
 8005a10:	10c00115 	stw	r3,4(r2)
 8005a14:	9009883a 	mov	r4,r18
 8005a18:	800d37c0 	call	800d37c <__malloc_unlock>
 8005a1c:	80800204 	addi	r2,r16,8
 8005a20:	dfc00a17 	ldw	ra,40(sp)
 8005a24:	df000917 	ldw	fp,36(sp)
 8005a28:	ddc00817 	ldw	r23,32(sp)
 8005a2c:	dd800717 	ldw	r22,28(sp)
 8005a30:	dd400617 	ldw	r21,24(sp)
 8005a34:	dd000517 	ldw	r20,20(sp)
 8005a38:	dcc00417 	ldw	r19,16(sp)
 8005a3c:	dc800317 	ldw	r18,12(sp)
 8005a40:	dc400217 	ldw	r17,8(sp)
 8005a44:	dc000117 	ldw	r16,4(sp)
 8005a48:	dec00b04 	addi	sp,sp,44
 8005a4c:	f800283a 	ret
 8005a50:	04400404 	movi	r17,16
 8005a54:	89407536 	bltu	r17,r5,8005c2c <_malloc_r+0x2c0>
 8005a58:	800d35c0 	call	800d35c <__malloc_lock>
 8005a5c:	003fd906 	br	80059c4 <__flash_exceptions_start+0xf7e049a4>
 8005a60:	8806d27a 	srli	r3,r17,9
 8005a64:	18007526 	beq	r3,zero,8005c3c <_malloc_r+0x2d0>
 8005a68:	00800104 	movi	r2,4
 8005a6c:	10c0ef36 	bltu	r2,r3,8005e2c <_malloc_r+0x4c0>
 8005a70:	8806d1ba 	srli	r3,r17,6
 8005a74:	19c00e04 	addi	r7,r3,56
 8005a78:	39cb883a 	add	r5,r7,r7
 8005a7c:	04c20074 	movhi	r19,2049
 8005a80:	294b883a 	add	r5,r5,r5
 8005a84:	9cfc1204 	addi	r19,r19,-4024
 8005a88:	294b883a 	add	r5,r5,r5
 8005a8c:	994b883a 	add	r5,r19,r5
 8005a90:	2c000317 	ldw	r16,12(r5)
 8005a94:	2c000e26 	beq	r5,r16,8005ad0 <_malloc_r+0x164>
 8005a98:	80800117 	ldw	r2,4(r16)
 8005a9c:	01bfff04 	movi	r6,-4
 8005aa0:	010003c4 	movi	r4,15
 8005aa4:	1184703a 	and	r2,r2,r6
 8005aa8:	1447c83a 	sub	r3,r2,r17
 8005aac:	20c00716 	blt	r4,r3,8005acc <_malloc_r+0x160>
 8005ab0:	1800650e 	bge	r3,zero,8005c48 <_malloc_r+0x2dc>
 8005ab4:	84000317 	ldw	r16,12(r16)
 8005ab8:	2c000526 	beq	r5,r16,8005ad0 <_malloc_r+0x164>
 8005abc:	80800117 	ldw	r2,4(r16)
 8005ac0:	1184703a 	and	r2,r2,r6
 8005ac4:	1447c83a 	sub	r3,r2,r17
 8005ac8:	20fff90e 	bge	r4,r3,8005ab0 <__flash_exceptions_start+0xf7e04a90>
 8005acc:	39ffffc4 	addi	r7,r7,-1
 8005ad0:	38c00044 	addi	r3,r7,1
 8005ad4:	01820074 	movhi	r6,2049
 8005ad8:	9c000417 	ldw	r16,16(r19)
 8005adc:	31bc1204 	addi	r6,r6,-4024
 8005ae0:	32400204 	addi	r9,r6,8
 8005ae4:	82410326 	beq	r16,r9,8005ef4 <_malloc_r+0x588>
 8005ae8:	81000117 	ldw	r4,4(r16)
 8005aec:	00bfff04 	movi	r2,-4
 8005af0:	208e703a 	and	r7,r4,r2
 8005af4:	3c45c83a 	sub	r2,r7,r17
 8005af8:	010003c4 	movi	r4,15
 8005afc:	2080ee16 	blt	r4,r2,8005eb8 <_malloc_r+0x54c>
 8005b00:	32400515 	stw	r9,20(r6)
 8005b04:	32400415 	stw	r9,16(r6)
 8005b08:	1000510e 	bge	r2,zero,8005c50 <_malloc_r+0x2e4>
 8005b0c:	00807fc4 	movi	r2,511
 8005b10:	11c0ce36 	bltu	r2,r7,8005e4c <_malloc_r+0x4e0>
 8005b14:	3808d0fa 	srli	r4,r7,3
 8005b18:	01c00044 	movi	r7,1
 8005b1c:	30800117 	ldw	r2,4(r6)
 8005b20:	210b883a 	add	r5,r4,r4
 8005b24:	294b883a 	add	r5,r5,r5
 8005b28:	2009d0ba 	srai	r4,r4,2
 8005b2c:	294b883a 	add	r5,r5,r5
 8005b30:	298b883a 	add	r5,r5,r6
 8005b34:	2a000217 	ldw	r8,8(r5)
 8005b38:	3908983a 	sll	r4,r7,r4
 8005b3c:	81400315 	stw	r5,12(r16)
 8005b40:	82000215 	stw	r8,8(r16)
 8005b44:	2088b03a 	or	r4,r4,r2
 8005b48:	2c000215 	stw	r16,8(r5)
 8005b4c:	31000115 	stw	r4,4(r6)
 8005b50:	44000315 	stw	r16,12(r8)
 8005b54:	1805d0ba 	srai	r2,r3,2
 8005b58:	01400044 	movi	r5,1
 8005b5c:	288a983a 	sll	r5,r5,r2
 8005b60:	21404336 	bltu	r4,r5,8005c70 <_malloc_r+0x304>
 8005b64:	2144703a 	and	r2,r4,r5
 8005b68:	10000a1e 	bne	r2,zero,8005b94 <_malloc_r+0x228>
 8005b6c:	00bfff04 	movi	r2,-4
 8005b70:	294b883a 	add	r5,r5,r5
 8005b74:	1886703a 	and	r3,r3,r2
 8005b78:	2144703a 	and	r2,r4,r5
 8005b7c:	18c00104 	addi	r3,r3,4
 8005b80:	1000041e 	bne	r2,zero,8005b94 <_malloc_r+0x228>
 8005b84:	294b883a 	add	r5,r5,r5
 8005b88:	2144703a 	and	r2,r4,r5
 8005b8c:	18c00104 	addi	r3,r3,4
 8005b90:	103ffc26 	beq	r2,zero,8005b84 <__flash_exceptions_start+0xf7e04b64>
 8005b94:	023fff04 	movi	r8,-4
 8005b98:	01c003c4 	movi	r7,15
 8005b9c:	18c5883a 	add	r2,r3,r3
 8005ba0:	1085883a 	add	r2,r2,r2
 8005ba4:	1085883a 	add	r2,r2,r2
 8005ba8:	9895883a 	add	r10,r19,r2
 8005bac:	52c00304 	addi	r11,r10,12
 8005bb0:	1819883a 	mov	r12,r3
 8005bb4:	5c000017 	ldw	r16,0(r11)
 8005bb8:	59bffd04 	addi	r6,r11,-12
 8005bbc:	8180041e 	bne	r16,r6,8005bd0 <_malloc_r+0x264>
 8005bc0:	0000ce06 	br	8005efc <_malloc_r+0x590>
 8005bc4:	2000d70e 	bge	r4,zero,8005f24 <_malloc_r+0x5b8>
 8005bc8:	84000317 	ldw	r16,12(r16)
 8005bcc:	8180cb26 	beq	r16,r6,8005efc <_malloc_r+0x590>
 8005bd0:	80800117 	ldw	r2,4(r16)
 8005bd4:	1204703a 	and	r2,r2,r8
 8005bd8:	1449c83a 	sub	r4,r2,r17
 8005bdc:	393ff90e 	bge	r7,r4,8005bc4 <__flash_exceptions_start+0xf7e04ba4>
 8005be0:	80800317 	ldw	r2,12(r16)
 8005be4:	80c00217 	ldw	r3,8(r16)
 8005be8:	89400054 	ori	r5,r17,1
 8005bec:	81400115 	stw	r5,4(r16)
 8005bf0:	18800315 	stw	r2,12(r3)
 8005bf4:	10c00215 	stw	r3,8(r2)
 8005bf8:	8463883a 	add	r17,r16,r17
 8005bfc:	9c400515 	stw	r17,20(r19)
 8005c00:	9c400415 	stw	r17,16(r19)
 8005c04:	20800054 	ori	r2,r4,1
 8005c08:	88800115 	stw	r2,4(r17)
 8005c0c:	8a400315 	stw	r9,12(r17)
 8005c10:	8a400215 	stw	r9,8(r17)
 8005c14:	8923883a 	add	r17,r17,r4
 8005c18:	89000015 	stw	r4,0(r17)
 8005c1c:	9009883a 	mov	r4,r18
 8005c20:	800d37c0 	call	800d37c <__malloc_unlock>
 8005c24:	80800204 	addi	r2,r16,8
 8005c28:	003f7d06 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005c2c:	00800304 	movi	r2,12
 8005c30:	90800015 	stw	r2,0(r18)
 8005c34:	0005883a 	mov	r2,zero
 8005c38:	003f7906 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005c3c:	01401f84 	movi	r5,126
 8005c40:	01c00fc4 	movi	r7,63
 8005c44:	003f8d06 	br	8005a7c <__flash_exceptions_start+0xf7e04a5c>
 8005c48:	81000317 	ldw	r4,12(r16)
 8005c4c:	003f6a06 	br	80059f8 <__flash_exceptions_start+0xf7e049d8>
 8005c50:	81c5883a 	add	r2,r16,r7
 8005c54:	10c00117 	ldw	r3,4(r2)
 8005c58:	9009883a 	mov	r4,r18
 8005c5c:	18c00054 	ori	r3,r3,1
 8005c60:	10c00115 	stw	r3,4(r2)
 8005c64:	800d37c0 	call	800d37c <__malloc_unlock>
 8005c68:	80800204 	addi	r2,r16,8
 8005c6c:	003f6c06 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005c70:	9c000217 	ldw	r16,8(r19)
 8005c74:	00bfff04 	movi	r2,-4
 8005c78:	85800117 	ldw	r22,4(r16)
 8005c7c:	b0ac703a 	and	r22,r22,r2
 8005c80:	b4400336 	bltu	r22,r17,8005c90 <_malloc_r+0x324>
 8005c84:	b445c83a 	sub	r2,r22,r17
 8005c88:	00c003c4 	movi	r3,15
 8005c8c:	18805d16 	blt	r3,r2,8005e04 <_malloc_r+0x498>
 8005c90:	05c20074 	movhi	r23,2049
 8005c94:	00820074 	movhi	r2,2049
 8005c98:	bdfdb204 	addi	r23,r23,-2360
 8005c9c:	10809404 	addi	r2,r2,592
 8005ca0:	15400017 	ldw	r21,0(r2)
 8005ca4:	b9000017 	ldw	r4,0(r23)
 8005ca8:	00ffffc4 	movi	r3,-1
 8005cac:	858d883a 	add	r6,r16,r22
 8005cb0:	8d6b883a 	add	r21,r17,r21
 8005cb4:	20c0e426 	beq	r4,r3,8006048 <_malloc_r+0x6dc>
 8005cb8:	ad4403c4 	addi	r21,r21,4111
 8005cbc:	00fc0004 	movi	r3,-4096
 8005cc0:	a8ea703a 	and	r21,r21,r3
 8005cc4:	9009883a 	mov	r4,r18
 8005cc8:	a80b883a 	mov	r5,r21
 8005ccc:	d9800015 	stw	r6,0(sp)
 8005cd0:	8007b300 	call	8007b30 <_sbrk_r>
 8005cd4:	00ffffc4 	movi	r3,-1
 8005cd8:	1029883a 	mov	r20,r2
 8005cdc:	d9800017 	ldw	r6,0(sp)
 8005ce0:	10c0a426 	beq	r2,r3,8005f74 <_malloc_r+0x608>
 8005ce4:	1180a236 	bltu	r2,r6,8005f70 <_malloc_r+0x604>
 8005ce8:	07020074 	movhi	fp,2049
 8005cec:	e7009904 	addi	fp,fp,612
 8005cf0:	e0c00017 	ldw	r3,0(fp)
 8005cf4:	a8c7883a 	add	r3,r21,r3
 8005cf8:	e0c00015 	stw	r3,0(fp)
 8005cfc:	3500da26 	beq	r6,r20,8006068 <_malloc_r+0x6fc>
 8005d00:	b9000017 	ldw	r4,0(r23)
 8005d04:	00bfffc4 	movi	r2,-1
 8005d08:	2080e426 	beq	r4,r2,800609c <_malloc_r+0x730>
 8005d0c:	a185c83a 	sub	r2,r20,r6
 8005d10:	1885883a 	add	r2,r3,r2
 8005d14:	e0800015 	stw	r2,0(fp)
 8005d18:	a0c001cc 	andi	r3,r20,7
 8005d1c:	1800b526 	beq	r3,zero,8005ff4 <_malloc_r+0x688>
 8005d20:	a0e9c83a 	sub	r20,r20,r3
 8005d24:	00840204 	movi	r2,4104
 8005d28:	a5000204 	addi	r20,r20,8
 8005d2c:	10c7c83a 	sub	r3,r2,r3
 8005d30:	a545883a 	add	r2,r20,r21
 8005d34:	1083ffcc 	andi	r2,r2,4095
 8005d38:	18abc83a 	sub	r21,r3,r2
 8005d3c:	9009883a 	mov	r4,r18
 8005d40:	a80b883a 	mov	r5,r21
 8005d44:	8007b300 	call	8007b30 <_sbrk_r>
 8005d48:	00ffffc4 	movi	r3,-1
 8005d4c:	10c0d026 	beq	r2,r3,8006090 <_malloc_r+0x724>
 8005d50:	1507c83a 	sub	r3,r2,r20
 8005d54:	a8c7883a 	add	r3,r21,r3
 8005d58:	18c00054 	ori	r3,r3,1
 8005d5c:	e0800017 	ldw	r2,0(fp)
 8005d60:	9d000215 	stw	r20,8(r19)
 8005d64:	a0c00115 	stw	r3,4(r20)
 8005d68:	a887883a 	add	r3,r21,r2
 8005d6c:	e0c00015 	stw	r3,0(fp)
 8005d70:	84c00e26 	beq	r16,r19,8005dac <_malloc_r+0x440>
 8005d74:	018003c4 	movi	r6,15
 8005d78:	3580a02e 	bgeu	r6,r22,8005ffc <_malloc_r+0x690>
 8005d7c:	81400117 	ldw	r5,4(r16)
 8005d80:	013ffe04 	movi	r4,-8
 8005d84:	b0bffd04 	addi	r2,r22,-12
 8005d88:	1104703a 	and	r2,r2,r4
 8005d8c:	2900004c 	andi	r4,r5,1
 8005d90:	1108b03a 	or	r4,r2,r4
 8005d94:	81000115 	stw	r4,4(r16)
 8005d98:	01400144 	movi	r5,5
 8005d9c:	8089883a 	add	r4,r16,r2
 8005da0:	21400115 	stw	r5,4(r4)
 8005da4:	21400215 	stw	r5,8(r4)
 8005da8:	3080c036 	bltu	r6,r2,80060ac <_malloc_r+0x740>
 8005dac:	00820074 	movhi	r2,2049
 8005db0:	10809304 	addi	r2,r2,588
 8005db4:	11000017 	ldw	r4,0(r2)
 8005db8:	20c0012e 	bgeu	r4,r3,8005dc0 <_malloc_r+0x454>
 8005dbc:	10c00015 	stw	r3,0(r2)
 8005dc0:	00820074 	movhi	r2,2049
 8005dc4:	10809204 	addi	r2,r2,584
 8005dc8:	11000017 	ldw	r4,0(r2)
 8005dcc:	9c000217 	ldw	r16,8(r19)
 8005dd0:	20c0012e 	bgeu	r4,r3,8005dd8 <_malloc_r+0x46c>
 8005dd4:	10c00015 	stw	r3,0(r2)
 8005dd8:	80c00117 	ldw	r3,4(r16)
 8005ddc:	00bfff04 	movi	r2,-4
 8005de0:	1886703a 	and	r3,r3,r2
 8005de4:	1c45c83a 	sub	r2,r3,r17
 8005de8:	1c400236 	bltu	r3,r17,8005df4 <_malloc_r+0x488>
 8005dec:	00c003c4 	movi	r3,15
 8005df0:	18800416 	blt	r3,r2,8005e04 <_malloc_r+0x498>
 8005df4:	9009883a 	mov	r4,r18
 8005df8:	800d37c0 	call	800d37c <__malloc_unlock>
 8005dfc:	0005883a 	mov	r2,zero
 8005e00:	003f0706 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005e04:	88c00054 	ori	r3,r17,1
 8005e08:	80c00115 	stw	r3,4(r16)
 8005e0c:	8463883a 	add	r17,r16,r17
 8005e10:	10800054 	ori	r2,r2,1
 8005e14:	9c400215 	stw	r17,8(r19)
 8005e18:	88800115 	stw	r2,4(r17)
 8005e1c:	9009883a 	mov	r4,r18
 8005e20:	800d37c0 	call	800d37c <__malloc_unlock>
 8005e24:	80800204 	addi	r2,r16,8
 8005e28:	003efd06 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005e2c:	00800504 	movi	r2,20
 8005e30:	10c0482e 	bgeu	r2,r3,8005f54 <_malloc_r+0x5e8>
 8005e34:	00801504 	movi	r2,84
 8005e38:	10c06836 	bltu	r2,r3,8005fdc <_malloc_r+0x670>
 8005e3c:	8806d33a 	srli	r3,r17,12
 8005e40:	19c01b84 	addi	r7,r3,110
 8005e44:	39cb883a 	add	r5,r7,r7
 8005e48:	003f0c06 	br	8005a7c <__flash_exceptions_start+0xf7e04a5c>
 8005e4c:	3804d27a 	srli	r2,r7,9
 8005e50:	01000104 	movi	r4,4
 8005e54:	2080422e 	bgeu	r4,r2,8005f60 <_malloc_r+0x5f4>
 8005e58:	01000504 	movi	r4,20
 8005e5c:	20807c36 	bltu	r4,r2,8006050 <_malloc_r+0x6e4>
 8005e60:	110016c4 	addi	r4,r2,91
 8005e64:	210b883a 	add	r5,r4,r4
 8005e68:	294b883a 	add	r5,r5,r5
 8005e6c:	294b883a 	add	r5,r5,r5
 8005e70:	994b883a 	add	r5,r19,r5
 8005e74:	28800217 	ldw	r2,8(r5)
 8005e78:	02020074 	movhi	r8,2049
 8005e7c:	423c1204 	addi	r8,r8,-4024
 8005e80:	11406326 	beq	r2,r5,8006010 <_malloc_r+0x6a4>
 8005e84:	01bfff04 	movi	r6,-4
 8005e88:	11000117 	ldw	r4,4(r2)
 8005e8c:	2188703a 	and	r4,r4,r6
 8005e90:	3900022e 	bgeu	r7,r4,8005e9c <_malloc_r+0x530>
 8005e94:	10800217 	ldw	r2,8(r2)
 8005e98:	28bffb1e 	bne	r5,r2,8005e88 <__flash_exceptions_start+0xf7e04e68>
 8005e9c:	11800317 	ldw	r6,12(r2)
 8005ea0:	99000117 	ldw	r4,4(r19)
 8005ea4:	81800315 	stw	r6,12(r16)
 8005ea8:	80800215 	stw	r2,8(r16)
 8005eac:	34000215 	stw	r16,8(r6)
 8005eb0:	14000315 	stw	r16,12(r2)
 8005eb4:	003f2706 	br	8005b54 <__flash_exceptions_start+0xf7e04b34>
 8005eb8:	88c00054 	ori	r3,r17,1
 8005ebc:	80c00115 	stw	r3,4(r16)
 8005ec0:	8463883a 	add	r17,r16,r17
 8005ec4:	34400515 	stw	r17,20(r6)
 8005ec8:	34400415 	stw	r17,16(r6)
 8005ecc:	10c00054 	ori	r3,r2,1
 8005ed0:	8a400315 	stw	r9,12(r17)
 8005ed4:	8a400215 	stw	r9,8(r17)
 8005ed8:	88c00115 	stw	r3,4(r17)
 8005edc:	88a3883a 	add	r17,r17,r2
 8005ee0:	88800015 	stw	r2,0(r17)
 8005ee4:	9009883a 	mov	r4,r18
 8005ee8:	800d37c0 	call	800d37c <__malloc_unlock>
 8005eec:	80800204 	addi	r2,r16,8
 8005ef0:	003ecb06 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005ef4:	31000117 	ldw	r4,4(r6)
 8005ef8:	003f1606 	br	8005b54 <__flash_exceptions_start+0xf7e04b34>
 8005efc:	63000044 	addi	r12,r12,1
 8005f00:	608000cc 	andi	r2,r12,3
 8005f04:	5ac00204 	addi	r11,r11,8
 8005f08:	103f2a1e 	bne	r2,zero,8005bb4 <__flash_exceptions_start+0xf7e04b94>
 8005f0c:	00002106 	br	8005f94 <_malloc_r+0x628>
 8005f10:	80800204 	addi	r2,r16,8
 8005f14:	84000517 	ldw	r16,20(r16)
 8005f18:	143eb31e 	bne	r2,r16,80059e8 <__flash_exceptions_start+0xf7e049c8>
 8005f1c:	18c00084 	addi	r3,r3,2
 8005f20:	003eec06 	br	8005ad4 <__flash_exceptions_start+0xf7e04ab4>
 8005f24:	8085883a 	add	r2,r16,r2
 8005f28:	10c00117 	ldw	r3,4(r2)
 8005f2c:	81000317 	ldw	r4,12(r16)
 8005f30:	81400217 	ldw	r5,8(r16)
 8005f34:	18c00054 	ori	r3,r3,1
 8005f38:	10c00115 	stw	r3,4(r2)
 8005f3c:	29000315 	stw	r4,12(r5)
 8005f40:	21400215 	stw	r5,8(r4)
 8005f44:	9009883a 	mov	r4,r18
 8005f48:	800d37c0 	call	800d37c <__malloc_unlock>
 8005f4c:	80800204 	addi	r2,r16,8
 8005f50:	003eb306 	br	8005a20 <__flash_exceptions_start+0xf7e04a00>
 8005f54:	19c016c4 	addi	r7,r3,91
 8005f58:	39cb883a 	add	r5,r7,r7
 8005f5c:	003ec706 	br	8005a7c <__flash_exceptions_start+0xf7e04a5c>
 8005f60:	3804d1ba 	srli	r2,r7,6
 8005f64:	11000e04 	addi	r4,r2,56
 8005f68:	210b883a 	add	r5,r4,r4
 8005f6c:	003fbe06 	br	8005e68 <__flash_exceptions_start+0xf7e04e48>
 8005f70:	84ff5d26 	beq	r16,r19,8005ce8 <__flash_exceptions_start+0xf7e04cc8>
 8005f74:	9c000217 	ldw	r16,8(r19)
 8005f78:	00bfff04 	movi	r2,-4
 8005f7c:	80c00117 	ldw	r3,4(r16)
 8005f80:	1886703a 	and	r3,r3,r2
 8005f84:	003f9706 	br	8005de4 <__flash_exceptions_start+0xf7e04dc4>
 8005f88:	52800017 	ldw	r10,0(r10)
 8005f8c:	18ffffc4 	addi	r3,r3,-1
 8005f90:	50805c1e 	bne	r10,r2,8006104 <_malloc_r+0x798>
 8005f94:	190000cc 	andi	r4,r3,3
 8005f98:	50bffe04 	addi	r2,r10,-8
 8005f9c:	203ffa1e 	bne	r4,zero,8005f88 <__flash_exceptions_start+0xf7e04f68>
 8005fa0:	98800117 	ldw	r2,4(r19)
 8005fa4:	0146303a 	nor	r3,zero,r5
 8005fa8:	1884703a 	and	r2,r3,r2
 8005fac:	98800115 	stw	r2,4(r19)
 8005fb0:	294b883a 	add	r5,r5,r5
 8005fb4:	117f2e36 	bltu	r2,r5,8005c70 <__flash_exceptions_start+0xf7e04c50>
 8005fb8:	283f2d26 	beq	r5,zero,8005c70 <__flash_exceptions_start+0xf7e04c50>
 8005fbc:	1146703a 	and	r3,r2,r5
 8005fc0:	1800521e 	bne	r3,zero,800610c <_malloc_r+0x7a0>
 8005fc4:	6007883a 	mov	r3,r12
 8005fc8:	294b883a 	add	r5,r5,r5
 8005fcc:	1148703a 	and	r4,r2,r5
 8005fd0:	18c00104 	addi	r3,r3,4
 8005fd4:	203ffc26 	beq	r4,zero,8005fc8 <__flash_exceptions_start+0xf7e04fa8>
 8005fd8:	003ef006 	br	8005b9c <__flash_exceptions_start+0xf7e04b7c>
 8005fdc:	00805504 	movi	r2,340
 8005fe0:	10c01336 	bltu	r2,r3,8006030 <_malloc_r+0x6c4>
 8005fe4:	8806d3fa 	srli	r3,r17,15
 8005fe8:	19c01dc4 	addi	r7,r3,119
 8005fec:	39cb883a 	add	r5,r7,r7
 8005ff0:	003ea206 	br	8005a7c <__flash_exceptions_start+0xf7e04a5c>
 8005ff4:	00c40004 	movi	r3,4096
 8005ff8:	003f4d06 	br	8005d30 <__flash_exceptions_start+0xf7e04d10>
 8005ffc:	00800044 	movi	r2,1
 8006000:	a0800115 	stw	r2,4(r20)
 8006004:	a021883a 	mov	r16,r20
 8006008:	0007883a 	mov	r3,zero
 800600c:	003f7506 	br	8005de4 <__flash_exceptions_start+0xf7e04dc4>
 8006010:	200bd0ba 	srai	r5,r4,2
 8006014:	01800044 	movi	r6,1
 8006018:	41000117 	ldw	r4,4(r8)
 800601c:	314a983a 	sll	r5,r6,r5
 8006020:	100d883a 	mov	r6,r2
 8006024:	2908b03a 	or	r4,r5,r4
 8006028:	41000115 	stw	r4,4(r8)
 800602c:	003f9d06 	br	8005ea4 <__flash_exceptions_start+0xf7e04e84>
 8006030:	00815504 	movi	r2,1364
 8006034:	10c01336 	bltu	r2,r3,8006084 <_malloc_r+0x718>
 8006038:	8806d4ba 	srli	r3,r17,18
 800603c:	19c01f04 	addi	r7,r3,124
 8006040:	39cb883a 	add	r5,r7,r7
 8006044:	003e8d06 	br	8005a7c <__flash_exceptions_start+0xf7e04a5c>
 8006048:	ad400404 	addi	r21,r21,16
 800604c:	003f1d06 	br	8005cc4 <__flash_exceptions_start+0xf7e04ca4>
 8006050:	01001504 	movi	r4,84
 8006054:	20801c36 	bltu	r4,r2,80060c8 <_malloc_r+0x75c>
 8006058:	3804d33a 	srli	r2,r7,12
 800605c:	11001b84 	addi	r4,r2,110
 8006060:	210b883a 	add	r5,r4,r4
 8006064:	003f8006 	br	8005e68 <__flash_exceptions_start+0xf7e04e48>
 8006068:	3083ffcc 	andi	r2,r6,4095
 800606c:	103f241e 	bne	r2,zero,8005d00 <__flash_exceptions_start+0xf7e04ce0>
 8006070:	99000217 	ldw	r4,8(r19)
 8006074:	ad85883a 	add	r2,r21,r22
 8006078:	10800054 	ori	r2,r2,1
 800607c:	20800115 	stw	r2,4(r4)
 8006080:	003f4a06 	br	8005dac <__flash_exceptions_start+0xf7e04d8c>
 8006084:	01403f04 	movi	r5,252
 8006088:	01c01f84 	movi	r7,126
 800608c:	003e7b06 	br	8005a7c <__flash_exceptions_start+0xf7e04a5c>
 8006090:	00c00044 	movi	r3,1
 8006094:	002b883a 	mov	r21,zero
 8006098:	003f3006 	br	8005d5c <__flash_exceptions_start+0xf7e04d3c>
 800609c:	00820074 	movhi	r2,2049
 80060a0:	10bdb204 	addi	r2,r2,-2360
 80060a4:	15000015 	stw	r20,0(r2)
 80060a8:	003f1b06 	br	8005d18 <__flash_exceptions_start+0xf7e04cf8>
 80060ac:	9009883a 	mov	r4,r18
 80060b0:	81400204 	addi	r5,r16,8
 80060b4:	8004d9c0 	call	8004d9c <_free_r>
 80060b8:	00820074 	movhi	r2,2049
 80060bc:	10809904 	addi	r2,r2,612
 80060c0:	10c00017 	ldw	r3,0(r2)
 80060c4:	003f3906 	br	8005dac <__flash_exceptions_start+0xf7e04d8c>
 80060c8:	01005504 	movi	r4,340
 80060cc:	20800436 	bltu	r4,r2,80060e0 <_malloc_r+0x774>
 80060d0:	3804d3fa 	srli	r2,r7,15
 80060d4:	11001dc4 	addi	r4,r2,119
 80060d8:	210b883a 	add	r5,r4,r4
 80060dc:	003f6206 	br	8005e68 <__flash_exceptions_start+0xf7e04e48>
 80060e0:	01015504 	movi	r4,1364
 80060e4:	20800436 	bltu	r4,r2,80060f8 <_malloc_r+0x78c>
 80060e8:	3804d4ba 	srli	r2,r7,18
 80060ec:	11001f04 	addi	r4,r2,124
 80060f0:	210b883a 	add	r5,r4,r4
 80060f4:	003f5c06 	br	8005e68 <__flash_exceptions_start+0xf7e04e48>
 80060f8:	01403f04 	movi	r5,252
 80060fc:	01001f84 	movi	r4,126
 8006100:	003f5906 	br	8005e68 <__flash_exceptions_start+0xf7e04e48>
 8006104:	98800117 	ldw	r2,4(r19)
 8006108:	003fa906 	br	8005fb0 <__flash_exceptions_start+0xf7e04f90>
 800610c:	6007883a 	mov	r3,r12
 8006110:	003ea206 	br	8005b9c <__flash_exceptions_start+0xf7e04b7c>

08006114 <memchr>:
 8006114:	208000cc 	andi	r2,r4,3
 8006118:	280f883a 	mov	r7,r5
 800611c:	10003526 	beq	r2,zero,80061f4 <memchr+0xe0>
 8006120:	30bfffc4 	addi	r2,r6,-1
 8006124:	30001b26 	beq	r6,zero,8006194 <memchr+0x80>
 8006128:	21800003 	ldbu	r6,0(r4)
 800612c:	28c03fcc 	andi	r3,r5,255
 8006130:	30c01a26 	beq	r6,r3,800619c <memchr+0x88>
 8006134:	180d883a 	mov	r6,r3
 8006138:	00000406 	br	800614c <memchr+0x38>
 800613c:	10001526 	beq	r2,zero,8006194 <memchr+0x80>
 8006140:	20c00003 	ldbu	r3,0(r4)
 8006144:	10bfffc4 	addi	r2,r2,-1
 8006148:	19801426 	beq	r3,r6,800619c <memchr+0x88>
 800614c:	21000044 	addi	r4,r4,1
 8006150:	20c000cc 	andi	r3,r4,3
 8006154:	183ff91e 	bne	r3,zero,800613c <__flash_exceptions_start+0xf7e0511c>
 8006158:	024000c4 	movi	r9,3
 800615c:	48801136 	bltu	r9,r2,80061a4 <memchr+0x90>
 8006160:	10000c26 	beq	r2,zero,8006194 <memchr+0x80>
 8006164:	20c00003 	ldbu	r3,0(r4)
 8006168:	29403fcc 	andi	r5,r5,255
 800616c:	19400b26 	beq	r3,r5,800619c <memchr+0x88>
 8006170:	20c00044 	addi	r3,r4,1
 8006174:	2085883a 	add	r2,r4,r2
 8006178:	39803fcc 	andi	r6,r7,255
 800617c:	00000306 	br	800618c <memchr+0x78>
 8006180:	18c00044 	addi	r3,r3,1
 8006184:	197fffc3 	ldbu	r5,-1(r3)
 8006188:	29800426 	beq	r5,r6,800619c <memchr+0x88>
 800618c:	1809883a 	mov	r4,r3
 8006190:	18bffb1e 	bne	r3,r2,8006180 <__flash_exceptions_start+0xf7e05160>
 8006194:	0005883a 	mov	r2,zero
 8006198:	f800283a 	ret
 800619c:	2005883a 	mov	r2,r4
 80061a0:	f800283a 	ret
 80061a4:	28c03fcc 	andi	r3,r5,255
 80061a8:	1810923a 	slli	r8,r3,8
 80061ac:	02ffbff4 	movhi	r11,65279
 80061b0:	02a02074 	movhi	r10,32897
 80061b4:	40c6b03a 	or	r3,r8,r3
 80061b8:	1810943a 	slli	r8,r3,16
 80061bc:	5affbfc4 	addi	r11,r11,-257
 80061c0:	52a02004 	addi	r10,r10,-32640
 80061c4:	40d0b03a 	or	r8,r8,r3
 80061c8:	20c00017 	ldw	r3,0(r4)
 80061cc:	40c6f03a 	xor	r3,r8,r3
 80061d0:	1acd883a 	add	r6,r3,r11
 80061d4:	00c6303a 	nor	r3,zero,r3
 80061d8:	30c6703a 	and	r3,r6,r3
 80061dc:	1a86703a 	and	r3,r3,r10
 80061e0:	183fdf1e 	bne	r3,zero,8006160 <__flash_exceptions_start+0xf7e05140>
 80061e4:	10bfff04 	addi	r2,r2,-4
 80061e8:	21000104 	addi	r4,r4,4
 80061ec:	48bff636 	bltu	r9,r2,80061c8 <__flash_exceptions_start+0xf7e051a8>
 80061f0:	003fdb06 	br	8006160 <__flash_exceptions_start+0xf7e05140>
 80061f4:	3005883a 	mov	r2,r6
 80061f8:	003fd706 	br	8006158 <__flash_exceptions_start+0xf7e05138>

080061fc <memcpy>:
 80061fc:	deffff04 	addi	sp,sp,-4
 8006200:	dc000015 	stw	r16,0(sp)
 8006204:	00c003c4 	movi	r3,15
 8006208:	2005883a 	mov	r2,r4
 800620c:	1980432e 	bgeu	r3,r6,800631c <memcpy+0x120>
 8006210:	2146b03a 	or	r3,r4,r5
 8006214:	18c000cc 	andi	r3,r3,3
 8006218:	1800421e 	bne	r3,zero,8006324 <memcpy+0x128>
 800621c:	343ffc04 	addi	r16,r6,-16
 8006220:	8020d13a 	srli	r16,r16,4
 8006224:	28c00104 	addi	r3,r5,4
 8006228:	23400104 	addi	r13,r4,4
 800622c:	801e913a 	slli	r15,r16,4
 8006230:	2b000204 	addi	r12,r5,8
 8006234:	22c00204 	addi	r11,r4,8
 8006238:	7bc00504 	addi	r15,r15,20
 800623c:	2a800304 	addi	r10,r5,12
 8006240:	22400304 	addi	r9,r4,12
 8006244:	2bdf883a 	add	r15,r5,r15
 8006248:	2811883a 	mov	r8,r5
 800624c:	200f883a 	mov	r7,r4
 8006250:	41000017 	ldw	r4,0(r8)
 8006254:	39c00404 	addi	r7,r7,16
 8006258:	18c00404 	addi	r3,r3,16
 800625c:	393ffc15 	stw	r4,-16(r7)
 8006260:	1bbffc17 	ldw	r14,-16(r3)
 8006264:	6b400404 	addi	r13,r13,16
 8006268:	5ac00404 	addi	r11,r11,16
 800626c:	6bbffc15 	stw	r14,-16(r13)
 8006270:	63800017 	ldw	r14,0(r12)
 8006274:	4a400404 	addi	r9,r9,16
 8006278:	42000404 	addi	r8,r8,16
 800627c:	5bbffc15 	stw	r14,-16(r11)
 8006280:	53800017 	ldw	r14,0(r10)
 8006284:	63000404 	addi	r12,r12,16
 8006288:	52800404 	addi	r10,r10,16
 800628c:	4bbffc15 	stw	r14,-16(r9)
 8006290:	1bffef1e 	bne	r3,r15,8006250 <__flash_exceptions_start+0xf7e05230>
 8006294:	81c00044 	addi	r7,r16,1
 8006298:	380e913a 	slli	r7,r7,4
 800629c:	310003cc 	andi	r4,r6,15
 80062a0:	02c000c4 	movi	r11,3
 80062a4:	11c7883a 	add	r3,r2,r7
 80062a8:	29cb883a 	add	r5,r5,r7
 80062ac:	59001f2e 	bgeu	r11,r4,800632c <memcpy+0x130>
 80062b0:	1813883a 	mov	r9,r3
 80062b4:	2811883a 	mov	r8,r5
 80062b8:	200f883a 	mov	r7,r4
 80062bc:	42800017 	ldw	r10,0(r8)
 80062c0:	4a400104 	addi	r9,r9,4
 80062c4:	39ffff04 	addi	r7,r7,-4
 80062c8:	4abfff15 	stw	r10,-4(r9)
 80062cc:	42000104 	addi	r8,r8,4
 80062d0:	59fffa36 	bltu	r11,r7,80062bc <__flash_exceptions_start+0xf7e0529c>
 80062d4:	213fff04 	addi	r4,r4,-4
 80062d8:	2008d0ba 	srli	r4,r4,2
 80062dc:	318000cc 	andi	r6,r6,3
 80062e0:	21000044 	addi	r4,r4,1
 80062e4:	2109883a 	add	r4,r4,r4
 80062e8:	2109883a 	add	r4,r4,r4
 80062ec:	1907883a 	add	r3,r3,r4
 80062f0:	290b883a 	add	r5,r5,r4
 80062f4:	30000626 	beq	r6,zero,8006310 <memcpy+0x114>
 80062f8:	198d883a 	add	r6,r3,r6
 80062fc:	29c00003 	ldbu	r7,0(r5)
 8006300:	18c00044 	addi	r3,r3,1
 8006304:	29400044 	addi	r5,r5,1
 8006308:	19ffffc5 	stb	r7,-1(r3)
 800630c:	19bffb1e 	bne	r3,r6,80062fc <__flash_exceptions_start+0xf7e052dc>
 8006310:	dc000017 	ldw	r16,0(sp)
 8006314:	dec00104 	addi	sp,sp,4
 8006318:	f800283a 	ret
 800631c:	2007883a 	mov	r3,r4
 8006320:	003ff406 	br	80062f4 <__flash_exceptions_start+0xf7e052d4>
 8006324:	2007883a 	mov	r3,r4
 8006328:	003ff306 	br	80062f8 <__flash_exceptions_start+0xf7e052d8>
 800632c:	200d883a 	mov	r6,r4
 8006330:	003ff006 	br	80062f4 <__flash_exceptions_start+0xf7e052d4>

08006334 <memmove>:
 8006334:	2005883a 	mov	r2,r4
 8006338:	29000b2e 	bgeu	r5,r4,8006368 <memmove+0x34>
 800633c:	298f883a 	add	r7,r5,r6
 8006340:	21c0092e 	bgeu	r4,r7,8006368 <memmove+0x34>
 8006344:	2187883a 	add	r3,r4,r6
 8006348:	198bc83a 	sub	r5,r3,r6
 800634c:	30004b26 	beq	r6,zero,800647c <memmove+0x148>
 8006350:	39ffffc4 	addi	r7,r7,-1
 8006354:	39000003 	ldbu	r4,0(r7)
 8006358:	18ffffc4 	addi	r3,r3,-1
 800635c:	19000005 	stb	r4,0(r3)
 8006360:	197ffb1e 	bne	r3,r5,8006350 <__flash_exceptions_start+0xf7e05330>
 8006364:	f800283a 	ret
 8006368:	00c003c4 	movi	r3,15
 800636c:	1980412e 	bgeu	r3,r6,8006474 <memmove+0x140>
 8006370:	1146b03a 	or	r3,r2,r5
 8006374:	18c000cc 	andi	r3,r3,3
 8006378:	1800411e 	bne	r3,zero,8006480 <memmove+0x14c>
 800637c:	33fffc04 	addi	r15,r6,-16
 8006380:	781ed13a 	srli	r15,r15,4
 8006384:	28c00104 	addi	r3,r5,4
 8006388:	13400104 	addi	r13,r2,4
 800638c:	781c913a 	slli	r14,r15,4
 8006390:	2b000204 	addi	r12,r5,8
 8006394:	12c00204 	addi	r11,r2,8
 8006398:	73800504 	addi	r14,r14,20
 800639c:	2a800304 	addi	r10,r5,12
 80063a0:	12400304 	addi	r9,r2,12
 80063a4:	2b9d883a 	add	r14,r5,r14
 80063a8:	2811883a 	mov	r8,r5
 80063ac:	100f883a 	mov	r7,r2
 80063b0:	41000017 	ldw	r4,0(r8)
 80063b4:	39c00404 	addi	r7,r7,16
 80063b8:	18c00404 	addi	r3,r3,16
 80063bc:	393ffc15 	stw	r4,-16(r7)
 80063c0:	193ffc17 	ldw	r4,-16(r3)
 80063c4:	6b400404 	addi	r13,r13,16
 80063c8:	5ac00404 	addi	r11,r11,16
 80063cc:	693ffc15 	stw	r4,-16(r13)
 80063d0:	61000017 	ldw	r4,0(r12)
 80063d4:	4a400404 	addi	r9,r9,16
 80063d8:	42000404 	addi	r8,r8,16
 80063dc:	593ffc15 	stw	r4,-16(r11)
 80063e0:	51000017 	ldw	r4,0(r10)
 80063e4:	63000404 	addi	r12,r12,16
 80063e8:	52800404 	addi	r10,r10,16
 80063ec:	493ffc15 	stw	r4,-16(r9)
 80063f0:	1bbfef1e 	bne	r3,r14,80063b0 <__flash_exceptions_start+0xf7e05390>
 80063f4:	79000044 	addi	r4,r15,1
 80063f8:	2008913a 	slli	r4,r4,4
 80063fc:	328003cc 	andi	r10,r6,15
 8006400:	02c000c4 	movi	r11,3
 8006404:	1107883a 	add	r3,r2,r4
 8006408:	290b883a 	add	r5,r5,r4
 800640c:	5a801e2e 	bgeu	r11,r10,8006488 <memmove+0x154>
 8006410:	1813883a 	mov	r9,r3
 8006414:	2811883a 	mov	r8,r5
 8006418:	500f883a 	mov	r7,r10
 800641c:	41000017 	ldw	r4,0(r8)
 8006420:	4a400104 	addi	r9,r9,4
 8006424:	39ffff04 	addi	r7,r7,-4
 8006428:	493fff15 	stw	r4,-4(r9)
 800642c:	42000104 	addi	r8,r8,4
 8006430:	59fffa36 	bltu	r11,r7,800641c <__flash_exceptions_start+0xf7e053fc>
 8006434:	513fff04 	addi	r4,r10,-4
 8006438:	2008d0ba 	srli	r4,r4,2
 800643c:	318000cc 	andi	r6,r6,3
 8006440:	21000044 	addi	r4,r4,1
 8006444:	2109883a 	add	r4,r4,r4
 8006448:	2109883a 	add	r4,r4,r4
 800644c:	1907883a 	add	r3,r3,r4
 8006450:	290b883a 	add	r5,r5,r4
 8006454:	30000926 	beq	r6,zero,800647c <memmove+0x148>
 8006458:	198d883a 	add	r6,r3,r6
 800645c:	29c00003 	ldbu	r7,0(r5)
 8006460:	18c00044 	addi	r3,r3,1
 8006464:	29400044 	addi	r5,r5,1
 8006468:	19ffffc5 	stb	r7,-1(r3)
 800646c:	19bffb1e 	bne	r3,r6,800645c <__flash_exceptions_start+0xf7e0543c>
 8006470:	f800283a 	ret
 8006474:	1007883a 	mov	r3,r2
 8006478:	003ff606 	br	8006454 <__flash_exceptions_start+0xf7e05434>
 800647c:	f800283a 	ret
 8006480:	1007883a 	mov	r3,r2
 8006484:	003ff406 	br	8006458 <__flash_exceptions_start+0xf7e05438>
 8006488:	500d883a 	mov	r6,r10
 800648c:	003ff106 	br	8006454 <__flash_exceptions_start+0xf7e05434>

08006490 <memset>:
 8006490:	20c000cc 	andi	r3,r4,3
 8006494:	2005883a 	mov	r2,r4
 8006498:	18004326 	beq	r3,zero,80065a8 <memset+0x118>
 800649c:	31ffffc4 	addi	r7,r6,-1
 80064a0:	30004026 	beq	r6,zero,80065a4 <memset+0x114>
 80064a4:	2813883a 	mov	r9,r5
 80064a8:	200d883a 	mov	r6,r4
 80064ac:	2007883a 	mov	r3,r4
 80064b0:	00000406 	br	80064c4 <memset+0x34>
 80064b4:	3a3fffc4 	addi	r8,r7,-1
 80064b8:	31800044 	addi	r6,r6,1
 80064bc:	38003926 	beq	r7,zero,80065a4 <memset+0x114>
 80064c0:	400f883a 	mov	r7,r8
 80064c4:	18c00044 	addi	r3,r3,1
 80064c8:	32400005 	stb	r9,0(r6)
 80064cc:	1a0000cc 	andi	r8,r3,3
 80064d0:	403ff81e 	bne	r8,zero,80064b4 <__flash_exceptions_start+0xf7e05494>
 80064d4:	010000c4 	movi	r4,3
 80064d8:	21c02d2e 	bgeu	r4,r7,8006590 <memset+0x100>
 80064dc:	29803fcc 	andi	r6,r5,255
 80064e0:	3008923a 	slli	r4,r6,8
 80064e4:	218cb03a 	or	r6,r4,r6
 80064e8:	3008943a 	slli	r4,r6,16
 80064ec:	218cb03a 	or	r6,r4,r6
 80064f0:	010003c4 	movi	r4,15
 80064f4:	21c0182e 	bgeu	r4,r7,8006558 <memset+0xc8>
 80064f8:	3b3ffc04 	addi	r12,r7,-16
 80064fc:	6018d13a 	srli	r12,r12,4
 8006500:	1a000104 	addi	r8,r3,4
 8006504:	1ac00204 	addi	r11,r3,8
 8006508:	6008913a 	slli	r4,r12,4
 800650c:	1a800304 	addi	r10,r3,12
 8006510:	1813883a 	mov	r9,r3
 8006514:	21000504 	addi	r4,r4,20
 8006518:	1909883a 	add	r4,r3,r4
 800651c:	49800015 	stw	r6,0(r9)
 8006520:	41800015 	stw	r6,0(r8)
 8006524:	59800015 	stw	r6,0(r11)
 8006528:	51800015 	stw	r6,0(r10)
 800652c:	42000404 	addi	r8,r8,16
 8006530:	4a400404 	addi	r9,r9,16
 8006534:	5ac00404 	addi	r11,r11,16
 8006538:	52800404 	addi	r10,r10,16
 800653c:	413ff71e 	bne	r8,r4,800651c <__flash_exceptions_start+0xf7e054fc>
 8006540:	63000044 	addi	r12,r12,1
 8006544:	6018913a 	slli	r12,r12,4
 8006548:	39c003cc 	andi	r7,r7,15
 800654c:	010000c4 	movi	r4,3
 8006550:	1b07883a 	add	r3,r3,r12
 8006554:	21c00e2e 	bgeu	r4,r7,8006590 <memset+0x100>
 8006558:	1813883a 	mov	r9,r3
 800655c:	3811883a 	mov	r8,r7
 8006560:	010000c4 	movi	r4,3
 8006564:	49800015 	stw	r6,0(r9)
 8006568:	423fff04 	addi	r8,r8,-4
 800656c:	4a400104 	addi	r9,r9,4
 8006570:	223ffc36 	bltu	r4,r8,8006564 <__flash_exceptions_start+0xf7e05544>
 8006574:	393fff04 	addi	r4,r7,-4
 8006578:	2008d0ba 	srli	r4,r4,2
 800657c:	39c000cc 	andi	r7,r7,3
 8006580:	21000044 	addi	r4,r4,1
 8006584:	2109883a 	add	r4,r4,r4
 8006588:	2109883a 	add	r4,r4,r4
 800658c:	1907883a 	add	r3,r3,r4
 8006590:	38000426 	beq	r7,zero,80065a4 <memset+0x114>
 8006594:	19cf883a 	add	r7,r3,r7
 8006598:	19400005 	stb	r5,0(r3)
 800659c:	18c00044 	addi	r3,r3,1
 80065a0:	19fffd1e 	bne	r3,r7,8006598 <__flash_exceptions_start+0xf7e05578>
 80065a4:	f800283a 	ret
 80065a8:	2007883a 	mov	r3,r4
 80065ac:	300f883a 	mov	r7,r6
 80065b0:	003fc806 	br	80064d4 <__flash_exceptions_start+0xf7e054b4>

080065b4 <_Balloc>:
 80065b4:	20801317 	ldw	r2,76(r4)
 80065b8:	defffc04 	addi	sp,sp,-16
 80065bc:	dc400115 	stw	r17,4(sp)
 80065c0:	dc000015 	stw	r16,0(sp)
 80065c4:	dfc00315 	stw	ra,12(sp)
 80065c8:	dc800215 	stw	r18,8(sp)
 80065cc:	2023883a 	mov	r17,r4
 80065d0:	2821883a 	mov	r16,r5
 80065d4:	10000f26 	beq	r2,zero,8006614 <_Balloc+0x60>
 80065d8:	8407883a 	add	r3,r16,r16
 80065dc:	18c7883a 	add	r3,r3,r3
 80065e0:	10c7883a 	add	r3,r2,r3
 80065e4:	18800017 	ldw	r2,0(r3)
 80065e8:	10001126 	beq	r2,zero,8006630 <_Balloc+0x7c>
 80065ec:	11000017 	ldw	r4,0(r2)
 80065f0:	19000015 	stw	r4,0(r3)
 80065f4:	10000415 	stw	zero,16(r2)
 80065f8:	10000315 	stw	zero,12(r2)
 80065fc:	dfc00317 	ldw	ra,12(sp)
 8006600:	dc800217 	ldw	r18,8(sp)
 8006604:	dc400117 	ldw	r17,4(sp)
 8006608:	dc000017 	ldw	r16,0(sp)
 800660c:	dec00404 	addi	sp,sp,16
 8006610:	f800283a 	ret
 8006614:	01400104 	movi	r5,4
 8006618:	01800844 	movi	r6,33
 800661c:	80092d80 	call	80092d8 <_calloc_r>
 8006620:	88801315 	stw	r2,76(r17)
 8006624:	103fec1e 	bne	r2,zero,80065d8 <__flash_exceptions_start+0xf7e055b8>
 8006628:	0005883a 	mov	r2,zero
 800662c:	003ff306 	br	80065fc <__flash_exceptions_start+0xf7e055dc>
 8006630:	01400044 	movi	r5,1
 8006634:	2c24983a 	sll	r18,r5,r16
 8006638:	8809883a 	mov	r4,r17
 800663c:	91800144 	addi	r6,r18,5
 8006640:	318d883a 	add	r6,r6,r6
 8006644:	318d883a 	add	r6,r6,r6
 8006648:	80092d80 	call	80092d8 <_calloc_r>
 800664c:	103ff626 	beq	r2,zero,8006628 <__flash_exceptions_start+0xf7e05608>
 8006650:	14000115 	stw	r16,4(r2)
 8006654:	14800215 	stw	r18,8(r2)
 8006658:	003fe606 	br	80065f4 <__flash_exceptions_start+0xf7e055d4>

0800665c <_Bfree>:
 800665c:	28000826 	beq	r5,zero,8006680 <_Bfree+0x24>
 8006660:	28c00117 	ldw	r3,4(r5)
 8006664:	20801317 	ldw	r2,76(r4)
 8006668:	18c7883a 	add	r3,r3,r3
 800666c:	18c7883a 	add	r3,r3,r3
 8006670:	10c5883a 	add	r2,r2,r3
 8006674:	10c00017 	ldw	r3,0(r2)
 8006678:	28c00015 	stw	r3,0(r5)
 800667c:	11400015 	stw	r5,0(r2)
 8006680:	f800283a 	ret

08006684 <__multadd>:
 8006684:	defffa04 	addi	sp,sp,-24
 8006688:	dc000115 	stw	r16,4(sp)
 800668c:	2c000417 	ldw	r16,16(r5)
 8006690:	dc800315 	stw	r18,12(sp)
 8006694:	dc400215 	stw	r17,8(sp)
 8006698:	dfc00515 	stw	ra,20(sp)
 800669c:	dcc00415 	stw	r19,16(sp)
 80066a0:	2823883a 	mov	r17,r5
 80066a4:	2025883a 	mov	r18,r4
 80066a8:	2a400504 	addi	r9,r5,20
 80066ac:	0015883a 	mov	r10,zero
 80066b0:	4a000017 	ldw	r8,0(r9)
 80066b4:	4a400104 	addi	r9,r9,4
 80066b8:	52800044 	addi	r10,r10,1
 80066bc:	40ffffcc 	andi	r3,r8,65535
 80066c0:	1987383a 	mul	r3,r3,r6
 80066c4:	4010d43a 	srli	r8,r8,16
 80066c8:	19cf883a 	add	r7,r3,r7
 80066cc:	4191383a 	mul	r8,r8,r6
 80066d0:	3816d43a 	srli	r11,r7,16
 80066d4:	38ffffcc 	andi	r3,r7,65535
 80066d8:	5a0f883a 	add	r7,r11,r8
 80066dc:	3810943a 	slli	r8,r7,16
 80066e0:	380ed43a 	srli	r7,r7,16
 80066e4:	40c7883a 	add	r3,r8,r3
 80066e8:	48ffff15 	stw	r3,-4(r9)
 80066ec:	543ff016 	blt	r10,r16,80066b0 <__flash_exceptions_start+0xf7e05690>
 80066f0:	38000926 	beq	r7,zero,8006718 <__multadd+0x94>
 80066f4:	88800217 	ldw	r2,8(r17)
 80066f8:	80800f0e 	bge	r16,r2,8006738 <__multadd+0xb4>
 80066fc:	80800144 	addi	r2,r16,5
 8006700:	1085883a 	add	r2,r2,r2
 8006704:	1085883a 	add	r2,r2,r2
 8006708:	8885883a 	add	r2,r17,r2
 800670c:	11c00015 	stw	r7,0(r2)
 8006710:	84000044 	addi	r16,r16,1
 8006714:	8c000415 	stw	r16,16(r17)
 8006718:	8805883a 	mov	r2,r17
 800671c:	dfc00517 	ldw	ra,20(sp)
 8006720:	dcc00417 	ldw	r19,16(sp)
 8006724:	dc800317 	ldw	r18,12(sp)
 8006728:	dc400217 	ldw	r17,8(sp)
 800672c:	dc000117 	ldw	r16,4(sp)
 8006730:	dec00604 	addi	sp,sp,24
 8006734:	f800283a 	ret
 8006738:	89400117 	ldw	r5,4(r17)
 800673c:	9009883a 	mov	r4,r18
 8006740:	d9c00015 	stw	r7,0(sp)
 8006744:	29400044 	addi	r5,r5,1
 8006748:	80065b40 	call	80065b4 <_Balloc>
 800674c:	89800417 	ldw	r6,16(r17)
 8006750:	11000304 	addi	r4,r2,12
 8006754:	89400304 	addi	r5,r17,12
 8006758:	31800084 	addi	r6,r6,2
 800675c:	318d883a 	add	r6,r6,r6
 8006760:	318d883a 	add	r6,r6,r6
 8006764:	1027883a 	mov	r19,r2
 8006768:	80061fc0 	call	80061fc <memcpy>
 800676c:	d9c00017 	ldw	r7,0(sp)
 8006770:	88000a26 	beq	r17,zero,800679c <__multadd+0x118>
 8006774:	89000117 	ldw	r4,4(r17)
 8006778:	90c01317 	ldw	r3,76(r18)
 800677c:	2109883a 	add	r4,r4,r4
 8006780:	2109883a 	add	r4,r4,r4
 8006784:	1907883a 	add	r3,r3,r4
 8006788:	18800017 	ldw	r2,0(r3)
 800678c:	88800015 	stw	r2,0(r17)
 8006790:	1c400015 	stw	r17,0(r3)
 8006794:	9823883a 	mov	r17,r19
 8006798:	003fd806 	br	80066fc <__flash_exceptions_start+0xf7e056dc>
 800679c:	9823883a 	mov	r17,r19
 80067a0:	003fd606 	br	80066fc <__flash_exceptions_start+0xf7e056dc>

080067a4 <__s2b>:
 80067a4:	defff904 	addi	sp,sp,-28
 80067a8:	dc400115 	stw	r17,4(sp)
 80067ac:	dc000015 	stw	r16,0(sp)
 80067b0:	2023883a 	mov	r17,r4
 80067b4:	2821883a 	mov	r16,r5
 80067b8:	39000204 	addi	r4,r7,8
 80067bc:	01400244 	movi	r5,9
 80067c0:	dcc00315 	stw	r19,12(sp)
 80067c4:	dc800215 	stw	r18,8(sp)
 80067c8:	dfc00615 	stw	ra,24(sp)
 80067cc:	dd400515 	stw	r21,20(sp)
 80067d0:	dd000415 	stw	r20,16(sp)
 80067d4:	3825883a 	mov	r18,r7
 80067d8:	3027883a 	mov	r19,r6
 80067dc:	800a6dc0 	call	800a6dc <__divsi3>
 80067e0:	00c00044 	movi	r3,1
 80067e4:	000b883a 	mov	r5,zero
 80067e8:	1880030e 	bge	r3,r2,80067f8 <__s2b+0x54>
 80067ec:	18c7883a 	add	r3,r3,r3
 80067f0:	29400044 	addi	r5,r5,1
 80067f4:	18bffd16 	blt	r3,r2,80067ec <__flash_exceptions_start+0xf7e057cc>
 80067f8:	8809883a 	mov	r4,r17
 80067fc:	80065b40 	call	80065b4 <_Balloc>
 8006800:	d8c00717 	ldw	r3,28(sp)
 8006804:	10c00515 	stw	r3,20(r2)
 8006808:	00c00044 	movi	r3,1
 800680c:	10c00415 	stw	r3,16(r2)
 8006810:	00c00244 	movi	r3,9
 8006814:	1cc0210e 	bge	r3,r19,800689c <__s2b+0xf8>
 8006818:	80eb883a 	add	r21,r16,r3
 800681c:	a829883a 	mov	r20,r21
 8006820:	84e1883a 	add	r16,r16,r19
 8006824:	a1c00007 	ldb	r7,0(r20)
 8006828:	8809883a 	mov	r4,r17
 800682c:	a5000044 	addi	r20,r20,1
 8006830:	100b883a 	mov	r5,r2
 8006834:	01800284 	movi	r6,10
 8006838:	39fff404 	addi	r7,r7,-48
 800683c:	80066840 	call	8006684 <__multadd>
 8006840:	a43ff81e 	bne	r20,r16,8006824 <__flash_exceptions_start+0xf7e05804>
 8006844:	ace1883a 	add	r16,r21,r19
 8006848:	843ffe04 	addi	r16,r16,-8
 800684c:	9c800a0e 	bge	r19,r18,8006878 <__s2b+0xd4>
 8006850:	94e5c83a 	sub	r18,r18,r19
 8006854:	84a5883a 	add	r18,r16,r18
 8006858:	81c00007 	ldb	r7,0(r16)
 800685c:	8809883a 	mov	r4,r17
 8006860:	84000044 	addi	r16,r16,1
 8006864:	100b883a 	mov	r5,r2
 8006868:	01800284 	movi	r6,10
 800686c:	39fff404 	addi	r7,r7,-48
 8006870:	80066840 	call	8006684 <__multadd>
 8006874:	84bff81e 	bne	r16,r18,8006858 <__flash_exceptions_start+0xf7e05838>
 8006878:	dfc00617 	ldw	ra,24(sp)
 800687c:	dd400517 	ldw	r21,20(sp)
 8006880:	dd000417 	ldw	r20,16(sp)
 8006884:	dcc00317 	ldw	r19,12(sp)
 8006888:	dc800217 	ldw	r18,8(sp)
 800688c:	dc400117 	ldw	r17,4(sp)
 8006890:	dc000017 	ldw	r16,0(sp)
 8006894:	dec00704 	addi	sp,sp,28
 8006898:	f800283a 	ret
 800689c:	84000284 	addi	r16,r16,10
 80068a0:	1827883a 	mov	r19,r3
 80068a4:	003fe906 	br	800684c <__flash_exceptions_start+0xf7e0582c>

080068a8 <__hi0bits>:
 80068a8:	20bfffec 	andhi	r2,r4,65535
 80068ac:	1000141e 	bne	r2,zero,8006900 <__hi0bits+0x58>
 80068b0:	2008943a 	slli	r4,r4,16
 80068b4:	00800404 	movi	r2,16
 80068b8:	20ffc02c 	andhi	r3,r4,65280
 80068bc:	1800021e 	bne	r3,zero,80068c8 <__hi0bits+0x20>
 80068c0:	2008923a 	slli	r4,r4,8
 80068c4:	10800204 	addi	r2,r2,8
 80068c8:	20fc002c 	andhi	r3,r4,61440
 80068cc:	1800021e 	bne	r3,zero,80068d8 <__hi0bits+0x30>
 80068d0:	2008913a 	slli	r4,r4,4
 80068d4:	10800104 	addi	r2,r2,4
 80068d8:	20f0002c 	andhi	r3,r4,49152
 80068dc:	1800031e 	bne	r3,zero,80068ec <__hi0bits+0x44>
 80068e0:	2109883a 	add	r4,r4,r4
 80068e4:	10800084 	addi	r2,r2,2
 80068e8:	2109883a 	add	r4,r4,r4
 80068ec:	20000316 	blt	r4,zero,80068fc <__hi0bits+0x54>
 80068f0:	2110002c 	andhi	r4,r4,16384
 80068f4:	2000041e 	bne	r4,zero,8006908 <__hi0bits+0x60>
 80068f8:	00800804 	movi	r2,32
 80068fc:	f800283a 	ret
 8006900:	0005883a 	mov	r2,zero
 8006904:	003fec06 	br	80068b8 <__flash_exceptions_start+0xf7e05898>
 8006908:	10800044 	addi	r2,r2,1
 800690c:	f800283a 	ret

08006910 <__lo0bits>:
 8006910:	20c00017 	ldw	r3,0(r4)
 8006914:	188001cc 	andi	r2,r3,7
 8006918:	10000826 	beq	r2,zero,800693c <__lo0bits+0x2c>
 800691c:	1880004c 	andi	r2,r3,1
 8006920:	1000211e 	bne	r2,zero,80069a8 <__lo0bits+0x98>
 8006924:	1880008c 	andi	r2,r3,2
 8006928:	1000211e 	bne	r2,zero,80069b0 <__lo0bits+0xa0>
 800692c:	1806d0ba 	srli	r3,r3,2
 8006930:	00800084 	movi	r2,2
 8006934:	20c00015 	stw	r3,0(r4)
 8006938:	f800283a 	ret
 800693c:	18bfffcc 	andi	r2,r3,65535
 8006940:	10001326 	beq	r2,zero,8006990 <__lo0bits+0x80>
 8006944:	0005883a 	mov	r2,zero
 8006948:	19403fcc 	andi	r5,r3,255
 800694c:	2800021e 	bne	r5,zero,8006958 <__lo0bits+0x48>
 8006950:	1806d23a 	srli	r3,r3,8
 8006954:	10800204 	addi	r2,r2,8
 8006958:	194003cc 	andi	r5,r3,15
 800695c:	2800021e 	bne	r5,zero,8006968 <__lo0bits+0x58>
 8006960:	1806d13a 	srli	r3,r3,4
 8006964:	10800104 	addi	r2,r2,4
 8006968:	194000cc 	andi	r5,r3,3
 800696c:	2800021e 	bne	r5,zero,8006978 <__lo0bits+0x68>
 8006970:	1806d0ba 	srli	r3,r3,2
 8006974:	10800084 	addi	r2,r2,2
 8006978:	1940004c 	andi	r5,r3,1
 800697c:	2800081e 	bne	r5,zero,80069a0 <__lo0bits+0x90>
 8006980:	1806d07a 	srli	r3,r3,1
 8006984:	1800051e 	bne	r3,zero,800699c <__lo0bits+0x8c>
 8006988:	00800804 	movi	r2,32
 800698c:	f800283a 	ret
 8006990:	1806d43a 	srli	r3,r3,16
 8006994:	00800404 	movi	r2,16
 8006998:	003feb06 	br	8006948 <__flash_exceptions_start+0xf7e05928>
 800699c:	10800044 	addi	r2,r2,1
 80069a0:	20c00015 	stw	r3,0(r4)
 80069a4:	f800283a 	ret
 80069a8:	0005883a 	mov	r2,zero
 80069ac:	f800283a 	ret
 80069b0:	1806d07a 	srli	r3,r3,1
 80069b4:	00800044 	movi	r2,1
 80069b8:	20c00015 	stw	r3,0(r4)
 80069bc:	f800283a 	ret

080069c0 <__i2b>:
 80069c0:	defffd04 	addi	sp,sp,-12
 80069c4:	dc000015 	stw	r16,0(sp)
 80069c8:	04000044 	movi	r16,1
 80069cc:	dc400115 	stw	r17,4(sp)
 80069d0:	2823883a 	mov	r17,r5
 80069d4:	800b883a 	mov	r5,r16
 80069d8:	dfc00215 	stw	ra,8(sp)
 80069dc:	80065b40 	call	80065b4 <_Balloc>
 80069e0:	14400515 	stw	r17,20(r2)
 80069e4:	14000415 	stw	r16,16(r2)
 80069e8:	dfc00217 	ldw	ra,8(sp)
 80069ec:	dc400117 	ldw	r17,4(sp)
 80069f0:	dc000017 	ldw	r16,0(sp)
 80069f4:	dec00304 	addi	sp,sp,12
 80069f8:	f800283a 	ret

080069fc <__multiply>:
 80069fc:	defffa04 	addi	sp,sp,-24
 8006a00:	dcc00315 	stw	r19,12(sp)
 8006a04:	dc800215 	stw	r18,8(sp)
 8006a08:	2cc00417 	ldw	r19,16(r5)
 8006a0c:	34800417 	ldw	r18,16(r6)
 8006a10:	dd000415 	stw	r20,16(sp)
 8006a14:	dc400115 	stw	r17,4(sp)
 8006a18:	dfc00515 	stw	ra,20(sp)
 8006a1c:	dc000015 	stw	r16,0(sp)
 8006a20:	2829883a 	mov	r20,r5
 8006a24:	3023883a 	mov	r17,r6
 8006a28:	9c807016 	blt	r19,r18,8006bec <__multiply+0x1f0>
 8006a2c:	9005883a 	mov	r2,r18
 8006a30:	9825883a 	mov	r18,r19
 8006a34:	1027883a 	mov	r19,r2
 8006a38:	a0800217 	ldw	r2,8(r20)
 8006a3c:	94e1883a 	add	r16,r18,r19
 8006a40:	a1400117 	ldw	r5,4(r20)
 8006a44:	1400010e 	bge	r2,r16,8006a4c <__multiply+0x50>
 8006a48:	29400044 	addi	r5,r5,1
 8006a4c:	80065b40 	call	80065b4 <_Balloc>
 8006a50:	8417883a 	add	r11,r16,r16
 8006a54:	13000504 	addi	r12,r2,20
 8006a58:	5ad7883a 	add	r11,r11,r11
 8006a5c:	62d7883a 	add	r11,r12,r11
 8006a60:	6007883a 	mov	r3,r12
 8006a64:	62c0032e 	bgeu	r12,r11,8006a74 <__multiply+0x78>
 8006a68:	18000015 	stw	zero,0(r3)
 8006a6c:	18c00104 	addi	r3,r3,4
 8006a70:	1afffd36 	bltu	r3,r11,8006a68 <__flash_exceptions_start+0xf7e05a48>
 8006a74:	9ce7883a 	add	r19,r19,r19
 8006a78:	94a5883a 	add	r18,r18,r18
 8006a7c:	89800504 	addi	r6,r17,20
 8006a80:	9ce7883a 	add	r19,r19,r19
 8006a84:	a3800504 	addi	r14,r20,20
 8006a88:	94a5883a 	add	r18,r18,r18
 8006a8c:	34db883a 	add	r13,r6,r19
 8006a90:	7495883a 	add	r10,r14,r18
 8006a94:	3340422e 	bgeu	r6,r13,8006ba0 <__multiply+0x1a4>
 8006a98:	34400017 	ldw	r17,0(r6)
 8006a9c:	8cbfffcc 	andi	r18,r17,65535
 8006aa0:	90001b26 	beq	r18,zero,8006b10 <__multiply+0x114>
 8006aa4:	6013883a 	mov	r9,r12
 8006aa8:	7023883a 	mov	r17,r14
 8006aac:	0011883a 	mov	r8,zero
 8006ab0:	88c00017 	ldw	r3,0(r17)
 8006ab4:	4bc00017 	ldw	r15,0(r9)
 8006ab8:	8c400104 	addi	r17,r17,4
 8006abc:	19ffffcc 	andi	r7,r3,65535
 8006ac0:	3c8f383a 	mul	r7,r7,r18
 8006ac4:	1808d43a 	srli	r4,r3,16
 8006ac8:	797fffcc 	andi	r5,r15,65535
 8006acc:	29cb883a 	add	r5,r5,r7
 8006ad0:	2a0b883a 	add	r5,r5,r8
 8006ad4:	2489383a 	mul	r4,r4,r18
 8006ad8:	7806d43a 	srli	r3,r15,16
 8006adc:	2810d43a 	srli	r8,r5,16
 8006ae0:	297fffcc 	andi	r5,r5,65535
 8006ae4:	1907883a 	add	r3,r3,r4
 8006ae8:	1a07883a 	add	r3,r3,r8
 8006aec:	1808943a 	slli	r4,r3,16
 8006af0:	480f883a 	mov	r7,r9
 8006af4:	1810d43a 	srli	r8,r3,16
 8006af8:	214ab03a 	or	r5,r4,r5
 8006afc:	49400015 	stw	r5,0(r9)
 8006b00:	4a400104 	addi	r9,r9,4
 8006b04:	8abfea36 	bltu	r17,r10,8006ab0 <__flash_exceptions_start+0xf7e05a90>
 8006b08:	3a000115 	stw	r8,4(r7)
 8006b0c:	34400017 	ldw	r17,0(r6)
 8006b10:	8822d43a 	srli	r17,r17,16
 8006b14:	88001f26 	beq	r17,zero,8006b94 <__multiply+0x198>
 8006b18:	60c00017 	ldw	r3,0(r12)
 8006b1c:	7013883a 	mov	r9,r14
 8006b20:	601f883a 	mov	r15,r12
 8006b24:	1811883a 	mov	r8,r3
 8006b28:	6027883a 	mov	r19,r12
 8006b2c:	000f883a 	mov	r7,zero
 8006b30:	00000106 	br	8006b38 <__multiply+0x13c>
 8006b34:	9027883a 	mov	r19,r18
 8006b38:	4940000b 	ldhu	r5,0(r9)
 8006b3c:	4010d43a 	srli	r8,r8,16
 8006b40:	193fffcc 	andi	r4,r3,65535
 8006b44:	2c4b383a 	mul	r5,r5,r17
 8006b48:	7bc00104 	addi	r15,r15,4
 8006b4c:	4a400104 	addi	r9,r9,4
 8006b50:	2a0b883a 	add	r5,r5,r8
 8006b54:	29cb883a 	add	r5,r5,r7
 8006b58:	2806943a 	slli	r3,r5,16
 8006b5c:	9c800104 	addi	r18,r19,4
 8006b60:	280ad43a 	srli	r5,r5,16
 8006b64:	1908b03a 	or	r4,r3,r4
 8006b68:	793fff15 	stw	r4,-4(r15)
 8006b6c:	48ffff17 	ldw	r3,-4(r9)
 8006b70:	92000017 	ldw	r8,0(r18)
 8006b74:	1806d43a 	srli	r3,r3,16
 8006b78:	413fffcc 	andi	r4,r8,65535
 8006b7c:	1c47383a 	mul	r3,r3,r17
 8006b80:	1907883a 	add	r3,r3,r4
 8006b84:	1947883a 	add	r3,r3,r5
 8006b88:	180ed43a 	srli	r7,r3,16
 8006b8c:	4abfe936 	bltu	r9,r10,8006b34 <__flash_exceptions_start+0xf7e05b14>
 8006b90:	98c00115 	stw	r3,4(r19)
 8006b94:	31800104 	addi	r6,r6,4
 8006b98:	63000104 	addi	r12,r12,4
 8006b9c:	337fbe36 	bltu	r6,r13,8006a98 <__flash_exceptions_start+0xf7e05a78>
 8006ba0:	0400090e 	bge	zero,r16,8006bc8 <__multiply+0x1cc>
 8006ba4:	58ffff17 	ldw	r3,-4(r11)
 8006ba8:	5affff04 	addi	r11,r11,-4
 8006bac:	18000326 	beq	r3,zero,8006bbc <__multiply+0x1c0>
 8006bb0:	00000506 	br	8006bc8 <__multiply+0x1cc>
 8006bb4:	58c00017 	ldw	r3,0(r11)
 8006bb8:	1800031e 	bne	r3,zero,8006bc8 <__multiply+0x1cc>
 8006bbc:	843fffc4 	addi	r16,r16,-1
 8006bc0:	5affff04 	addi	r11,r11,-4
 8006bc4:	803ffb1e 	bne	r16,zero,8006bb4 <__flash_exceptions_start+0xf7e05b94>
 8006bc8:	14000415 	stw	r16,16(r2)
 8006bcc:	dfc00517 	ldw	ra,20(sp)
 8006bd0:	dd000417 	ldw	r20,16(sp)
 8006bd4:	dcc00317 	ldw	r19,12(sp)
 8006bd8:	dc800217 	ldw	r18,8(sp)
 8006bdc:	dc400117 	ldw	r17,4(sp)
 8006be0:	dc000017 	ldw	r16,0(sp)
 8006be4:	dec00604 	addi	sp,sp,24
 8006be8:	f800283a 	ret
 8006bec:	3029883a 	mov	r20,r6
 8006bf0:	2823883a 	mov	r17,r5
 8006bf4:	003f9006 	br	8006a38 <__flash_exceptions_start+0xf7e05a18>

08006bf8 <__pow5mult>:
 8006bf8:	defffa04 	addi	sp,sp,-24
 8006bfc:	dcc00315 	stw	r19,12(sp)
 8006c00:	dc800215 	stw	r18,8(sp)
 8006c04:	dc000015 	stw	r16,0(sp)
 8006c08:	dfc00515 	stw	ra,20(sp)
 8006c0c:	dd000415 	stw	r20,16(sp)
 8006c10:	dc400115 	stw	r17,4(sp)
 8006c14:	308000cc 	andi	r2,r6,3
 8006c18:	3021883a 	mov	r16,r6
 8006c1c:	2027883a 	mov	r19,r4
 8006c20:	2825883a 	mov	r18,r5
 8006c24:	10002e1e 	bne	r2,zero,8006ce0 <__pow5mult+0xe8>
 8006c28:	8021d0ba 	srai	r16,r16,2
 8006c2c:	80001a26 	beq	r16,zero,8006c98 <__pow5mult+0xa0>
 8006c30:	9c401217 	ldw	r17,72(r19)
 8006c34:	8800061e 	bne	r17,zero,8006c50 <__pow5mult+0x58>
 8006c38:	00003406 	br	8006d0c <__pow5mult+0x114>
 8006c3c:	8021d07a 	srai	r16,r16,1
 8006c40:	80001526 	beq	r16,zero,8006c98 <__pow5mult+0xa0>
 8006c44:	88800017 	ldw	r2,0(r17)
 8006c48:	10001c26 	beq	r2,zero,8006cbc <__pow5mult+0xc4>
 8006c4c:	1023883a 	mov	r17,r2
 8006c50:	80c0004c 	andi	r3,r16,1
 8006c54:	183ff926 	beq	r3,zero,8006c3c <__flash_exceptions_start+0xf7e05c1c>
 8006c58:	900b883a 	mov	r5,r18
 8006c5c:	880d883a 	mov	r6,r17
 8006c60:	9809883a 	mov	r4,r19
 8006c64:	80069fc0 	call	80069fc <__multiply>
 8006c68:	90001b26 	beq	r18,zero,8006cd8 <__pow5mult+0xe0>
 8006c6c:	91c00117 	ldw	r7,4(r18)
 8006c70:	98c01317 	ldw	r3,76(r19)
 8006c74:	8021d07a 	srai	r16,r16,1
 8006c78:	39cf883a 	add	r7,r7,r7
 8006c7c:	39cf883a 	add	r7,r7,r7
 8006c80:	19c7883a 	add	r3,r3,r7
 8006c84:	19000017 	ldw	r4,0(r3)
 8006c88:	91000015 	stw	r4,0(r18)
 8006c8c:	1c800015 	stw	r18,0(r3)
 8006c90:	1025883a 	mov	r18,r2
 8006c94:	803feb1e 	bne	r16,zero,8006c44 <__flash_exceptions_start+0xf7e05c24>
 8006c98:	9005883a 	mov	r2,r18
 8006c9c:	dfc00517 	ldw	ra,20(sp)
 8006ca0:	dd000417 	ldw	r20,16(sp)
 8006ca4:	dcc00317 	ldw	r19,12(sp)
 8006ca8:	dc800217 	ldw	r18,8(sp)
 8006cac:	dc400117 	ldw	r17,4(sp)
 8006cb0:	dc000017 	ldw	r16,0(sp)
 8006cb4:	dec00604 	addi	sp,sp,24
 8006cb8:	f800283a 	ret
 8006cbc:	9809883a 	mov	r4,r19
 8006cc0:	880b883a 	mov	r5,r17
 8006cc4:	880d883a 	mov	r6,r17
 8006cc8:	80069fc0 	call	80069fc <__multiply>
 8006ccc:	88800015 	stw	r2,0(r17)
 8006cd0:	10000015 	stw	zero,0(r2)
 8006cd4:	003fdd06 	br	8006c4c <__flash_exceptions_start+0xf7e05c2c>
 8006cd8:	1025883a 	mov	r18,r2
 8006cdc:	003fd706 	br	8006c3c <__flash_exceptions_start+0xf7e05c1c>
 8006ce0:	10bfffc4 	addi	r2,r2,-1
 8006ce4:	1085883a 	add	r2,r2,r2
 8006ce8:	00c20074 	movhi	r3,2049
 8006cec:	18fa4504 	addi	r3,r3,-5868
 8006cf0:	1085883a 	add	r2,r2,r2
 8006cf4:	1885883a 	add	r2,r3,r2
 8006cf8:	11800017 	ldw	r6,0(r2)
 8006cfc:	000f883a 	mov	r7,zero
 8006d00:	80066840 	call	8006684 <__multadd>
 8006d04:	1025883a 	mov	r18,r2
 8006d08:	003fc706 	br	8006c28 <__flash_exceptions_start+0xf7e05c08>
 8006d0c:	05000044 	movi	r20,1
 8006d10:	9809883a 	mov	r4,r19
 8006d14:	a00b883a 	mov	r5,r20
 8006d18:	80065b40 	call	80065b4 <_Balloc>
 8006d1c:	1023883a 	mov	r17,r2
 8006d20:	00809c44 	movi	r2,625
 8006d24:	88800515 	stw	r2,20(r17)
 8006d28:	8d000415 	stw	r20,16(r17)
 8006d2c:	9c401215 	stw	r17,72(r19)
 8006d30:	88000015 	stw	zero,0(r17)
 8006d34:	003fc606 	br	8006c50 <__flash_exceptions_start+0xf7e05c30>

08006d38 <__lshift>:
 8006d38:	defff904 	addi	sp,sp,-28
 8006d3c:	dd000415 	stw	r20,16(sp)
 8006d40:	dcc00315 	stw	r19,12(sp)
 8006d44:	3029d17a 	srai	r20,r6,5
 8006d48:	2cc00417 	ldw	r19,16(r5)
 8006d4c:	28800217 	ldw	r2,8(r5)
 8006d50:	dd400515 	stw	r21,20(sp)
 8006d54:	a4e7883a 	add	r19,r20,r19
 8006d58:	dc800215 	stw	r18,8(sp)
 8006d5c:	dc400115 	stw	r17,4(sp)
 8006d60:	dc000015 	stw	r16,0(sp)
 8006d64:	dfc00615 	stw	ra,24(sp)
 8006d68:	9c000044 	addi	r16,r19,1
 8006d6c:	2823883a 	mov	r17,r5
 8006d70:	302b883a 	mov	r21,r6
 8006d74:	2025883a 	mov	r18,r4
 8006d78:	29400117 	ldw	r5,4(r5)
 8006d7c:	1400030e 	bge	r2,r16,8006d8c <__lshift+0x54>
 8006d80:	1085883a 	add	r2,r2,r2
 8006d84:	29400044 	addi	r5,r5,1
 8006d88:	143ffd16 	blt	r2,r16,8006d80 <__flash_exceptions_start+0xf7e05d60>
 8006d8c:	9009883a 	mov	r4,r18
 8006d90:	80065b40 	call	80065b4 <_Balloc>
 8006d94:	11c00504 	addi	r7,r2,20
 8006d98:	0500090e 	bge	zero,r20,8006dc0 <__lshift+0x88>
 8006d9c:	3811883a 	mov	r8,r7
 8006da0:	0007883a 	mov	r3,zero
 8006da4:	40000015 	stw	zero,0(r8)
 8006da8:	18c00044 	addi	r3,r3,1
 8006dac:	42000104 	addi	r8,r8,4
 8006db0:	1d3ffc1e 	bne	r3,r20,8006da4 <__flash_exceptions_start+0xf7e05d84>
 8006db4:	18c7883a 	add	r3,r3,r3
 8006db8:	18c7883a 	add	r3,r3,r3
 8006dbc:	38cf883a 	add	r7,r7,r3
 8006dc0:	89000417 	ldw	r4,16(r17)
 8006dc4:	88c00504 	addi	r3,r17,20
 8006dc8:	a98007cc 	andi	r6,r21,31
 8006dcc:	2109883a 	add	r4,r4,r4
 8006dd0:	2109883a 	add	r4,r4,r4
 8006dd4:	1909883a 	add	r4,r3,r4
 8006dd8:	30002326 	beq	r6,zero,8006e68 <__lshift+0x130>
 8006ddc:	01400804 	movi	r5,32
 8006de0:	298bc83a 	sub	r5,r5,r6
 8006de4:	0013883a 	mov	r9,zero
 8006de8:	1a000017 	ldw	r8,0(r3)
 8006dec:	3815883a 	mov	r10,r7
 8006df0:	39c00104 	addi	r7,r7,4
 8006df4:	4190983a 	sll	r8,r8,r6
 8006df8:	18c00104 	addi	r3,r3,4
 8006dfc:	4a10b03a 	or	r8,r9,r8
 8006e00:	3a3fff15 	stw	r8,-4(r7)
 8006e04:	1a3fff17 	ldw	r8,-4(r3)
 8006e08:	4152d83a 	srl	r9,r8,r5
 8006e0c:	193ff636 	bltu	r3,r4,8006de8 <__flash_exceptions_start+0xf7e05dc8>
 8006e10:	52400115 	stw	r9,4(r10)
 8006e14:	48001a1e 	bne	r9,zero,8006e80 <__lshift+0x148>
 8006e18:	843fffc4 	addi	r16,r16,-1
 8006e1c:	14000415 	stw	r16,16(r2)
 8006e20:	88000826 	beq	r17,zero,8006e44 <__lshift+0x10c>
 8006e24:	89000117 	ldw	r4,4(r17)
 8006e28:	90c01317 	ldw	r3,76(r18)
 8006e2c:	2109883a 	add	r4,r4,r4
 8006e30:	2109883a 	add	r4,r4,r4
 8006e34:	1907883a 	add	r3,r3,r4
 8006e38:	19000017 	ldw	r4,0(r3)
 8006e3c:	89000015 	stw	r4,0(r17)
 8006e40:	1c400015 	stw	r17,0(r3)
 8006e44:	dfc00617 	ldw	ra,24(sp)
 8006e48:	dd400517 	ldw	r21,20(sp)
 8006e4c:	dd000417 	ldw	r20,16(sp)
 8006e50:	dcc00317 	ldw	r19,12(sp)
 8006e54:	dc800217 	ldw	r18,8(sp)
 8006e58:	dc400117 	ldw	r17,4(sp)
 8006e5c:	dc000017 	ldw	r16,0(sp)
 8006e60:	dec00704 	addi	sp,sp,28
 8006e64:	f800283a 	ret
 8006e68:	19400017 	ldw	r5,0(r3)
 8006e6c:	39c00104 	addi	r7,r7,4
 8006e70:	18c00104 	addi	r3,r3,4
 8006e74:	397fff15 	stw	r5,-4(r7)
 8006e78:	193ffb36 	bltu	r3,r4,8006e68 <__flash_exceptions_start+0xf7e05e48>
 8006e7c:	003fe606 	br	8006e18 <__flash_exceptions_start+0xf7e05df8>
 8006e80:	9c000084 	addi	r16,r19,2
 8006e84:	003fe406 	br	8006e18 <__flash_exceptions_start+0xf7e05df8>

08006e88 <__mcmp>:
 8006e88:	20800417 	ldw	r2,16(r4)
 8006e8c:	28c00417 	ldw	r3,16(r5)
 8006e90:	10c5c83a 	sub	r2,r2,r3
 8006e94:	1000111e 	bne	r2,zero,8006edc <__mcmp+0x54>
 8006e98:	18c7883a 	add	r3,r3,r3
 8006e9c:	18c7883a 	add	r3,r3,r3
 8006ea0:	21000504 	addi	r4,r4,20
 8006ea4:	29400504 	addi	r5,r5,20
 8006ea8:	20c5883a 	add	r2,r4,r3
 8006eac:	28cb883a 	add	r5,r5,r3
 8006eb0:	00000106 	br	8006eb8 <__mcmp+0x30>
 8006eb4:	20800a2e 	bgeu	r4,r2,8006ee0 <__mcmp+0x58>
 8006eb8:	10bfff04 	addi	r2,r2,-4
 8006ebc:	297fff04 	addi	r5,r5,-4
 8006ec0:	11800017 	ldw	r6,0(r2)
 8006ec4:	28c00017 	ldw	r3,0(r5)
 8006ec8:	30fffa26 	beq	r6,r3,8006eb4 <__flash_exceptions_start+0xf7e05e94>
 8006ecc:	30c00236 	bltu	r6,r3,8006ed8 <__mcmp+0x50>
 8006ed0:	00800044 	movi	r2,1
 8006ed4:	f800283a 	ret
 8006ed8:	00bfffc4 	movi	r2,-1
 8006edc:	f800283a 	ret
 8006ee0:	0005883a 	mov	r2,zero
 8006ee4:	f800283a 	ret

08006ee8 <__mdiff>:
 8006ee8:	defffb04 	addi	sp,sp,-20
 8006eec:	dc000015 	stw	r16,0(sp)
 8006ef0:	2821883a 	mov	r16,r5
 8006ef4:	dcc00315 	stw	r19,12(sp)
 8006ef8:	300b883a 	mov	r5,r6
 8006efc:	2027883a 	mov	r19,r4
 8006f00:	8009883a 	mov	r4,r16
 8006f04:	dc800215 	stw	r18,8(sp)
 8006f08:	dfc00415 	stw	ra,16(sp)
 8006f0c:	dc400115 	stw	r17,4(sp)
 8006f10:	3025883a 	mov	r18,r6
 8006f14:	8006e880 	call	8006e88 <__mcmp>
 8006f18:	10005226 	beq	r2,zero,8007064 <__mdiff+0x17c>
 8006f1c:	10004c16 	blt	r2,zero,8007050 <__mdiff+0x168>
 8006f20:	0023883a 	mov	r17,zero
 8006f24:	81400117 	ldw	r5,4(r16)
 8006f28:	9809883a 	mov	r4,r19
 8006f2c:	80065b40 	call	80065b4 <_Balloc>
 8006f30:	83400417 	ldw	r13,16(r16)
 8006f34:	93800417 	ldw	r14,16(r18)
 8006f38:	81000504 	addi	r4,r16,20
 8006f3c:	6b59883a 	add	r12,r13,r13
 8006f40:	739d883a 	add	r14,r14,r14
 8006f44:	6319883a 	add	r12,r12,r12
 8006f48:	91800504 	addi	r6,r18,20
 8006f4c:	739d883a 	add	r14,r14,r14
 8006f50:	14400315 	stw	r17,12(r2)
 8006f54:	2319883a 	add	r12,r4,r12
 8006f58:	339d883a 	add	r14,r6,r14
 8006f5c:	12400504 	addi	r9,r2,20
 8006f60:	0007883a 	mov	r3,zero
 8006f64:	22000017 	ldw	r8,0(r4)
 8006f68:	32800017 	ldw	r10,0(r6)
 8006f6c:	4ac00104 	addi	r11,r9,4
 8006f70:	41ffffcc 	andi	r7,r8,65535
 8006f74:	38c7883a 	add	r3,r7,r3
 8006f78:	51ffffcc 	andi	r7,r10,65535
 8006f7c:	19cfc83a 	sub	r7,r3,r7
 8006f80:	4010d43a 	srli	r8,r8,16
 8006f84:	5014d43a 	srli	r10,r10,16
 8006f88:	3807d43a 	srai	r3,r7,16
 8006f8c:	39ffffcc 	andi	r7,r7,65535
 8006f90:	4291c83a 	sub	r8,r8,r10
 8006f94:	40c7883a 	add	r3,r8,r3
 8006f98:	1810943a 	slli	r8,r3,16
 8006f9c:	31800104 	addi	r6,r6,4
 8006fa0:	21000104 	addi	r4,r4,4
 8006fa4:	41ceb03a 	or	r7,r8,r7
 8006fa8:	49c00015 	stw	r7,0(r9)
 8006fac:	1807d43a 	srai	r3,r3,16
 8006fb0:	580b883a 	mov	r5,r11
 8006fb4:	5813883a 	mov	r9,r11
 8006fb8:	33bfea36 	bltu	r6,r14,8006f64 <__flash_exceptions_start+0xf7e05f44>
 8006fbc:	2011883a 	mov	r8,r4
 8006fc0:	2300152e 	bgeu	r4,r12,8007018 <__mdiff+0x130>
 8006fc4:	21400017 	ldw	r5,0(r4)
 8006fc8:	4a400104 	addi	r9,r9,4
 8006fcc:	21000104 	addi	r4,r4,4
 8006fd0:	29ffffcc 	andi	r7,r5,65535
 8006fd4:	38c7883a 	add	r3,r7,r3
 8006fd8:	280ad43a 	srli	r5,r5,16
 8006fdc:	180dd43a 	srai	r6,r3,16
 8006fe0:	19ffffcc 	andi	r7,r3,65535
 8006fe4:	3147883a 	add	r3,r6,r5
 8006fe8:	180a943a 	slli	r5,r3,16
 8006fec:	1807d43a 	srai	r3,r3,16
 8006ff0:	29ceb03a 	or	r7,r5,r7
 8006ff4:	49ffff15 	stw	r7,-4(r9)
 8006ff8:	233ff236 	bltu	r4,r12,8006fc4 <__flash_exceptions_start+0xf7e05fa4>
 8006ffc:	0206303a 	nor	r3,zero,r8
 8007000:	1b07883a 	add	r3,r3,r12
 8007004:	1806d0ba 	srli	r3,r3,2
 8007008:	18c00044 	addi	r3,r3,1
 800700c:	18c7883a 	add	r3,r3,r3
 8007010:	18c7883a 	add	r3,r3,r3
 8007014:	58cb883a 	add	r5,r11,r3
 8007018:	28ffff04 	addi	r3,r5,-4
 800701c:	3800041e 	bne	r7,zero,8007030 <__mdiff+0x148>
 8007020:	18ffff04 	addi	r3,r3,-4
 8007024:	19000017 	ldw	r4,0(r3)
 8007028:	6b7fffc4 	addi	r13,r13,-1
 800702c:	203ffc26 	beq	r4,zero,8007020 <__flash_exceptions_start+0xf7e06000>
 8007030:	13400415 	stw	r13,16(r2)
 8007034:	dfc00417 	ldw	ra,16(sp)
 8007038:	dcc00317 	ldw	r19,12(sp)
 800703c:	dc800217 	ldw	r18,8(sp)
 8007040:	dc400117 	ldw	r17,4(sp)
 8007044:	dc000017 	ldw	r16,0(sp)
 8007048:	dec00504 	addi	sp,sp,20
 800704c:	f800283a 	ret
 8007050:	8005883a 	mov	r2,r16
 8007054:	04400044 	movi	r17,1
 8007058:	9021883a 	mov	r16,r18
 800705c:	1025883a 	mov	r18,r2
 8007060:	003fb006 	br	8006f24 <__flash_exceptions_start+0xf7e05f04>
 8007064:	9809883a 	mov	r4,r19
 8007068:	000b883a 	mov	r5,zero
 800706c:	80065b40 	call	80065b4 <_Balloc>
 8007070:	00c00044 	movi	r3,1
 8007074:	10c00415 	stw	r3,16(r2)
 8007078:	10000515 	stw	zero,20(r2)
 800707c:	003fed06 	br	8007034 <__flash_exceptions_start+0xf7e06014>

08007080 <__ulp>:
 8007080:	295ffc2c 	andhi	r5,r5,32752
 8007084:	00bf3034 	movhi	r2,64704
 8007088:	2887883a 	add	r3,r5,r2
 800708c:	00c0020e 	bge	zero,r3,8007098 <__ulp+0x18>
 8007090:	0005883a 	mov	r2,zero
 8007094:	f800283a 	ret
 8007098:	00c7c83a 	sub	r3,zero,r3
 800709c:	180bd53a 	srai	r5,r3,20
 80070a0:	008004c4 	movi	r2,19
 80070a4:	11400a0e 	bge	r2,r5,80070d0 <__ulp+0x50>
 80070a8:	00800c84 	movi	r2,50
 80070ac:	0007883a 	mov	r3,zero
 80070b0:	11400516 	blt	r2,r5,80070c8 <__ulp+0x48>
 80070b4:	00800cc4 	movi	r2,51
 80070b8:	114bc83a 	sub	r5,r2,r5
 80070bc:	00800044 	movi	r2,1
 80070c0:	1144983a 	sll	r2,r2,r5
 80070c4:	f800283a 	ret
 80070c8:	00800044 	movi	r2,1
 80070cc:	f800283a 	ret
 80070d0:	00800234 	movhi	r2,8
 80070d4:	1147d83a 	sra	r3,r2,r5
 80070d8:	0005883a 	mov	r2,zero
 80070dc:	f800283a 	ret

080070e0 <__b2d>:
 80070e0:	defffa04 	addi	sp,sp,-24
 80070e4:	dc000015 	stw	r16,0(sp)
 80070e8:	24000417 	ldw	r16,16(r4)
 80070ec:	dc400115 	stw	r17,4(sp)
 80070f0:	24400504 	addi	r17,r4,20
 80070f4:	8421883a 	add	r16,r16,r16
 80070f8:	8421883a 	add	r16,r16,r16
 80070fc:	8c21883a 	add	r16,r17,r16
 8007100:	dc800215 	stw	r18,8(sp)
 8007104:	84bfff17 	ldw	r18,-4(r16)
 8007108:	dd000415 	stw	r20,16(sp)
 800710c:	dcc00315 	stw	r19,12(sp)
 8007110:	9009883a 	mov	r4,r18
 8007114:	2829883a 	mov	r20,r5
 8007118:	dfc00515 	stw	ra,20(sp)
 800711c:	80068a80 	call	80068a8 <__hi0bits>
 8007120:	00c00804 	movi	r3,32
 8007124:	1887c83a 	sub	r3,r3,r2
 8007128:	a0c00015 	stw	r3,0(r20)
 800712c:	00c00284 	movi	r3,10
 8007130:	84ffff04 	addi	r19,r16,-4
 8007134:	18801216 	blt	r3,r2,8007180 <__b2d+0xa0>
 8007138:	014002c4 	movi	r5,11
 800713c:	2889c83a 	sub	r4,r5,r2
 8007140:	9106d83a 	srl	r3,r18,r4
 8007144:	18cffc34 	orhi	r3,r3,16368
 8007148:	8cc0282e 	bgeu	r17,r19,80071ec <__b2d+0x10c>
 800714c:	817ffe17 	ldw	r5,-8(r16)
 8007150:	290ad83a 	srl	r5,r5,r4
 8007154:	10800544 	addi	r2,r2,21
 8007158:	9084983a 	sll	r2,r18,r2
 800715c:	2884b03a 	or	r2,r5,r2
 8007160:	dfc00517 	ldw	ra,20(sp)
 8007164:	dd000417 	ldw	r20,16(sp)
 8007168:	dcc00317 	ldw	r19,12(sp)
 800716c:	dc800217 	ldw	r18,8(sp)
 8007170:	dc400117 	ldw	r17,4(sp)
 8007174:	dc000017 	ldw	r16,0(sp)
 8007178:	dec00604 	addi	sp,sp,24
 800717c:	f800283a 	ret
 8007180:	113ffd44 	addi	r4,r2,-11
 8007184:	8cc00f2e 	bgeu	r17,r19,80071c4 <__b2d+0xe4>
 8007188:	81bffe04 	addi	r6,r16,-8
 800718c:	817ffe17 	ldw	r5,-8(r16)
 8007190:	20001326 	beq	r4,zero,80071e0 <__b2d+0x100>
 8007194:	00c00ac4 	movi	r3,43
 8007198:	1885c83a 	sub	r2,r3,r2
 800719c:	2886d83a 	srl	r3,r5,r2
 80071a0:	9124983a 	sll	r18,r18,r4
 80071a4:	90e4b03a 	or	r18,r18,r3
 80071a8:	90cffc34 	orhi	r3,r18,16368
 80071ac:	8980112e 	bgeu	r17,r6,80071f4 <__b2d+0x114>
 80071b0:	81bffd17 	ldw	r6,-12(r16)
 80071b4:	308cd83a 	srl	r6,r6,r2
 80071b8:	2904983a 	sll	r2,r5,r4
 80071bc:	1184b03a 	or	r2,r2,r6
 80071c0:	003fe706 	br	8007160 <__flash_exceptions_start+0xf7e06140>
 80071c4:	20000526 	beq	r4,zero,80071dc <__b2d+0xfc>
 80071c8:	9124983a 	sll	r18,r18,r4
 80071cc:	000d883a 	mov	r6,zero
 80071d0:	000b883a 	mov	r5,zero
 80071d4:	90cffc34 	orhi	r3,r18,16368
 80071d8:	003ff706 	br	80071b8 <__flash_exceptions_start+0xf7e06198>
 80071dc:	000b883a 	mov	r5,zero
 80071e0:	90cffc34 	orhi	r3,r18,16368
 80071e4:	2805883a 	mov	r2,r5
 80071e8:	003fdd06 	br	8007160 <__flash_exceptions_start+0xf7e06140>
 80071ec:	000b883a 	mov	r5,zero
 80071f0:	003fd806 	br	8007154 <__flash_exceptions_start+0xf7e06134>
 80071f4:	000d883a 	mov	r6,zero
 80071f8:	003fef06 	br	80071b8 <__flash_exceptions_start+0xf7e06198>

080071fc <__d2b>:
 80071fc:	defff704 	addi	sp,sp,-36
 8007200:	dc000215 	stw	r16,8(sp)
 8007204:	3021883a 	mov	r16,r6
 8007208:	dc400315 	stw	r17,12(sp)
 800720c:	8022907a 	slli	r17,r16,1
 8007210:	dd400715 	stw	r21,28(sp)
 8007214:	282b883a 	mov	r21,r5
 8007218:	01400044 	movi	r5,1
 800721c:	dd000615 	stw	r20,24(sp)
 8007220:	dcc00515 	stw	r19,20(sp)
 8007224:	dc800415 	stw	r18,16(sp)
 8007228:	dfc00815 	stw	ra,32(sp)
 800722c:	3829883a 	mov	r20,r7
 8007230:	dc800917 	ldw	r18,36(sp)
 8007234:	8822d57a 	srli	r17,r17,21
 8007238:	80065b40 	call	80065b4 <_Balloc>
 800723c:	1027883a 	mov	r19,r2
 8007240:	00800434 	movhi	r2,16
 8007244:	10bfffc4 	addi	r2,r2,-1
 8007248:	808c703a 	and	r6,r16,r2
 800724c:	88000126 	beq	r17,zero,8007254 <__d2b+0x58>
 8007250:	31800434 	orhi	r6,r6,16
 8007254:	d9800015 	stw	r6,0(sp)
 8007258:	a8001f26 	beq	r21,zero,80072d8 <__d2b+0xdc>
 800725c:	d9000104 	addi	r4,sp,4
 8007260:	dd400115 	stw	r21,4(sp)
 8007264:	80069100 	call	8006910 <__lo0bits>
 8007268:	d8c00017 	ldw	r3,0(sp)
 800726c:	1000291e 	bne	r2,zero,8007314 <__d2b+0x118>
 8007270:	d9000117 	ldw	r4,4(sp)
 8007274:	99000515 	stw	r4,20(r19)
 8007278:	1820c03a 	cmpne	r16,r3,zero
 800727c:	84000044 	addi	r16,r16,1
 8007280:	98c00615 	stw	r3,24(r19)
 8007284:	9c000415 	stw	r16,16(r19)
 8007288:	88001b1e 	bne	r17,zero,80072f8 <__d2b+0xfc>
 800728c:	800690ba 	slli	r3,r16,2
 8007290:	10bef384 	addi	r2,r2,-1074
 8007294:	a0800015 	stw	r2,0(r20)
 8007298:	98c5883a 	add	r2,r19,r3
 800729c:	11000417 	ldw	r4,16(r2)
 80072a0:	8020917a 	slli	r16,r16,5
 80072a4:	80068a80 	call	80068a8 <__hi0bits>
 80072a8:	8085c83a 	sub	r2,r16,r2
 80072ac:	90800015 	stw	r2,0(r18)
 80072b0:	9805883a 	mov	r2,r19
 80072b4:	dfc00817 	ldw	ra,32(sp)
 80072b8:	dd400717 	ldw	r21,28(sp)
 80072bc:	dd000617 	ldw	r20,24(sp)
 80072c0:	dcc00517 	ldw	r19,20(sp)
 80072c4:	dc800417 	ldw	r18,16(sp)
 80072c8:	dc400317 	ldw	r17,12(sp)
 80072cc:	dc000217 	ldw	r16,8(sp)
 80072d0:	dec00904 	addi	sp,sp,36
 80072d4:	f800283a 	ret
 80072d8:	d809883a 	mov	r4,sp
 80072dc:	80069100 	call	8006910 <__lo0bits>
 80072e0:	d8c00017 	ldw	r3,0(sp)
 80072e4:	04000044 	movi	r16,1
 80072e8:	9c000415 	stw	r16,16(r19)
 80072ec:	98c00515 	stw	r3,20(r19)
 80072f0:	10800804 	addi	r2,r2,32
 80072f4:	883fe526 	beq	r17,zero,800728c <__flash_exceptions_start+0xf7e0626c>
 80072f8:	8c7ef344 	addi	r17,r17,-1075
 80072fc:	88a3883a 	add	r17,r17,r2
 8007300:	00c00d44 	movi	r3,53
 8007304:	a4400015 	stw	r17,0(r20)
 8007308:	1885c83a 	sub	r2,r3,r2
 800730c:	90800015 	stw	r2,0(r18)
 8007310:	003fe706 	br	80072b0 <__flash_exceptions_start+0xf7e06290>
 8007314:	01000804 	movi	r4,32
 8007318:	2089c83a 	sub	r4,r4,r2
 800731c:	1908983a 	sll	r4,r3,r4
 8007320:	d9400117 	ldw	r5,4(sp)
 8007324:	1886d83a 	srl	r3,r3,r2
 8007328:	2148b03a 	or	r4,r4,r5
 800732c:	99000515 	stw	r4,20(r19)
 8007330:	d8c00015 	stw	r3,0(sp)
 8007334:	003fd006 	br	8007278 <__flash_exceptions_start+0xf7e06258>

08007338 <__ratio>:
 8007338:	defff904 	addi	sp,sp,-28
 800733c:	dc400315 	stw	r17,12(sp)
 8007340:	2823883a 	mov	r17,r5
 8007344:	d9400104 	addi	r5,sp,4
 8007348:	dfc00615 	stw	ra,24(sp)
 800734c:	dcc00515 	stw	r19,20(sp)
 8007350:	dc800415 	stw	r18,16(sp)
 8007354:	2027883a 	mov	r19,r4
 8007358:	dc000215 	stw	r16,8(sp)
 800735c:	80070e00 	call	80070e0 <__b2d>
 8007360:	8809883a 	mov	r4,r17
 8007364:	d80b883a 	mov	r5,sp
 8007368:	1025883a 	mov	r18,r2
 800736c:	1821883a 	mov	r16,r3
 8007370:	80070e00 	call	80070e0 <__b2d>
 8007374:	8a400417 	ldw	r9,16(r17)
 8007378:	9a000417 	ldw	r8,16(r19)
 800737c:	100d883a 	mov	r6,r2
 8007380:	d8800017 	ldw	r2,0(sp)
 8007384:	4251c83a 	sub	r8,r8,r9
 8007388:	4012917a 	slli	r9,r8,5
 800738c:	da000117 	ldw	r8,4(sp)
 8007390:	4091c83a 	sub	r8,r8,r2
 8007394:	4251883a 	add	r8,r8,r9
 8007398:	02000d0e 	bge	zero,r8,80073d0 <__ratio+0x98>
 800739c:	4010953a 	slli	r8,r8,20
 80073a0:	4421883a 	add	r16,r8,r16
 80073a4:	9009883a 	mov	r4,r18
 80073a8:	800b883a 	mov	r5,r16
 80073ac:	180f883a 	mov	r7,r3
 80073b0:	800b0380 	call	800b038 <__divdf3>
 80073b4:	dfc00617 	ldw	ra,24(sp)
 80073b8:	dcc00517 	ldw	r19,20(sp)
 80073bc:	dc800417 	ldw	r18,16(sp)
 80073c0:	dc400317 	ldw	r17,12(sp)
 80073c4:	dc000217 	ldw	r16,8(sp)
 80073c8:	dec00704 	addi	sp,sp,28
 80073cc:	f800283a 	ret
 80073d0:	4010953a 	slli	r8,r8,20
 80073d4:	1a07c83a 	sub	r3,r3,r8
 80073d8:	003ff206 	br	80073a4 <__flash_exceptions_start+0xf7e06384>

080073dc <_mprec_log10>:
 80073dc:	defffe04 	addi	sp,sp,-8
 80073e0:	dc000015 	stw	r16,0(sp)
 80073e4:	dfc00115 	stw	ra,4(sp)
 80073e8:	008005c4 	movi	r2,23
 80073ec:	2021883a 	mov	r16,r4
 80073f0:	11000d0e 	bge	r2,r4,8007428 <_mprec_log10+0x4c>
 80073f4:	0005883a 	mov	r2,zero
 80073f8:	00cffc34 	movhi	r3,16368
 80073fc:	843fffc4 	addi	r16,r16,-1
 8007400:	1009883a 	mov	r4,r2
 8007404:	180b883a 	mov	r5,r3
 8007408:	000d883a 	mov	r6,zero
 800740c:	01d00934 	movhi	r7,16420
 8007410:	800bb480 	call	800bb48 <__muldf3>
 8007414:	803ff91e 	bne	r16,zero,80073fc <__flash_exceptions_start+0xf7e063dc>
 8007418:	dfc00117 	ldw	ra,4(sp)
 800741c:	dc000017 	ldw	r16,0(sp)
 8007420:	dec00204 	addi	sp,sp,8
 8007424:	f800283a 	ret
 8007428:	202090fa 	slli	r16,r4,3
 800742c:	00820074 	movhi	r2,2049
 8007430:	10ba5c04 	addi	r2,r2,-5776
 8007434:	1421883a 	add	r16,r2,r16
 8007438:	80800017 	ldw	r2,0(r16)
 800743c:	80c00117 	ldw	r3,4(r16)
 8007440:	dfc00117 	ldw	ra,4(sp)
 8007444:	dc000017 	ldw	r16,0(sp)
 8007448:	dec00204 	addi	sp,sp,8
 800744c:	f800283a 	ret

08007450 <__copybits>:
 8007450:	297fffc4 	addi	r5,r5,-1
 8007454:	280fd17a 	srai	r7,r5,5
 8007458:	30c00417 	ldw	r3,16(r6)
 800745c:	30800504 	addi	r2,r6,20
 8007460:	39c00044 	addi	r7,r7,1
 8007464:	18c7883a 	add	r3,r3,r3
 8007468:	39cf883a 	add	r7,r7,r7
 800746c:	18c7883a 	add	r3,r3,r3
 8007470:	39cf883a 	add	r7,r7,r7
 8007474:	10c7883a 	add	r3,r2,r3
 8007478:	21cf883a 	add	r7,r4,r7
 800747c:	10c00d2e 	bgeu	r2,r3,80074b4 <__copybits+0x64>
 8007480:	200b883a 	mov	r5,r4
 8007484:	12000017 	ldw	r8,0(r2)
 8007488:	29400104 	addi	r5,r5,4
 800748c:	10800104 	addi	r2,r2,4
 8007490:	2a3fff15 	stw	r8,-4(r5)
 8007494:	10fffb36 	bltu	r2,r3,8007484 <__flash_exceptions_start+0xf7e06464>
 8007498:	1985c83a 	sub	r2,r3,r6
 800749c:	10bffac4 	addi	r2,r2,-21
 80074a0:	1004d0ba 	srli	r2,r2,2
 80074a4:	10800044 	addi	r2,r2,1
 80074a8:	1085883a 	add	r2,r2,r2
 80074ac:	1085883a 	add	r2,r2,r2
 80074b0:	2089883a 	add	r4,r4,r2
 80074b4:	21c0032e 	bgeu	r4,r7,80074c4 <__copybits+0x74>
 80074b8:	20000015 	stw	zero,0(r4)
 80074bc:	21000104 	addi	r4,r4,4
 80074c0:	21fffd36 	bltu	r4,r7,80074b8 <__flash_exceptions_start+0xf7e06498>
 80074c4:	f800283a 	ret

080074c8 <__any_on>:
 80074c8:	20c00417 	ldw	r3,16(r4)
 80074cc:	2805d17a 	srai	r2,r5,5
 80074d0:	21000504 	addi	r4,r4,20
 80074d4:	18800d0e 	bge	r3,r2,800750c <__any_on+0x44>
 80074d8:	18c7883a 	add	r3,r3,r3
 80074dc:	18c7883a 	add	r3,r3,r3
 80074e0:	20c7883a 	add	r3,r4,r3
 80074e4:	20c0192e 	bgeu	r4,r3,800754c <__any_on+0x84>
 80074e8:	18bfff17 	ldw	r2,-4(r3)
 80074ec:	18ffff04 	addi	r3,r3,-4
 80074f0:	1000041e 	bne	r2,zero,8007504 <__any_on+0x3c>
 80074f4:	20c0142e 	bgeu	r4,r3,8007548 <__any_on+0x80>
 80074f8:	18ffff04 	addi	r3,r3,-4
 80074fc:	19400017 	ldw	r5,0(r3)
 8007500:	283ffc26 	beq	r5,zero,80074f4 <__flash_exceptions_start+0xf7e064d4>
 8007504:	00800044 	movi	r2,1
 8007508:	f800283a 	ret
 800750c:	10c00a0e 	bge	r2,r3,8007538 <__any_on+0x70>
 8007510:	1085883a 	add	r2,r2,r2
 8007514:	1085883a 	add	r2,r2,r2
 8007518:	294007cc 	andi	r5,r5,31
 800751c:	2087883a 	add	r3,r4,r2
 8007520:	283ff026 	beq	r5,zero,80074e4 <__flash_exceptions_start+0xf7e064c4>
 8007524:	19800017 	ldw	r6,0(r3)
 8007528:	3144d83a 	srl	r2,r6,r5
 800752c:	114a983a 	sll	r5,r2,r5
 8007530:	29bff41e 	bne	r5,r6,8007504 <__flash_exceptions_start+0xf7e064e4>
 8007534:	003feb06 	br	80074e4 <__flash_exceptions_start+0xf7e064c4>
 8007538:	1085883a 	add	r2,r2,r2
 800753c:	1085883a 	add	r2,r2,r2
 8007540:	2087883a 	add	r3,r4,r2
 8007544:	003fe706 	br	80074e4 <__flash_exceptions_start+0xf7e064c4>
 8007548:	f800283a 	ret
 800754c:	0005883a 	mov	r2,zero
 8007550:	f800283a 	ret

08007554 <_realloc_r>:
 8007554:	defff604 	addi	sp,sp,-40
 8007558:	dd000415 	stw	r20,16(sp)
 800755c:	dc400115 	stw	r17,4(sp)
 8007560:	dfc00915 	stw	ra,36(sp)
 8007564:	df000815 	stw	fp,32(sp)
 8007568:	ddc00715 	stw	r23,28(sp)
 800756c:	dd800615 	stw	r22,24(sp)
 8007570:	dd400515 	stw	r21,20(sp)
 8007574:	dcc00315 	stw	r19,12(sp)
 8007578:	dc800215 	stw	r18,8(sp)
 800757c:	dc000015 	stw	r16,0(sp)
 8007580:	2829883a 	mov	r20,r5
 8007584:	3023883a 	mov	r17,r6
 8007588:	2800ad26 	beq	r5,zero,8007840 <_realloc_r+0x2ec>
 800758c:	2025883a 	mov	r18,r4
 8007590:	800d35c0 	call	800d35c <__malloc_lock>
 8007594:	a0ffff17 	ldw	r3,-4(r20)
 8007598:	043fff04 	movi	r16,-4
 800759c:	890002c4 	addi	r4,r17,11
 80075a0:	01c00584 	movi	r7,22
 80075a4:	a57ffe04 	addi	r21,r20,-8
 80075a8:	1c20703a 	and	r16,r3,r16
 80075ac:	39001d2e 	bgeu	r7,r4,8007624 <_realloc_r+0xd0>
 80075b0:	05bffe04 	movi	r22,-8
 80075b4:	25ac703a 	and	r22,r4,r22
 80075b8:	b00f883a 	mov	r7,r22
 80075bc:	b0006516 	blt	r22,zero,8007754 <_realloc_r+0x200>
 80075c0:	b4406436 	bltu	r22,r17,8007754 <_realloc_r+0x200>
 80075c4:	81c01a0e 	bge	r16,r7,8007630 <_realloc_r+0xdc>
 80075c8:	07020074 	movhi	fp,2049
 80075cc:	e73c1204 	addi	fp,fp,-4024
 80075d0:	e1400217 	ldw	r5,8(fp)
 80075d4:	ac11883a 	add	r8,r21,r16
 80075d8:	2a006226 	beq	r5,r8,8007764 <_realloc_r+0x210>
 80075dc:	41800117 	ldw	r6,4(r8)
 80075e0:	027fff84 	movi	r9,-2
 80075e4:	3252703a 	and	r9,r6,r9
 80075e8:	4253883a 	add	r9,r8,r9
 80075ec:	49000117 	ldw	r4,4(r9)
 80075f0:	2100004c 	andi	r4,r4,1
 80075f4:	2000281e 	bne	r4,zero,8007698 <_realloc_r+0x144>
 80075f8:	00bfff04 	movi	r2,-4
 80075fc:	3084703a 	and	r2,r6,r2
 8007600:	1409883a 	add	r4,r2,r16
 8007604:	21c05e16 	blt	r4,r7,8007780 <_realloc_r+0x22c>
 8007608:	40800317 	ldw	r2,12(r8)
 800760c:	41400217 	ldw	r5,8(r8)
 8007610:	a023883a 	mov	r17,r20
 8007614:	2021883a 	mov	r16,r4
 8007618:	28800315 	stw	r2,12(r5)
 800761c:	11400215 	stw	r5,8(r2)
 8007620:	00000406 	br	8007634 <_realloc_r+0xe0>
 8007624:	01c00404 	movi	r7,16
 8007628:	382d883a 	mov	r22,r7
 800762c:	003fe406 	br	80075c0 <__flash_exceptions_start+0xf7e065a0>
 8007630:	a023883a 	mov	r17,r20
 8007634:	858fc83a 	sub	r7,r16,r22
 8007638:	008003c4 	movi	r2,15
 800763c:	18c0004c 	andi	r3,r3,1
 8007640:	11c07236 	bltu	r2,r7,800780c <_realloc_r+0x2b8>
 8007644:	1c06b03a 	or	r3,r3,r16
 8007648:	a8c00115 	stw	r3,4(r21)
 800764c:	ac21883a 	add	r16,r21,r16
 8007650:	80800117 	ldw	r2,4(r16)
 8007654:	10800054 	ori	r2,r2,1
 8007658:	80800115 	stw	r2,4(r16)
 800765c:	9009883a 	mov	r4,r18
 8007660:	800d37c0 	call	800d37c <__malloc_unlock>
 8007664:	8805883a 	mov	r2,r17
 8007668:	dfc00917 	ldw	ra,36(sp)
 800766c:	df000817 	ldw	fp,32(sp)
 8007670:	ddc00717 	ldw	r23,28(sp)
 8007674:	dd800617 	ldw	r22,24(sp)
 8007678:	dd400517 	ldw	r21,20(sp)
 800767c:	dd000417 	ldw	r20,16(sp)
 8007680:	dcc00317 	ldw	r19,12(sp)
 8007684:	dc800217 	ldw	r18,8(sp)
 8007688:	dc400117 	ldw	r17,4(sp)
 800768c:	dc000017 	ldw	r16,0(sp)
 8007690:	dec00a04 	addi	sp,sp,40
 8007694:	f800283a 	ret
 8007698:	18c0004c 	andi	r3,r3,1
 800769c:	1800081e 	bne	r3,zero,80076c0 <_realloc_r+0x16c>
 80076a0:	a4fffe17 	ldw	r19,-8(r20)
 80076a4:	00bfff04 	movi	r2,-4
 80076a8:	ace7c83a 	sub	r19,r21,r19
 80076ac:	98c00117 	ldw	r3,4(r19)
 80076b0:	1886703a 	and	r3,r3,r2
 80076b4:	98000226 	beq	r19,zero,80076c0 <_realloc_r+0x16c>
 80076b8:	1c2f883a 	add	r23,r3,r16
 80076bc:	b9c06d0e 	bge	r23,r7,8007874 <_realloc_r+0x320>
 80076c0:	880b883a 	mov	r5,r17
 80076c4:	9009883a 	mov	r4,r18
 80076c8:	800596c0 	call	800596c <_malloc_r>
 80076cc:	1023883a 	mov	r17,r2
 80076d0:	1000ef26 	beq	r2,zero,8007a90 <_realloc_r+0x53c>
 80076d4:	a0ffff17 	ldw	r3,-4(r20)
 80076d8:	113ffe04 	addi	r4,r2,-8
 80076dc:	00bfff84 	movi	r2,-2
 80076e0:	1884703a 	and	r2,r3,r2
 80076e4:	a885883a 	add	r2,r21,r2
 80076e8:	2080bf26 	beq	r4,r2,80079e8 <_realloc_r+0x494>
 80076ec:	81bfff04 	addi	r6,r16,-4
 80076f0:	00800904 	movi	r2,36
 80076f4:	11808936 	bltu	r2,r6,800791c <_realloc_r+0x3c8>
 80076f8:	00c004c4 	movi	r3,19
 80076fc:	19806c2e 	bgeu	r3,r6,80078b0 <_realloc_r+0x35c>
 8007700:	a0c00017 	ldw	r3,0(r20)
 8007704:	88c00015 	stw	r3,0(r17)
 8007708:	a0c00117 	ldw	r3,4(r20)
 800770c:	88c00115 	stw	r3,4(r17)
 8007710:	00c006c4 	movi	r3,27
 8007714:	1980ac36 	bltu	r3,r6,80079c8 <_realloc_r+0x474>
 8007718:	88800204 	addi	r2,r17,8
 800771c:	a0c00204 	addi	r3,r20,8
 8007720:	19000017 	ldw	r4,0(r3)
 8007724:	11000015 	stw	r4,0(r2)
 8007728:	19000117 	ldw	r4,4(r3)
 800772c:	11000115 	stw	r4,4(r2)
 8007730:	18c00217 	ldw	r3,8(r3)
 8007734:	10c00215 	stw	r3,8(r2)
 8007738:	a00b883a 	mov	r5,r20
 800773c:	9009883a 	mov	r4,r18
 8007740:	8004d9c0 	call	8004d9c <_free_r>
 8007744:	9009883a 	mov	r4,r18
 8007748:	800d37c0 	call	800d37c <__malloc_unlock>
 800774c:	8805883a 	mov	r2,r17
 8007750:	003fc506 	br	8007668 <__flash_exceptions_start+0xf7e06648>
 8007754:	00800304 	movi	r2,12
 8007758:	90800015 	stw	r2,0(r18)
 800775c:	0005883a 	mov	r2,zero
 8007760:	003fc106 	br	8007668 <__flash_exceptions_start+0xf7e06648>
 8007764:	29800117 	ldw	r6,4(r5)
 8007768:	00bfff04 	movi	r2,-4
 800776c:	b1000404 	addi	r4,r22,16
 8007770:	3084703a 	and	r2,r6,r2
 8007774:	140d883a 	add	r6,r2,r16
 8007778:	31005b0e 	bge	r6,r4,80078e8 <_realloc_r+0x394>
 800777c:	2811883a 	mov	r8,r5
 8007780:	18c0004c 	andi	r3,r3,1
 8007784:	183fce1e 	bne	r3,zero,80076c0 <__flash_exceptions_start+0xf7e066a0>
 8007788:	a4fffe17 	ldw	r19,-8(r20)
 800778c:	00ffff04 	movi	r3,-4
 8007790:	ace7c83a 	sub	r19,r21,r19
 8007794:	99000117 	ldw	r4,4(r19)
 8007798:	20c6703a 	and	r3,r4,r3
 800779c:	403fc526 	beq	r8,zero,80076b4 <__flash_exceptions_start+0xf7e06694>
 80077a0:	1c2f883a 	add	r23,r3,r16
 80077a4:	b8af883a 	add	r23,r23,r2
 80077a8:	41406026 	beq	r8,r5,800792c <_realloc_r+0x3d8>
 80077ac:	b9ffc116 	blt	r23,r7,80076b4 <__flash_exceptions_start+0xf7e06694>
 80077b0:	40c00217 	ldw	r3,8(r8)
 80077b4:	40800317 	ldw	r2,12(r8)
 80077b8:	81bfff04 	addi	r6,r16,-4
 80077bc:	01000904 	movi	r4,36
 80077c0:	18800315 	stw	r2,12(r3)
 80077c4:	10c00215 	stw	r3,8(r2)
 80077c8:	99400217 	ldw	r5,8(r19)
 80077cc:	98c00317 	ldw	r3,12(r19)
 80077d0:	9c400204 	addi	r17,r19,8
 80077d4:	28c00315 	stw	r3,12(r5)
 80077d8:	19400215 	stw	r5,8(r3)
 80077dc:	21802d36 	bltu	r4,r6,8007894 <_realloc_r+0x340>
 80077e0:	008004c4 	movi	r2,19
 80077e4:	1180352e 	bgeu	r2,r6,80078bc <_realloc_r+0x368>
 80077e8:	a0800017 	ldw	r2,0(r20)
 80077ec:	98800215 	stw	r2,8(r19)
 80077f0:	a0800117 	ldw	r2,4(r20)
 80077f4:	98800315 	stw	r2,12(r19)
 80077f8:	008006c4 	movi	r2,27
 80077fc:	11808036 	bltu	r2,r6,8007a00 <_realloc_r+0x4ac>
 8007800:	98c00404 	addi	r3,r19,16
 8007804:	a5000204 	addi	r20,r20,8
 8007808:	00002d06 	br	80078c0 <_realloc_r+0x36c>
 800780c:	1d86b03a 	or	r3,r3,r22
 8007810:	ad8b883a 	add	r5,r21,r22
 8007814:	a8c00115 	stw	r3,4(r21)
 8007818:	38800054 	ori	r2,r7,1
 800781c:	28800115 	stw	r2,4(r5)
 8007820:	29cf883a 	add	r7,r5,r7
 8007824:	38800117 	ldw	r2,4(r7)
 8007828:	9009883a 	mov	r4,r18
 800782c:	29400204 	addi	r5,r5,8
 8007830:	10800054 	ori	r2,r2,1
 8007834:	38800115 	stw	r2,4(r7)
 8007838:	8004d9c0 	call	8004d9c <_free_r>
 800783c:	003f8706 	br	800765c <__flash_exceptions_start+0xf7e0663c>
 8007840:	300b883a 	mov	r5,r6
 8007844:	dfc00917 	ldw	ra,36(sp)
 8007848:	df000817 	ldw	fp,32(sp)
 800784c:	ddc00717 	ldw	r23,28(sp)
 8007850:	dd800617 	ldw	r22,24(sp)
 8007854:	dd400517 	ldw	r21,20(sp)
 8007858:	dd000417 	ldw	r20,16(sp)
 800785c:	dcc00317 	ldw	r19,12(sp)
 8007860:	dc800217 	ldw	r18,8(sp)
 8007864:	dc400117 	ldw	r17,4(sp)
 8007868:	dc000017 	ldw	r16,0(sp)
 800786c:	dec00a04 	addi	sp,sp,40
 8007870:	800596c1 	jmpi	800596c <_malloc_r>
 8007874:	98800317 	ldw	r2,12(r19)
 8007878:	98c00217 	ldw	r3,8(r19)
 800787c:	81bfff04 	addi	r6,r16,-4
 8007880:	01000904 	movi	r4,36
 8007884:	18800315 	stw	r2,12(r3)
 8007888:	10c00215 	stw	r3,8(r2)
 800788c:	9c400204 	addi	r17,r19,8
 8007890:	21bfd32e 	bgeu	r4,r6,80077e0 <__flash_exceptions_start+0xf7e067c0>
 8007894:	8809883a 	mov	r4,r17
 8007898:	a00b883a 	mov	r5,r20
 800789c:	80063340 	call	8006334 <memmove>
 80078a0:	98c00117 	ldw	r3,4(r19)
 80078a4:	b821883a 	mov	r16,r23
 80078a8:	982b883a 	mov	r21,r19
 80078ac:	003f6106 	br	8007634 <__flash_exceptions_start+0xf7e06614>
 80078b0:	8805883a 	mov	r2,r17
 80078b4:	a007883a 	mov	r3,r20
 80078b8:	003f9906 	br	8007720 <__flash_exceptions_start+0xf7e06700>
 80078bc:	8807883a 	mov	r3,r17
 80078c0:	a0800017 	ldw	r2,0(r20)
 80078c4:	b821883a 	mov	r16,r23
 80078c8:	982b883a 	mov	r21,r19
 80078cc:	18800015 	stw	r2,0(r3)
 80078d0:	a0800117 	ldw	r2,4(r20)
 80078d4:	18800115 	stw	r2,4(r3)
 80078d8:	a0800217 	ldw	r2,8(r20)
 80078dc:	18800215 	stw	r2,8(r3)
 80078e0:	98c00117 	ldw	r3,4(r19)
 80078e4:	003f5306 	br	8007634 <__flash_exceptions_start+0xf7e06614>
 80078e8:	adab883a 	add	r21,r21,r22
 80078ec:	3585c83a 	sub	r2,r6,r22
 80078f0:	e5400215 	stw	r21,8(fp)
 80078f4:	10800054 	ori	r2,r2,1
 80078f8:	a8800115 	stw	r2,4(r21)
 80078fc:	a0bfff17 	ldw	r2,-4(r20)
 8007900:	9009883a 	mov	r4,r18
 8007904:	1080004c 	andi	r2,r2,1
 8007908:	b0acb03a 	or	r22,r22,r2
 800790c:	a5bfff15 	stw	r22,-4(r20)
 8007910:	800d37c0 	call	800d37c <__malloc_unlock>
 8007914:	a005883a 	mov	r2,r20
 8007918:	003f5306 	br	8007668 <__flash_exceptions_start+0xf7e06648>
 800791c:	8809883a 	mov	r4,r17
 8007920:	a00b883a 	mov	r5,r20
 8007924:	80063340 	call	8006334 <memmove>
 8007928:	003f8306 	br	8007738 <__flash_exceptions_start+0xf7e06718>
 800792c:	b0800404 	addi	r2,r22,16
 8007930:	b8bf6016 	blt	r23,r2,80076b4 <__flash_exceptions_start+0xf7e06694>
 8007934:	98800317 	ldw	r2,12(r19)
 8007938:	98c00217 	ldw	r3,8(r19)
 800793c:	81bfff04 	addi	r6,r16,-4
 8007940:	01000904 	movi	r4,36
 8007944:	18800315 	stw	r2,12(r3)
 8007948:	10c00215 	stw	r3,8(r2)
 800794c:	9c400204 	addi	r17,r19,8
 8007950:	21804336 	bltu	r4,r6,8007a60 <_realloc_r+0x50c>
 8007954:	008004c4 	movi	r2,19
 8007958:	11803f2e 	bgeu	r2,r6,8007a58 <_realloc_r+0x504>
 800795c:	a0800017 	ldw	r2,0(r20)
 8007960:	98800215 	stw	r2,8(r19)
 8007964:	a0800117 	ldw	r2,4(r20)
 8007968:	98800315 	stw	r2,12(r19)
 800796c:	008006c4 	movi	r2,27
 8007970:	11803f36 	bltu	r2,r6,8007a70 <_realloc_r+0x51c>
 8007974:	98800404 	addi	r2,r19,16
 8007978:	a5000204 	addi	r20,r20,8
 800797c:	a0c00017 	ldw	r3,0(r20)
 8007980:	10c00015 	stw	r3,0(r2)
 8007984:	a0c00117 	ldw	r3,4(r20)
 8007988:	10c00115 	stw	r3,4(r2)
 800798c:	a0c00217 	ldw	r3,8(r20)
 8007990:	10c00215 	stw	r3,8(r2)
 8007994:	9d87883a 	add	r3,r19,r22
 8007998:	bd85c83a 	sub	r2,r23,r22
 800799c:	e0c00215 	stw	r3,8(fp)
 80079a0:	10800054 	ori	r2,r2,1
 80079a4:	18800115 	stw	r2,4(r3)
 80079a8:	98800117 	ldw	r2,4(r19)
 80079ac:	9009883a 	mov	r4,r18
 80079b0:	1080004c 	andi	r2,r2,1
 80079b4:	b0acb03a 	or	r22,r22,r2
 80079b8:	9d800115 	stw	r22,4(r19)
 80079bc:	800d37c0 	call	800d37c <__malloc_unlock>
 80079c0:	8805883a 	mov	r2,r17
 80079c4:	003f2806 	br	8007668 <__flash_exceptions_start+0xf7e06648>
 80079c8:	a0c00217 	ldw	r3,8(r20)
 80079cc:	88c00215 	stw	r3,8(r17)
 80079d0:	a0c00317 	ldw	r3,12(r20)
 80079d4:	88c00315 	stw	r3,12(r17)
 80079d8:	30801126 	beq	r6,r2,8007a20 <_realloc_r+0x4cc>
 80079dc:	88800404 	addi	r2,r17,16
 80079e0:	a0c00404 	addi	r3,r20,16
 80079e4:	003f4e06 	br	8007720 <__flash_exceptions_start+0xf7e06700>
 80079e8:	893fff17 	ldw	r4,-4(r17)
 80079ec:	00bfff04 	movi	r2,-4
 80079f0:	a023883a 	mov	r17,r20
 80079f4:	2084703a 	and	r2,r4,r2
 80079f8:	80a1883a 	add	r16,r16,r2
 80079fc:	003f0d06 	br	8007634 <__flash_exceptions_start+0xf7e06614>
 8007a00:	a0800217 	ldw	r2,8(r20)
 8007a04:	98800415 	stw	r2,16(r19)
 8007a08:	a0800317 	ldw	r2,12(r20)
 8007a0c:	98800515 	stw	r2,20(r19)
 8007a10:	31000a26 	beq	r6,r4,8007a3c <_realloc_r+0x4e8>
 8007a14:	98c00604 	addi	r3,r19,24
 8007a18:	a5000404 	addi	r20,r20,16
 8007a1c:	003fa806 	br	80078c0 <__flash_exceptions_start+0xf7e068a0>
 8007a20:	a1000417 	ldw	r4,16(r20)
 8007a24:	88800604 	addi	r2,r17,24
 8007a28:	a0c00604 	addi	r3,r20,24
 8007a2c:	89000415 	stw	r4,16(r17)
 8007a30:	a1000517 	ldw	r4,20(r20)
 8007a34:	89000515 	stw	r4,20(r17)
 8007a38:	003f3906 	br	8007720 <__flash_exceptions_start+0xf7e06700>
 8007a3c:	a0800417 	ldw	r2,16(r20)
 8007a40:	a5000604 	addi	r20,r20,24
 8007a44:	98c00804 	addi	r3,r19,32
 8007a48:	98800615 	stw	r2,24(r19)
 8007a4c:	a0bfff17 	ldw	r2,-4(r20)
 8007a50:	98800715 	stw	r2,28(r19)
 8007a54:	003f9a06 	br	80078c0 <__flash_exceptions_start+0xf7e068a0>
 8007a58:	8805883a 	mov	r2,r17
 8007a5c:	003fc706 	br	800797c <__flash_exceptions_start+0xf7e0695c>
 8007a60:	8809883a 	mov	r4,r17
 8007a64:	a00b883a 	mov	r5,r20
 8007a68:	80063340 	call	8006334 <memmove>
 8007a6c:	003fc906 	br	8007994 <__flash_exceptions_start+0xf7e06974>
 8007a70:	a0800217 	ldw	r2,8(r20)
 8007a74:	98800415 	stw	r2,16(r19)
 8007a78:	a0800317 	ldw	r2,12(r20)
 8007a7c:	98800515 	stw	r2,20(r19)
 8007a80:	31000726 	beq	r6,r4,8007aa0 <_realloc_r+0x54c>
 8007a84:	98800604 	addi	r2,r19,24
 8007a88:	a5000404 	addi	r20,r20,16
 8007a8c:	003fbb06 	br	800797c <__flash_exceptions_start+0xf7e0695c>
 8007a90:	9009883a 	mov	r4,r18
 8007a94:	800d37c0 	call	800d37c <__malloc_unlock>
 8007a98:	0005883a 	mov	r2,zero
 8007a9c:	003ef206 	br	8007668 <__flash_exceptions_start+0xf7e06648>
 8007aa0:	a0c00417 	ldw	r3,16(r20)
 8007aa4:	a5000604 	addi	r20,r20,24
 8007aa8:	98800804 	addi	r2,r19,32
 8007aac:	98c00615 	stw	r3,24(r19)
 8007ab0:	a0ffff17 	ldw	r3,-4(r20)
 8007ab4:	98c00715 	stw	r3,28(r19)
 8007ab8:	003fb006 	br	800797c <__flash_exceptions_start+0xf7e0695c>

08007abc <__fpclassifyd>:
 8007abc:	00a00034 	movhi	r2,32768
 8007ac0:	10bfffc4 	addi	r2,r2,-1
 8007ac4:	2884703a 	and	r2,r5,r2
 8007ac8:	10000726 	beq	r2,zero,8007ae8 <__fpclassifyd+0x2c>
 8007acc:	00fffc34 	movhi	r3,65520
 8007ad0:	019ff834 	movhi	r6,32736
 8007ad4:	28c7883a 	add	r3,r5,r3
 8007ad8:	31bfffc4 	addi	r6,r6,-1
 8007adc:	30c00536 	bltu	r6,r3,8007af4 <__fpclassifyd+0x38>
 8007ae0:	00800104 	movi	r2,4
 8007ae4:	f800283a 	ret
 8007ae8:	2000021e 	bne	r4,zero,8007af4 <__fpclassifyd+0x38>
 8007aec:	00800084 	movi	r2,2
 8007af0:	f800283a 	ret
 8007af4:	00dffc34 	movhi	r3,32752
 8007af8:	019ff834 	movhi	r6,32736
 8007afc:	28cb883a 	add	r5,r5,r3
 8007b00:	31bfffc4 	addi	r6,r6,-1
 8007b04:	317ff62e 	bgeu	r6,r5,8007ae0 <__flash_exceptions_start+0xf7e06ac0>
 8007b08:	01400434 	movhi	r5,16
 8007b0c:	297fffc4 	addi	r5,r5,-1
 8007b10:	28800236 	bltu	r5,r2,8007b1c <__fpclassifyd+0x60>
 8007b14:	008000c4 	movi	r2,3
 8007b18:	f800283a 	ret
 8007b1c:	10c00226 	beq	r2,r3,8007b28 <__fpclassifyd+0x6c>
 8007b20:	0005883a 	mov	r2,zero
 8007b24:	f800283a 	ret
 8007b28:	2005003a 	cmpeq	r2,r4,zero
 8007b2c:	f800283a 	ret

08007b30 <_sbrk_r>:
 8007b30:	defffd04 	addi	sp,sp,-12
 8007b34:	dc000015 	stw	r16,0(sp)
 8007b38:	04020074 	movhi	r16,2049
 8007b3c:	dc400115 	stw	r17,4(sp)
 8007b40:	84009504 	addi	r16,r16,596
 8007b44:	2023883a 	mov	r17,r4
 8007b48:	2809883a 	mov	r4,r5
 8007b4c:	dfc00215 	stw	ra,8(sp)
 8007b50:	80000015 	stw	zero,0(r16)
 8007b54:	800d5480 	call	800d548 <sbrk>
 8007b58:	00ffffc4 	movi	r3,-1
 8007b5c:	10c00526 	beq	r2,r3,8007b74 <_sbrk_r+0x44>
 8007b60:	dfc00217 	ldw	ra,8(sp)
 8007b64:	dc400117 	ldw	r17,4(sp)
 8007b68:	dc000017 	ldw	r16,0(sp)
 8007b6c:	dec00304 	addi	sp,sp,12
 8007b70:	f800283a 	ret
 8007b74:	80c00017 	ldw	r3,0(r16)
 8007b78:	183ff926 	beq	r3,zero,8007b60 <__flash_exceptions_start+0xf7e06b40>
 8007b7c:	88c00015 	stw	r3,0(r17)
 8007b80:	003ff706 	br	8007b60 <__flash_exceptions_start+0xf7e06b40>

08007b84 <__sread>:
 8007b84:	defffe04 	addi	sp,sp,-8
 8007b88:	dc000015 	stw	r16,0(sp)
 8007b8c:	2821883a 	mov	r16,r5
 8007b90:	2940038f 	ldh	r5,14(r5)
 8007b94:	dfc00115 	stw	ra,4(sp)
 8007b98:	80097880 	call	8009788 <_read_r>
 8007b9c:	10000716 	blt	r2,zero,8007bbc <__sread+0x38>
 8007ba0:	80c01417 	ldw	r3,80(r16)
 8007ba4:	1887883a 	add	r3,r3,r2
 8007ba8:	80c01415 	stw	r3,80(r16)
 8007bac:	dfc00117 	ldw	ra,4(sp)
 8007bb0:	dc000017 	ldw	r16,0(sp)
 8007bb4:	dec00204 	addi	sp,sp,8
 8007bb8:	f800283a 	ret
 8007bbc:	80c0030b 	ldhu	r3,12(r16)
 8007bc0:	18fbffcc 	andi	r3,r3,61439
 8007bc4:	80c0030d 	sth	r3,12(r16)
 8007bc8:	dfc00117 	ldw	ra,4(sp)
 8007bcc:	dc000017 	ldw	r16,0(sp)
 8007bd0:	dec00204 	addi	sp,sp,8
 8007bd4:	f800283a 	ret

08007bd8 <__seofread>:
 8007bd8:	0005883a 	mov	r2,zero
 8007bdc:	f800283a 	ret

08007be0 <__swrite>:
 8007be0:	2880030b 	ldhu	r2,12(r5)
 8007be4:	defffb04 	addi	sp,sp,-20
 8007be8:	dcc00315 	stw	r19,12(sp)
 8007bec:	dc800215 	stw	r18,8(sp)
 8007bf0:	dc400115 	stw	r17,4(sp)
 8007bf4:	dc000015 	stw	r16,0(sp)
 8007bf8:	dfc00415 	stw	ra,16(sp)
 8007bfc:	10c0400c 	andi	r3,r2,256
 8007c00:	2821883a 	mov	r16,r5
 8007c04:	2027883a 	mov	r19,r4
 8007c08:	3025883a 	mov	r18,r6
 8007c0c:	3823883a 	mov	r17,r7
 8007c10:	18000526 	beq	r3,zero,8007c28 <__swrite+0x48>
 8007c14:	2940038f 	ldh	r5,14(r5)
 8007c18:	000d883a 	mov	r6,zero
 8007c1c:	01c00084 	movi	r7,2
 8007c20:	800972c0 	call	800972c <_lseek_r>
 8007c24:	8080030b 	ldhu	r2,12(r16)
 8007c28:	8140038f 	ldh	r5,14(r16)
 8007c2c:	10bbffcc 	andi	r2,r2,61439
 8007c30:	9809883a 	mov	r4,r19
 8007c34:	900d883a 	mov	r6,r18
 8007c38:	880f883a 	mov	r7,r17
 8007c3c:	8080030d 	sth	r2,12(r16)
 8007c40:	dfc00417 	ldw	ra,16(sp)
 8007c44:	dcc00317 	ldw	r19,12(sp)
 8007c48:	dc800217 	ldw	r18,8(sp)
 8007c4c:	dc400117 	ldw	r17,4(sp)
 8007c50:	dc000017 	ldw	r16,0(sp)
 8007c54:	dec00504 	addi	sp,sp,20
 8007c58:	80092281 	jmpi	8009228 <_write_r>

08007c5c <__sseek>:
 8007c5c:	defffe04 	addi	sp,sp,-8
 8007c60:	dc000015 	stw	r16,0(sp)
 8007c64:	2821883a 	mov	r16,r5
 8007c68:	2940038f 	ldh	r5,14(r5)
 8007c6c:	dfc00115 	stw	ra,4(sp)
 8007c70:	800972c0 	call	800972c <_lseek_r>
 8007c74:	00ffffc4 	movi	r3,-1
 8007c78:	10c00826 	beq	r2,r3,8007c9c <__sseek+0x40>
 8007c7c:	80c0030b 	ldhu	r3,12(r16)
 8007c80:	80801415 	stw	r2,80(r16)
 8007c84:	18c40014 	ori	r3,r3,4096
 8007c88:	80c0030d 	sth	r3,12(r16)
 8007c8c:	dfc00117 	ldw	ra,4(sp)
 8007c90:	dc000017 	ldw	r16,0(sp)
 8007c94:	dec00204 	addi	sp,sp,8
 8007c98:	f800283a 	ret
 8007c9c:	80c0030b 	ldhu	r3,12(r16)
 8007ca0:	18fbffcc 	andi	r3,r3,61439
 8007ca4:	80c0030d 	sth	r3,12(r16)
 8007ca8:	dfc00117 	ldw	ra,4(sp)
 8007cac:	dc000017 	ldw	r16,0(sp)
 8007cb0:	dec00204 	addi	sp,sp,8
 8007cb4:	f800283a 	ret

08007cb8 <__sclose>:
 8007cb8:	2940038f 	ldh	r5,14(r5)
 8007cbc:	80092841 	jmpi	8009284 <_close_r>

08007cc0 <strcmp>:
 8007cc0:	2144b03a 	or	r2,r4,r5
 8007cc4:	108000cc 	andi	r2,r2,3
 8007cc8:	1000171e 	bne	r2,zero,8007d28 <strcmp+0x68>
 8007ccc:	20800017 	ldw	r2,0(r4)
 8007cd0:	28c00017 	ldw	r3,0(r5)
 8007cd4:	10c0141e 	bne	r2,r3,8007d28 <strcmp+0x68>
 8007cd8:	027fbff4 	movhi	r9,65279
 8007cdc:	4a7fbfc4 	addi	r9,r9,-257
 8007ce0:	0086303a 	nor	r3,zero,r2
 8007ce4:	02202074 	movhi	r8,32897
 8007ce8:	1245883a 	add	r2,r2,r9
 8007cec:	42202004 	addi	r8,r8,-32640
 8007cf0:	10c4703a 	and	r2,r2,r3
 8007cf4:	1204703a 	and	r2,r2,r8
 8007cf8:	10000226 	beq	r2,zero,8007d04 <strcmp+0x44>
 8007cfc:	00001706 	br	8007d5c <strcmp+0x9c>
 8007d00:	1000161e 	bne	r2,zero,8007d5c <strcmp+0x9c>
 8007d04:	21000104 	addi	r4,r4,4
 8007d08:	20c00017 	ldw	r3,0(r4)
 8007d0c:	29400104 	addi	r5,r5,4
 8007d10:	29800017 	ldw	r6,0(r5)
 8007d14:	1a4f883a 	add	r7,r3,r9
 8007d18:	00c4303a 	nor	r2,zero,r3
 8007d1c:	3884703a 	and	r2,r7,r2
 8007d20:	1204703a 	and	r2,r2,r8
 8007d24:	19bff626 	beq	r3,r6,8007d00 <__flash_exceptions_start+0xf7e06ce0>
 8007d28:	20800007 	ldb	r2,0(r4)
 8007d2c:	1000051e 	bne	r2,zero,8007d44 <strcmp+0x84>
 8007d30:	00000606 	br	8007d4c <strcmp+0x8c>
 8007d34:	21000044 	addi	r4,r4,1
 8007d38:	20800007 	ldb	r2,0(r4)
 8007d3c:	29400044 	addi	r5,r5,1
 8007d40:	10000226 	beq	r2,zero,8007d4c <strcmp+0x8c>
 8007d44:	28c00007 	ldb	r3,0(r5)
 8007d48:	10fffa26 	beq	r2,r3,8007d34 <__flash_exceptions_start+0xf7e06d14>
 8007d4c:	20800003 	ldbu	r2,0(r4)
 8007d50:	28c00003 	ldbu	r3,0(r5)
 8007d54:	10c5c83a 	sub	r2,r2,r3
 8007d58:	f800283a 	ret
 8007d5c:	0005883a 	mov	r2,zero
 8007d60:	f800283a 	ret

08007d64 <__sprint_r.part.0>:
 8007d64:	28801917 	ldw	r2,100(r5)
 8007d68:	defff604 	addi	sp,sp,-40
 8007d6c:	dd400515 	stw	r21,20(sp)
 8007d70:	dcc00315 	stw	r19,12(sp)
 8007d74:	dfc00915 	stw	ra,36(sp)
 8007d78:	df000815 	stw	fp,32(sp)
 8007d7c:	ddc00715 	stw	r23,28(sp)
 8007d80:	dd800615 	stw	r22,24(sp)
 8007d84:	dd000415 	stw	r20,16(sp)
 8007d88:	dc800215 	stw	r18,8(sp)
 8007d8c:	dc400115 	stw	r17,4(sp)
 8007d90:	dc000015 	stw	r16,0(sp)
 8007d94:	1088000c 	andi	r2,r2,8192
 8007d98:	2827883a 	mov	r19,r5
 8007d9c:	302b883a 	mov	r21,r6
 8007da0:	10002d26 	beq	r2,zero,8007e58 <__sprint_r.part.0+0xf4>
 8007da4:	30800217 	ldw	r2,8(r6)
 8007da8:	35800017 	ldw	r22,0(r6)
 8007dac:	10002826 	beq	r2,zero,8007e50 <__sprint_r.part.0+0xec>
 8007db0:	2029883a 	mov	r20,r4
 8007db4:	b5c00104 	addi	r23,r22,4
 8007db8:	04bfffc4 	movi	r18,-1
 8007dbc:	bc400017 	ldw	r17,0(r23)
 8007dc0:	b4000017 	ldw	r16,0(r22)
 8007dc4:	0039883a 	mov	fp,zero
 8007dc8:	8822d0ba 	srli	r17,r17,2
 8007dcc:	04400316 	blt	zero,r17,8007ddc <__sprint_r.part.0+0x78>
 8007dd0:	00001806 	br	8007e34 <__sprint_r.part.0+0xd0>
 8007dd4:	84000104 	addi	r16,r16,4
 8007dd8:	8f001526 	beq	r17,fp,8007e30 <__sprint_r.part.0+0xcc>
 8007ddc:	81400017 	ldw	r5,0(r16)
 8007de0:	a009883a 	mov	r4,r20
 8007de4:	980d883a 	mov	r6,r19
 8007de8:	80094a00 	call	80094a0 <_fputwc_r>
 8007dec:	e7000044 	addi	fp,fp,1
 8007df0:	14bff81e 	bne	r2,r18,8007dd4 <__flash_exceptions_start+0xf7e06db4>
 8007df4:	9005883a 	mov	r2,r18
 8007df8:	a8000215 	stw	zero,8(r21)
 8007dfc:	a8000115 	stw	zero,4(r21)
 8007e00:	dfc00917 	ldw	ra,36(sp)
 8007e04:	df000817 	ldw	fp,32(sp)
 8007e08:	ddc00717 	ldw	r23,28(sp)
 8007e0c:	dd800617 	ldw	r22,24(sp)
 8007e10:	dd400517 	ldw	r21,20(sp)
 8007e14:	dd000417 	ldw	r20,16(sp)
 8007e18:	dcc00317 	ldw	r19,12(sp)
 8007e1c:	dc800217 	ldw	r18,8(sp)
 8007e20:	dc400117 	ldw	r17,4(sp)
 8007e24:	dc000017 	ldw	r16,0(sp)
 8007e28:	dec00a04 	addi	sp,sp,40
 8007e2c:	f800283a 	ret
 8007e30:	a8800217 	ldw	r2,8(r21)
 8007e34:	8c63883a 	add	r17,r17,r17
 8007e38:	8c63883a 	add	r17,r17,r17
 8007e3c:	1445c83a 	sub	r2,r2,r17
 8007e40:	a8800215 	stw	r2,8(r21)
 8007e44:	b5800204 	addi	r22,r22,8
 8007e48:	bdc00204 	addi	r23,r23,8
 8007e4c:	103fdb1e 	bne	r2,zero,8007dbc <__flash_exceptions_start+0xf7e06d9c>
 8007e50:	0005883a 	mov	r2,zero
 8007e54:	003fe806 	br	8007df8 <__flash_exceptions_start+0xf7e06dd8>
 8007e58:	800508c0 	call	800508c <__sfvwrite_r>
 8007e5c:	003fe606 	br	8007df8 <__flash_exceptions_start+0xf7e06dd8>

08007e60 <__sprint_r>:
 8007e60:	30c00217 	ldw	r3,8(r6)
 8007e64:	18000126 	beq	r3,zero,8007e6c <__sprint_r+0xc>
 8007e68:	8007d641 	jmpi	8007d64 <__sprint_r.part.0>
 8007e6c:	30000115 	stw	zero,4(r6)
 8007e70:	0005883a 	mov	r2,zero
 8007e74:	f800283a 	ret

08007e78 <___vfiprintf_internal_r>:
 8007e78:	deffca04 	addi	sp,sp,-216
 8007e7c:	dd803215 	stw	r22,200(sp)
 8007e80:	dd403115 	stw	r21,196(sp)
 8007e84:	dfc03515 	stw	ra,212(sp)
 8007e88:	df003415 	stw	fp,208(sp)
 8007e8c:	ddc03315 	stw	r23,204(sp)
 8007e90:	dd003015 	stw	r20,192(sp)
 8007e94:	dcc02f15 	stw	r19,188(sp)
 8007e98:	dc802e15 	stw	r18,184(sp)
 8007e9c:	dc402d15 	stw	r17,180(sp)
 8007ea0:	dc002c15 	stw	r16,176(sp)
 8007ea4:	d9002015 	stw	r4,128(sp)
 8007ea8:	d9c02215 	stw	r7,136(sp)
 8007eac:	282b883a 	mov	r21,r5
 8007eb0:	302d883a 	mov	r22,r6
 8007eb4:	20000226 	beq	r4,zero,8007ec0 <___vfiprintf_internal_r+0x48>
 8007eb8:	20800e17 	ldw	r2,56(r4)
 8007ebc:	1001b126 	beq	r2,zero,8008584 <___vfiprintf_internal_r+0x70c>
 8007ec0:	a880030b 	ldhu	r2,12(r21)
 8007ec4:	10c8000c 	andi	r3,r2,8192
 8007ec8:	1800061e 	bne	r3,zero,8007ee4 <___vfiprintf_internal_r+0x6c>
 8007ecc:	a9001917 	ldw	r4,100(r21)
 8007ed0:	00f7ffc4 	movi	r3,-8193
 8007ed4:	10880014 	ori	r2,r2,8192
 8007ed8:	20c6703a 	and	r3,r4,r3
 8007edc:	a880030d 	sth	r2,12(r21)
 8007ee0:	a8c01915 	stw	r3,100(r21)
 8007ee4:	10c0020c 	andi	r3,r2,8
 8007ee8:	18018926 	beq	r3,zero,8008510 <___vfiprintf_internal_r+0x698>
 8007eec:	a8c00417 	ldw	r3,16(r21)
 8007ef0:	18018726 	beq	r3,zero,8008510 <___vfiprintf_internal_r+0x698>
 8007ef4:	1080068c 	andi	r2,r2,26
 8007ef8:	00c00284 	movi	r3,10
 8007efc:	10c18c26 	beq	r2,r3,8008530 <___vfiprintf_internal_r+0x6b8>
 8007f00:	d8801a04 	addi	r2,sp,104
 8007f04:	d8c019c4 	addi	r3,sp,103
 8007f08:	07020074 	movhi	fp,2049
 8007f0c:	05c20074 	movhi	r23,2049
 8007f10:	10c9c83a 	sub	r4,r2,r3
 8007f14:	e73a9204 	addi	fp,fp,-5560
 8007f18:	bdfa8e04 	addi	r23,r23,-5576
 8007f1c:	d8801e15 	stw	r2,120(sp)
 8007f20:	d8c01f15 	stw	r3,124(sp)
 8007f24:	dec01a15 	stw	sp,104(sp)
 8007f28:	d8001c15 	stw	zero,112(sp)
 8007f2c:	d8001b15 	stw	zero,108(sp)
 8007f30:	d8002615 	stw	zero,152(sp)
 8007f34:	d8002315 	stw	zero,140(sp)
 8007f38:	d9002715 	stw	r4,156(sp)
 8007f3c:	d811883a 	mov	r8,sp
 8007f40:	dd402115 	stw	r21,132(sp)
 8007f44:	b021883a 	mov	r16,r22
 8007f48:	80800007 	ldb	r2,0(r16)
 8007f4c:	10037226 	beq	r2,zero,8008d18 <___vfiprintf_internal_r+0xea0>
 8007f50:	01000944 	movi	r4,37
 8007f54:	11037026 	beq	r2,r4,8008d18 <___vfiprintf_internal_r+0xea0>
 8007f58:	8005883a 	mov	r2,r16
 8007f5c:	00000106 	br	8007f64 <___vfiprintf_internal_r+0xec>
 8007f60:	19000326 	beq	r3,r4,8007f70 <___vfiprintf_internal_r+0xf8>
 8007f64:	10800044 	addi	r2,r2,1
 8007f68:	10c00007 	ldb	r3,0(r2)
 8007f6c:	183ffc1e 	bne	r3,zero,8007f60 <__flash_exceptions_start+0xf7e06f40>
 8007f70:	1425c83a 	sub	r18,r2,r16
 8007f74:	1023883a 	mov	r17,r2
 8007f78:	90001026 	beq	r18,zero,8007fbc <___vfiprintf_internal_r+0x144>
 8007f7c:	d8c01c17 	ldw	r3,112(sp)
 8007f80:	d8801b17 	ldw	r2,108(sp)
 8007f84:	44000015 	stw	r16,0(r8)
 8007f88:	90c7883a 	add	r3,r18,r3
 8007f8c:	10800044 	addi	r2,r2,1
 8007f90:	44800115 	stw	r18,4(r8)
 8007f94:	d8c01c15 	stw	r3,112(sp)
 8007f98:	d8801b15 	stw	r2,108(sp)
 8007f9c:	010001c4 	movi	r4,7
 8007fa0:	2080750e 	bge	r4,r2,8008178 <___vfiprintf_internal_r+0x300>
 8007fa4:	18036f1e 	bne	r3,zero,8008d64 <___vfiprintf_internal_r+0xeec>
 8007fa8:	d8802317 	ldw	r2,140(sp)
 8007fac:	d8001b15 	stw	zero,108(sp)
 8007fb0:	d811883a 	mov	r8,sp
 8007fb4:	1485883a 	add	r2,r2,r18
 8007fb8:	d8802315 	stw	r2,140(sp)
 8007fbc:	88800007 	ldb	r2,0(r17)
 8007fc0:	10041026 	beq	r2,zero,8009004 <___vfiprintf_internal_r+0x118c>
 8007fc4:	88c00047 	ldb	r3,1(r17)
 8007fc8:	88800044 	addi	r2,r17,1
 8007fcc:	d8001d85 	stb	zero,118(sp)
 8007fd0:	000f883a 	mov	r7,zero
 8007fd4:	027fffc4 	movi	r9,-1
 8007fd8:	0025883a 	mov	r18,zero
 8007fdc:	002b883a 	mov	r21,zero
 8007fe0:	01401604 	movi	r5,88
 8007fe4:	01800244 	movi	r6,9
 8007fe8:	03400a84 	movi	r13,42
 8007fec:	03001b04 	movi	r12,108
 8007ff0:	14000044 	addi	r16,r2,1
 8007ff4:	18bff804 	addi	r2,r3,-32
 8007ff8:	28825536 	bltu	r5,r2,8008950 <___vfiprintf_internal_r+0xad8>
 8007ffc:	100490ba 	slli	r2,r2,2
 8008000:	01020074 	movhi	r4,2049
 8008004:	21200504 	addi	r4,r4,-32748
 8008008:	1105883a 	add	r2,r2,r4
 800800c:	10800017 	ldw	r2,0(r2)
 8008010:	1000683a 	jmp	r2
 8008014:	08008714 	ori	zero,at,540
 8008018:	08008950 	cmplti	zero,at,549
 800801c:	08008950 	cmplti	zero,at,549
 8008020:	08008734 	orhi	zero,at,540
 8008024:	08008950 	cmplti	zero,at,549
 8008028:	08008950 	cmplti	zero,at,549
 800802c:	08008950 	cmplti	zero,at,549
 8008030:	08008950 	cmplti	zero,at,549
 8008034:	08008950 	cmplti	zero,at,549
 8008038:	08008950 	cmplti	zero,at,549
 800803c:	08008744 	addi	zero,at,541
 8008040:	08008764 	muli	zero,at,541
 8008044:	08008950 	cmplti	zero,at,549
 8008048:	0800858c 	andi	zero,at,534
 800804c:	08008678 	rdprs	zero,at,537
 8008050:	08008950 	cmplti	zero,at,549
 8008054:	080085f8 	rdprs	zero,at,535
 8008058:	08008608 	cmpgei	zero,at,536
 800805c:	08008608 	cmpgei	zero,at,536
 8008060:	08008608 	cmpgei	zero,at,536
 8008064:	08008608 	cmpgei	zero,at,536
 8008068:	08008608 	cmpgei	zero,at,536
 800806c:	08008608 	cmpgei	zero,at,536
 8008070:	08008608 	cmpgei	zero,at,536
 8008074:	08008608 	cmpgei	zero,at,536
 8008078:	08008608 	cmpgei	zero,at,536
 800807c:	08008950 	cmplti	zero,at,549
 8008080:	08008950 	cmplti	zero,at,549
 8008084:	08008950 	cmplti	zero,at,549
 8008088:	08008950 	cmplti	zero,at,549
 800808c:	08008950 	cmplti	zero,at,549
 8008090:	08008950 	cmplti	zero,at,549
 8008094:	08008950 	cmplti	zero,at,549
 8008098:	08008950 	cmplti	zero,at,549
 800809c:	08008950 	cmplti	zero,at,549
 80080a0:	08008950 	cmplti	zero,at,549
 80080a4:	08008634 	orhi	zero,at,536
 80080a8:	08008950 	cmplti	zero,at,549
 80080ac:	08008950 	cmplti	zero,at,549
 80080b0:	08008950 	cmplti	zero,at,549
 80080b4:	08008950 	cmplti	zero,at,549
 80080b8:	08008950 	cmplti	zero,at,549
 80080bc:	08008950 	cmplti	zero,at,549
 80080c0:	08008950 	cmplti	zero,at,549
 80080c4:	08008950 	cmplti	zero,at,549
 80080c8:	08008950 	cmplti	zero,at,549
 80080cc:	08008950 	cmplti	zero,at,549
 80080d0:	080081c0 	call	80081c <_start-0x77ff7e4>
 80080d4:	08008950 	cmplti	zero,at,549
 80080d8:	08008950 	cmplti	zero,at,549
 80080dc:	08008950 	cmplti	zero,at,549
 80080e0:	08008950 	cmplti	zero,at,549
 80080e4:	08008950 	cmplti	zero,at,549
 80080e8:	0800818c 	andi	zero,at,518
 80080ec:	08008950 	cmplti	zero,at,549
 80080f0:	08008950 	cmplti	zero,at,549
 80080f4:	080087d4 	ori	zero,at,543
 80080f8:	08008950 	cmplti	zero,at,549
 80080fc:	08008950 	cmplti	zero,at,549
 8008100:	08008950 	cmplti	zero,at,549
 8008104:	08008950 	cmplti	zero,at,549
 8008108:	08008950 	cmplti	zero,at,549
 800810c:	08008950 	cmplti	zero,at,549
 8008110:	08008950 	cmplti	zero,at,549
 8008114:	08008950 	cmplti	zero,at,549
 8008118:	08008950 	cmplti	zero,at,549
 800811c:	08008950 	cmplti	zero,at,549
 8008120:	08008774 	orhi	zero,at,541
 8008124:	080087a0 	cmpeqi	zero,at,542
 8008128:	08008950 	cmplti	zero,at,549
 800812c:	08008950 	cmplti	zero,at,549
 8008130:	08008950 	cmplti	zero,at,549
 8008134:	0800887c 	xorhi	zero,at,545
 8008138:	080087a0 	cmpeqi	zero,at,542
 800813c:	08008950 	cmplti	zero,at,549
 8008140:	08008950 	cmplti	zero,at,549
 8008144:	0800888c 	andi	zero,at,546
 8008148:	08008950 	cmplti	zero,at,549
 800814c:	080086b8 	rdprs	zero,at,538
 8008150:	080081c4 	addi	zero,at,519
 8008154:	080088a0 	cmpeqi	zero,at,546
 8008158:	080088e0 	cmpeqi	zero,at,547
 800815c:	08008950 	cmplti	zero,at,549
 8008160:	08008828 	cmpgeui	zero,at,544
 8008164:	08008950 	cmplti	zero,at,549
 8008168:	08008190 	cmplti	zero,at,518
 800816c:	08008950 	cmplti	zero,at,549
 8008170:	08008950 	cmplti	zero,at,549
 8008174:	080088f0 	cmpltui	zero,at,547
 8008178:	42000204 	addi	r8,r8,8
 800817c:	d8802317 	ldw	r2,140(sp)
 8008180:	1485883a 	add	r2,r2,r18
 8008184:	d8802315 	stw	r2,140(sp)
 8008188:	003f8c06 	br	8007fbc <__flash_exceptions_start+0xf7e06f9c>
 800818c:	ad400414 	ori	r21,r21,16
 8008190:	a880080c 	andi	r2,r21,32
 8008194:	1001e61e 	bne	r2,zero,8008930 <___vfiprintf_internal_r+0xab8>
 8008198:	a880040c 	andi	r2,r21,16
 800819c:	10034726 	beq	r2,zero,8008ebc <___vfiprintf_internal_r+0x1044>
 80081a0:	d8802217 	ldw	r2,136(sp)
 80081a4:	001b883a 	mov	r13,zero
 80081a8:	15800017 	ldw	r22,0(r2)
 80081ac:	10800104 	addi	r2,r2,4
 80081b0:	d8802215 	stw	r2,136(sp)
 80081b4:	b009883a 	mov	r4,r22
 80081b8:	00800044 	movi	r2,1
 80081bc:	00000c06 	br	80081f0 <___vfiprintf_internal_r+0x378>
 80081c0:	ad400414 	ori	r21,r21,16
 80081c4:	a880080c 	andi	r2,r21,32
 80081c8:	1001491e 	bne	r2,zero,80086f0 <___vfiprintf_internal_r+0x878>
 80081cc:	a880040c 	andi	r2,r21,16
 80081d0:	10032d26 	beq	r2,zero,8008e88 <___vfiprintf_internal_r+0x1010>
 80081d4:	d9002217 	ldw	r4,136(sp)
 80081d8:	001b883a 	mov	r13,zero
 80081dc:	0005883a 	mov	r2,zero
 80081e0:	25800017 	ldw	r22,0(r4)
 80081e4:	21000104 	addi	r4,r4,4
 80081e8:	d9002215 	stw	r4,136(sp)
 80081ec:	b009883a 	mov	r4,r22
 80081f0:	d8001d85 	stb	zero,118(sp)
 80081f4:	4827883a 	mov	r19,r9
 80081f8:	001d883a 	mov	r14,zero
 80081fc:	48000216 	blt	r9,zero,8008208 <___vfiprintf_internal_r+0x390>
 8008200:	00ffdfc4 	movi	r3,-129
 8008204:	a8ea703a 	and	r21,r21,r3
 8008208:	2002071e 	bne	r4,zero,8008a28 <___vfiprintf_internal_r+0xbb0>
 800820c:	4802ad26 	beq	r9,zero,8008cc4 <___vfiprintf_internal_r+0xe4c>
 8008210:	10803fcc 	andi	r2,r2,255
 8008214:	00c00044 	movi	r3,1
 8008218:	10c22b26 	beq	r2,r3,8008ac8 <___vfiprintf_internal_r+0xc50>
 800821c:	00c00084 	movi	r3,2
 8008220:	dd001a04 	addi	r20,sp,104
 8008224:	10c0dd1e 	bne	r2,r3,800859c <___vfiprintf_internal_r+0x724>
 8008228:	d9002617 	ldw	r4,152(sp)
 800822c:	b08003cc 	andi	r2,r22,15
 8008230:	6806973a 	slli	r3,r13,28
 8008234:	2085883a 	add	r2,r4,r2
 8008238:	b02cd13a 	srli	r22,r22,4
 800823c:	10800003 	ldbu	r2,0(r2)
 8008240:	681ad13a 	srli	r13,r13,4
 8008244:	a53fffc4 	addi	r20,r20,-1
 8008248:	1dacb03a 	or	r22,r3,r22
 800824c:	a0800005 	stb	r2,0(r20)
 8008250:	b344b03a 	or	r2,r22,r13
 8008254:	103ff51e 	bne	r2,zero,800822c <__flash_exceptions_start+0xf7e0720c>
 8008258:	d9001e17 	ldw	r4,120(sp)
 800825c:	2527c83a 	sub	r19,r4,r20
 8008260:	9823883a 	mov	r17,r19
 8008264:	9a40010e 	bge	r19,r9,800826c <___vfiprintf_internal_r+0x3f4>
 8008268:	4823883a 	mov	r17,r9
 800826c:	73803fcc 	andi	r14,r14,255
 8008270:	7380201c 	xori	r14,r14,128
 8008274:	73bfe004 	addi	r14,r14,-128
 8008278:	70000126 	beq	r14,zero,8008280 <___vfiprintf_internal_r+0x408>
 800827c:	8c400044 	addi	r17,r17,1
 8008280:	ab40008c 	andi	r13,r21,2
 8008284:	68000126 	beq	r13,zero,800828c <___vfiprintf_internal_r+0x414>
 8008288:	8c400084 	addi	r17,r17,2
 800828c:	ad80210c 	andi	r22,r21,132
 8008290:	b001c51e 	bne	r22,zero,80089a8 <___vfiprintf_internal_r+0xb30>
 8008294:	9447c83a 	sub	r3,r18,r17
 8008298:	00c1c30e 	bge	zero,r3,80089a8 <___vfiprintf_internal_r+0xb30>
 800829c:	01c00404 	movi	r7,16
 80082a0:	d8801c17 	ldw	r2,112(sp)
 80082a4:	38c37b0e 	bge	r7,r3,8009094 <___vfiprintf_internal_r+0x121c>
 80082a8:	01020074 	movhi	r4,2049
 80082ac:	213a9204 	addi	r4,r4,-5560
 80082b0:	dc002915 	stw	r16,164(sp)
 80082b4:	d9801b17 	ldw	r6,108(sp)
 80082b8:	d9002415 	stw	r4,144(sp)
 80082bc:	03c001c4 	movi	r15,7
 80082c0:	da402515 	stw	r9,148(sp)
 80082c4:	db402815 	stw	r13,160(sp)
 80082c8:	1821883a 	mov	r16,r3
 80082cc:	00000506 	br	80082e4 <___vfiprintf_internal_r+0x46c>
 80082d0:	31400084 	addi	r5,r6,2
 80082d4:	42000204 	addi	r8,r8,8
 80082d8:	200d883a 	mov	r6,r4
 80082dc:	843ffc04 	addi	r16,r16,-16
 80082e0:	3c000d0e 	bge	r7,r16,8008318 <___vfiprintf_internal_r+0x4a0>
 80082e4:	10800404 	addi	r2,r2,16
 80082e8:	31000044 	addi	r4,r6,1
 80082ec:	47000015 	stw	fp,0(r8)
 80082f0:	41c00115 	stw	r7,4(r8)
 80082f4:	d8801c15 	stw	r2,112(sp)
 80082f8:	d9001b15 	stw	r4,108(sp)
 80082fc:	793ff40e 	bge	r15,r4,80082d0 <__flash_exceptions_start+0xf7e072b0>
 8008300:	10019b1e 	bne	r2,zero,8008970 <___vfiprintf_internal_r+0xaf8>
 8008304:	843ffc04 	addi	r16,r16,-16
 8008308:	000d883a 	mov	r6,zero
 800830c:	01400044 	movi	r5,1
 8008310:	d811883a 	mov	r8,sp
 8008314:	3c3ff316 	blt	r7,r16,80082e4 <__flash_exceptions_start+0xf7e072c4>
 8008318:	8007883a 	mov	r3,r16
 800831c:	da402517 	ldw	r9,148(sp)
 8008320:	db402817 	ldw	r13,160(sp)
 8008324:	dc002917 	ldw	r16,164(sp)
 8008328:	d9002417 	ldw	r4,144(sp)
 800832c:	1885883a 	add	r2,r3,r2
 8008330:	40c00115 	stw	r3,4(r8)
 8008334:	41000015 	stw	r4,0(r8)
 8008338:	d8801c15 	stw	r2,112(sp)
 800833c:	d9401b15 	stw	r5,108(sp)
 8008340:	00c001c4 	movi	r3,7
 8008344:	19426a16 	blt	r3,r5,8008cf0 <___vfiprintf_internal_r+0xe78>
 8008348:	d8c01d87 	ldb	r3,118(sp)
 800834c:	42000204 	addi	r8,r8,8
 8008350:	29000044 	addi	r4,r5,1
 8008354:	1801991e 	bne	r3,zero,80089bc <___vfiprintf_internal_r+0xb44>
 8008358:	68000c26 	beq	r13,zero,800838c <___vfiprintf_internal_r+0x514>
 800835c:	d8c01d04 	addi	r3,sp,116
 8008360:	10800084 	addi	r2,r2,2
 8008364:	40c00015 	stw	r3,0(r8)
 8008368:	00c00084 	movi	r3,2
 800836c:	40c00115 	stw	r3,4(r8)
 8008370:	d8801c15 	stw	r2,112(sp)
 8008374:	d9001b15 	stw	r4,108(sp)
 8008378:	00c001c4 	movi	r3,7
 800837c:	19024c16 	blt	r3,r4,8008cb0 <___vfiprintf_internal_r+0xe38>
 8008380:	200b883a 	mov	r5,r4
 8008384:	42000204 	addi	r8,r8,8
 8008388:	21000044 	addi	r4,r4,1
 800838c:	00c02004 	movi	r3,128
 8008390:	b0c20126 	beq	r22,r3,8008b98 <___vfiprintf_internal_r+0xd20>
 8008394:	4cedc83a 	sub	r22,r9,r19
 8008398:	0580230e 	bge	zero,r22,8008428 <___vfiprintf_internal_r+0x5b0>
 800839c:	01c00404 	movi	r7,16
 80083a0:	3d83140e 	bge	r7,r22,8008ff4 <___vfiprintf_internal_r+0x117c>
 80083a4:	01020074 	movhi	r4,2049
 80083a8:	213a8e04 	addi	r4,r4,-5576
 80083ac:	d9002415 	stw	r4,144(sp)
 80083b0:	034001c4 	movi	r13,7
 80083b4:	00000506 	br	80083cc <___vfiprintf_internal_r+0x554>
 80083b8:	29000084 	addi	r4,r5,2
 80083bc:	42000204 	addi	r8,r8,8
 80083c0:	180b883a 	mov	r5,r3
 80083c4:	b5bffc04 	addi	r22,r22,-16
 80083c8:	3d800d0e 	bge	r7,r22,8008400 <___vfiprintf_internal_r+0x588>
 80083cc:	10800404 	addi	r2,r2,16
 80083d0:	28c00044 	addi	r3,r5,1
 80083d4:	45c00015 	stw	r23,0(r8)
 80083d8:	41c00115 	stw	r7,4(r8)
 80083dc:	d8801c15 	stw	r2,112(sp)
 80083e0:	d8c01b15 	stw	r3,108(sp)
 80083e4:	68fff40e 	bge	r13,r3,80083b8 <__flash_exceptions_start+0xf7e07398>
 80083e8:	1001811e 	bne	r2,zero,80089f0 <___vfiprintf_internal_r+0xb78>
 80083ec:	b5bffc04 	addi	r22,r22,-16
 80083f0:	01000044 	movi	r4,1
 80083f4:	000b883a 	mov	r5,zero
 80083f8:	d811883a 	mov	r8,sp
 80083fc:	3dbff316 	blt	r7,r22,80083cc <__flash_exceptions_start+0xf7e073ac>
 8008400:	d8c02417 	ldw	r3,144(sp)
 8008404:	1585883a 	add	r2,r2,r22
 8008408:	45800115 	stw	r22,4(r8)
 800840c:	40c00015 	stw	r3,0(r8)
 8008410:	d8801c15 	stw	r2,112(sp)
 8008414:	d9001b15 	stw	r4,108(sp)
 8008418:	00c001c4 	movi	r3,7
 800841c:	1901d016 	blt	r3,r4,8008b60 <___vfiprintf_internal_r+0xce8>
 8008420:	42000204 	addi	r8,r8,8
 8008424:	21000044 	addi	r4,r4,1
 8008428:	14c5883a 	add	r2,r2,r19
 800842c:	45000015 	stw	r20,0(r8)
 8008430:	44c00115 	stw	r19,4(r8)
 8008434:	d8801c15 	stw	r2,112(sp)
 8008438:	d9001b15 	stw	r4,108(sp)
 800843c:	00c001c4 	movi	r3,7
 8008440:	1901cf0e 	bge	r3,r4,8008b80 <___vfiprintf_internal_r+0xd08>
 8008444:	1002361e 	bne	r2,zero,8008d20 <___vfiprintf_internal_r+0xea8>
 8008448:	d8001b15 	stw	zero,108(sp)
 800844c:	aac0010c 	andi	r11,r21,4
 8008450:	58002826 	beq	r11,zero,80084f4 <___vfiprintf_internal_r+0x67c>
 8008454:	9467c83a 	sub	r19,r18,r17
 8008458:	d811883a 	mov	r8,sp
 800845c:	04c3340e 	bge	zero,r19,8009130 <___vfiprintf_internal_r+0x12b8>
 8008460:	01c00404 	movi	r7,16
 8008464:	3cc31b0e 	bge	r7,r19,80090d4 <___vfiprintf_internal_r+0x125c>
 8008468:	00c20074 	movhi	r3,2049
 800846c:	18fa9204 	addi	r3,r3,-5560
 8008470:	d9001b17 	ldw	r4,108(sp)
 8008474:	d8c02415 	stw	r3,144(sp)
 8008478:	382b883a 	mov	r21,r7
 800847c:	050001c4 	movi	r20,7
 8008480:	dd802017 	ldw	r22,128(sp)
 8008484:	00000506 	br	800849c <___vfiprintf_internal_r+0x624>
 8008488:	21400084 	addi	r5,r4,2
 800848c:	42000204 	addi	r8,r8,8
 8008490:	1809883a 	mov	r4,r3
 8008494:	9cfffc04 	addi	r19,r19,-16
 8008498:	acc00d0e 	bge	r21,r19,80084d0 <___vfiprintf_internal_r+0x658>
 800849c:	10800404 	addi	r2,r2,16
 80084a0:	20c00044 	addi	r3,r4,1
 80084a4:	47000015 	stw	fp,0(r8)
 80084a8:	45400115 	stw	r21,4(r8)
 80084ac:	d8801c15 	stw	r2,112(sp)
 80084b0:	d8c01b15 	stw	r3,108(sp)
 80084b4:	a0fff40e 	bge	r20,r3,8008488 <__flash_exceptions_start+0xf7e07468>
 80084b8:	10019f1e 	bne	r2,zero,8008b38 <___vfiprintf_internal_r+0xcc0>
 80084bc:	9cfffc04 	addi	r19,r19,-16
 80084c0:	01400044 	movi	r5,1
 80084c4:	0009883a 	mov	r4,zero
 80084c8:	d811883a 	mov	r8,sp
 80084cc:	acfff316 	blt	r21,r19,800849c <__flash_exceptions_start+0xf7e0747c>
 80084d0:	d8c02417 	ldw	r3,144(sp)
 80084d4:	14c5883a 	add	r2,r2,r19
 80084d8:	44c00115 	stw	r19,4(r8)
 80084dc:	40c00015 	stw	r3,0(r8)
 80084e0:	d8801c15 	stw	r2,112(sp)
 80084e4:	d9401b15 	stw	r5,108(sp)
 80084e8:	00c001c4 	movi	r3,7
 80084ec:	1941810e 	bge	r3,r5,8008af4 <___vfiprintf_internal_r+0xc7c>
 80084f0:	10017a1e 	bne	r2,zero,8008adc <___vfiprintf_internal_r+0xc64>
 80084f4:	8c82a416 	blt	r17,r18,8008f88 <___vfiprintf_internal_r+0x1110>
 80084f8:	d9002317 	ldw	r4,140(sp)
 80084fc:	2449883a 	add	r4,r4,r17
 8008500:	d9002315 	stw	r4,140(sp)
 8008504:	d8001b15 	stw	zero,108(sp)
 8008508:	d811883a 	mov	r8,sp
 800850c:	003e8e06 	br	8007f48 <__flash_exceptions_start+0xf7e06f28>
 8008510:	d9002017 	ldw	r4,128(sp)
 8008514:	a80b883a 	mov	r5,r21
 8008518:	8002bc80 	call	8002bc8 <__swsetup_r>
 800851c:	10000c1e 	bne	r2,zero,8008550 <___vfiprintf_internal_r+0x6d8>
 8008520:	a880030b 	ldhu	r2,12(r21)
 8008524:	00c00284 	movi	r3,10
 8008528:	1080068c 	andi	r2,r2,26
 800852c:	10fe741e 	bne	r2,r3,8007f00 <__flash_exceptions_start+0xf7e06ee0>
 8008530:	a880038f 	ldh	r2,14(r21)
 8008534:	103e7216 	blt	r2,zero,8007f00 <__flash_exceptions_start+0xf7e06ee0>
 8008538:	d9002017 	ldw	r4,128(sp)
 800853c:	d9c02217 	ldw	r7,136(sp)
 8008540:	a80b883a 	mov	r5,r21
 8008544:	b00d883a 	mov	r6,r22
 8008548:	800916c0 	call	800916c <__sbprintf>
 800854c:	00000106 	br	8008554 <___vfiprintf_internal_r+0x6dc>
 8008550:	00bfffc4 	movi	r2,-1
 8008554:	dfc03517 	ldw	ra,212(sp)
 8008558:	df003417 	ldw	fp,208(sp)
 800855c:	ddc03317 	ldw	r23,204(sp)
 8008560:	dd803217 	ldw	r22,200(sp)
 8008564:	dd403117 	ldw	r21,196(sp)
 8008568:	dd003017 	ldw	r20,192(sp)
 800856c:	dcc02f17 	ldw	r19,188(sp)
 8008570:	dc802e17 	ldw	r18,184(sp)
 8008574:	dc402d17 	ldw	r17,180(sp)
 8008578:	dc002c17 	ldw	r16,176(sp)
 800857c:	dec03604 	addi	sp,sp,216
 8008580:	f800283a 	ret
 8008584:	8004c280 	call	8004c28 <__sinit>
 8008588:	003e4d06 	br	8007ec0 <__flash_exceptions_start+0xf7e06ea0>
 800858c:	8005883a 	mov	r2,r16
 8008590:	ad400114 	ori	r21,r21,4
 8008594:	80c00007 	ldb	r3,0(r16)
 8008598:	003e9506 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 800859c:	b006d0fa 	srli	r3,r22,3
 80085a0:	6808977a 	slli	r4,r13,29
 80085a4:	681ad0fa 	srli	r13,r13,3
 80085a8:	b58001cc 	andi	r22,r22,7
 80085ac:	b0800c04 	addi	r2,r22,48
 80085b0:	a53fffc4 	addi	r20,r20,-1
 80085b4:	20ecb03a 	or	r22,r4,r3
 80085b8:	a0800005 	stb	r2,0(r20)
 80085bc:	b346b03a 	or	r3,r22,r13
 80085c0:	183ff61e 	bne	r3,zero,800859c <__flash_exceptions_start+0xf7e0757c>
 80085c4:	a8c0004c 	andi	r3,r21,1
 80085c8:	a009883a 	mov	r4,r20
 80085cc:	18013b26 	beq	r3,zero,8008abc <___vfiprintf_internal_r+0xc44>
 80085d0:	10803fcc 	andi	r2,r2,255
 80085d4:	1080201c 	xori	r2,r2,128
 80085d8:	10bfe004 	addi	r2,r2,-128
 80085dc:	00c00c04 	movi	r3,48
 80085e0:	10ff1d26 	beq	r2,r3,8008258 <__flash_exceptions_start+0xf7e07238>
 80085e4:	d8801e17 	ldw	r2,120(sp)
 80085e8:	a53fffc4 	addi	r20,r20,-1
 80085ec:	20ffffc5 	stb	r3,-1(r4)
 80085f0:	1527c83a 	sub	r19,r2,r20
 80085f4:	003f1a06 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 80085f8:	ad402014 	ori	r21,r21,128
 80085fc:	8005883a 	mov	r2,r16
 8008600:	80c00007 	ldb	r3,0(r16)
 8008604:	003e7a06 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8008608:	8005883a 	mov	r2,r16
 800860c:	0025883a 	mov	r18,zero
 8008610:	193ff404 	addi	r4,r3,-48
 8008614:	10c00007 	ldb	r3,0(r2)
 8008618:	948002a4 	muli	r18,r18,10
 800861c:	84000044 	addi	r16,r16,1
 8008620:	8005883a 	mov	r2,r16
 8008624:	9125883a 	add	r18,r18,r4
 8008628:	193ff404 	addi	r4,r3,-48
 800862c:	313ff92e 	bgeu	r6,r4,8008614 <__flash_exceptions_start+0xf7e075f4>
 8008630:	003e7006 	br	8007ff4 <__flash_exceptions_start+0xf7e06fd4>
 8008634:	ad400414 	ori	r21,r21,16
 8008638:	d9c01d85 	stb	r7,118(sp)
 800863c:	a880080c 	andi	r2,r21,32
 8008640:	d8c02217 	ldw	r3,136(sp)
 8008644:	10005a26 	beq	r2,zero,80087b0 <___vfiprintf_internal_r+0x938>
 8008648:	d9002217 	ldw	r4,136(sp)
 800864c:	18800117 	ldw	r2,4(r3)
 8008650:	1d800017 	ldw	r22,0(r3)
 8008654:	21000204 	addi	r4,r4,8
 8008658:	d9002215 	stw	r4,136(sp)
 800865c:	101b883a 	mov	r13,r2
 8008660:	1001f416 	blt	r2,zero,8008e34 <___vfiprintf_internal_r+0xfbc>
 8008664:	db801d83 	ldbu	r14,118(sp)
 8008668:	4827883a 	mov	r19,r9
 800866c:	00800044 	movi	r2,1
 8008670:	b348b03a 	or	r4,r22,r13
 8008674:	003ee106 	br	80081fc <__flash_exceptions_start+0xf7e071dc>
 8008678:	80c00007 	ldb	r3,0(r16)
 800867c:	80800044 	addi	r2,r16,1
 8008680:	1b42a326 	beq	r3,r13,8009110 <___vfiprintf_internal_r+0x1298>
 8008684:	193ff404 	addi	r4,r3,-48
 8008688:	1021883a 	mov	r16,r2
 800868c:	0013883a 	mov	r9,zero
 8008690:	313e5836 	bltu	r6,r4,8007ff4 <__flash_exceptions_start+0xf7e06fd4>
 8008694:	80c00007 	ldb	r3,0(r16)
 8008698:	4a4002a4 	muli	r9,r9,10
 800869c:	84000044 	addi	r16,r16,1
 80086a0:	2253883a 	add	r9,r4,r9
 80086a4:	193ff404 	addi	r4,r3,-48
 80086a8:	313ffa2e 	bgeu	r6,r4,8008694 <__flash_exceptions_start+0xf7e07674>
 80086ac:	483e510e 	bge	r9,zero,8007ff4 <__flash_exceptions_start+0xf7e06fd4>
 80086b0:	027fffc4 	movi	r9,-1
 80086b4:	003e4f06 	br	8007ff4 <__flash_exceptions_start+0xf7e06fd4>
 80086b8:	d9c01d85 	stb	r7,118(sp)
 80086bc:	a880080c 	andi	r2,r21,32
 80086c0:	10020826 	beq	r2,zero,8008ee4 <___vfiprintf_internal_r+0x106c>
 80086c4:	d8c02217 	ldw	r3,136(sp)
 80086c8:	d9002317 	ldw	r4,140(sp)
 80086cc:	18800017 	ldw	r2,0(r3)
 80086d0:	2007d7fa 	srai	r3,r4,31
 80086d4:	d9002217 	ldw	r4,136(sp)
 80086d8:	10c00115 	stw	r3,4(r2)
 80086dc:	21000104 	addi	r4,r4,4
 80086e0:	d9002215 	stw	r4,136(sp)
 80086e4:	d9002317 	ldw	r4,140(sp)
 80086e8:	11000015 	stw	r4,0(r2)
 80086ec:	003e1606 	br	8007f48 <__flash_exceptions_start+0xf7e06f28>
 80086f0:	d8802217 	ldw	r2,136(sp)
 80086f4:	d8c02217 	ldw	r3,136(sp)
 80086f8:	15800017 	ldw	r22,0(r2)
 80086fc:	13400117 	ldw	r13,4(r2)
 8008700:	18c00204 	addi	r3,r3,8
 8008704:	0005883a 	mov	r2,zero
 8008708:	d8c02215 	stw	r3,136(sp)
 800870c:	b348b03a 	or	r4,r22,r13
 8008710:	003eb706 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008714:	38803fcc 	andi	r2,r7,255
 8008718:	1080201c 	xori	r2,r2,128
 800871c:	10bfe004 	addi	r2,r2,-128
 8008720:	1001e31e 	bne	r2,zero,8008eb0 <___vfiprintf_internal_r+0x1038>
 8008724:	8005883a 	mov	r2,r16
 8008728:	01c00804 	movi	r7,32
 800872c:	80c00007 	ldb	r3,0(r16)
 8008730:	003e2f06 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8008734:	ad400054 	ori	r21,r21,1
 8008738:	8005883a 	mov	r2,r16
 800873c:	80c00007 	ldb	r3,0(r16)
 8008740:	003e2b06 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8008744:	d8c02217 	ldw	r3,136(sp)
 8008748:	1c800017 	ldw	r18,0(r3)
 800874c:	18c00104 	addi	r3,r3,4
 8008750:	90023816 	blt	r18,zero,8009034 <___vfiprintf_internal_r+0x11bc>
 8008754:	d8c02215 	stw	r3,136(sp)
 8008758:	8005883a 	mov	r2,r16
 800875c:	80c00007 	ldb	r3,0(r16)
 8008760:	003e2306 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8008764:	8005883a 	mov	r2,r16
 8008768:	01c00ac4 	movi	r7,43
 800876c:	80c00007 	ldb	r3,0(r16)
 8008770:	003e1f06 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8008774:	d8c02217 	ldw	r3,136(sp)
 8008778:	04400044 	movi	r17,1
 800877c:	d8001d85 	stb	zero,118(sp)
 8008780:	18800017 	ldw	r2,0(r3)
 8008784:	18c00104 	addi	r3,r3,4
 8008788:	d8c02215 	stw	r3,136(sp)
 800878c:	d8801005 	stb	r2,64(sp)
 8008790:	8827883a 	mov	r19,r17
 8008794:	dd001004 	addi	r20,sp,64
 8008798:	0013883a 	mov	r9,zero
 800879c:	003eb806 	br	8008280 <__flash_exceptions_start+0xf7e07260>
 80087a0:	d9c01d85 	stb	r7,118(sp)
 80087a4:	a880080c 	andi	r2,r21,32
 80087a8:	d8c02217 	ldw	r3,136(sp)
 80087ac:	103fa61e 	bne	r2,zero,8008648 <__flash_exceptions_start+0xf7e07628>
 80087b0:	a880040c 	andi	r2,r21,16
 80087b4:	1001dd26 	beq	r2,zero,8008f2c <___vfiprintf_internal_r+0x10b4>
 80087b8:	1d800017 	ldw	r22,0(r3)
 80087bc:	d8802217 	ldw	r2,136(sp)
 80087c0:	b01bd7fa 	srai	r13,r22,31
 80087c4:	10800104 	addi	r2,r2,4
 80087c8:	d8802215 	stw	r2,136(sp)
 80087cc:	6805883a 	mov	r2,r13
 80087d0:	003fa306 	br	8008660 <__flash_exceptions_start+0xf7e07640>
 80087d4:	00820074 	movhi	r2,2049
 80087d8:	10ba2804 	addi	r2,r2,-5984
 80087dc:	d8802615 	stw	r2,152(sp)
 80087e0:	d9c01d85 	stb	r7,118(sp)
 80087e4:	a880080c 	andi	r2,r21,32
 80087e8:	10004726 	beq	r2,zero,8008908 <___vfiprintf_internal_r+0xa90>
 80087ec:	d9002217 	ldw	r4,136(sp)
 80087f0:	25800017 	ldw	r22,0(r4)
 80087f4:	23400117 	ldw	r13,4(r4)
 80087f8:	21000204 	addi	r4,r4,8
 80087fc:	d9002215 	stw	r4,136(sp)
 8008800:	a880004c 	andi	r2,r21,1
 8008804:	10014e26 	beq	r2,zero,8008d40 <___vfiprintf_internal_r+0xec8>
 8008808:	b348b03a 	or	r4,r22,r13
 800880c:	20019c26 	beq	r4,zero,8008e80 <___vfiprintf_internal_r+0x1008>
 8008810:	00800c04 	movi	r2,48
 8008814:	d8801d05 	stb	r2,116(sp)
 8008818:	d8c01d45 	stb	r3,117(sp)
 800881c:	ad400094 	ori	r21,r21,2
 8008820:	00800084 	movi	r2,2
 8008824:	003e7206 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008828:	d8c02217 	ldw	r3,136(sp)
 800882c:	d8001d85 	stb	zero,118(sp)
 8008830:	1d000017 	ldw	r20,0(r3)
 8008834:	1d800104 	addi	r22,r3,4
 8008838:	a0021c26 	beq	r20,zero,80090ac <___vfiprintf_internal_r+0x1234>
 800883c:	a009883a 	mov	r4,r20
 8008840:	48020016 	blt	r9,zero,8009044 <___vfiprintf_internal_r+0x11cc>
 8008844:	480d883a 	mov	r6,r9
 8008848:	000b883a 	mov	r5,zero
 800884c:	da002a15 	stw	r8,168(sp)
 8008850:	da402b15 	stw	r9,172(sp)
 8008854:	80061140 	call	8006114 <memchr>
 8008858:	da002a17 	ldw	r8,168(sp)
 800885c:	da402b17 	ldw	r9,172(sp)
 8008860:	10022226 	beq	r2,zero,80090ec <___vfiprintf_internal_r+0x1274>
 8008864:	1527c83a 	sub	r19,r2,r20
 8008868:	4cc1c916 	blt	r9,r19,8008f90 <___vfiprintf_internal_r+0x1118>
 800886c:	db801d83 	ldbu	r14,118(sp)
 8008870:	dd802215 	stw	r22,136(sp)
 8008874:	0013883a 	mov	r9,zero
 8008878:	003e7906 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 800887c:	ad401014 	ori	r21,r21,64
 8008880:	8005883a 	mov	r2,r16
 8008884:	80c00007 	ldb	r3,0(r16)
 8008888:	003dd906 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 800888c:	80c00007 	ldb	r3,0(r16)
 8008890:	8005883a 	mov	r2,r16
 8008894:	1b01e326 	beq	r3,r12,8009024 <___vfiprintf_internal_r+0x11ac>
 8008898:	ad400414 	ori	r21,r21,16
 800889c:	003dd406 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 80088a0:	d9002217 	ldw	r4,136(sp)
 80088a4:	00800c04 	movi	r2,48
 80088a8:	d8801d05 	stb	r2,116(sp)
 80088ac:	25800017 	ldw	r22,0(r4)
 80088b0:	00801e04 	movi	r2,120
 80088b4:	d8801d45 	stb	r2,117(sp)
 80088b8:	00820074 	movhi	r2,2049
 80088bc:	21000104 	addi	r4,r4,4
 80088c0:	10ba2d04 	addi	r2,r2,-5964
 80088c4:	d9002215 	stw	r4,136(sp)
 80088c8:	d8802615 	stw	r2,152(sp)
 80088cc:	001b883a 	mov	r13,zero
 80088d0:	ad400094 	ori	r21,r21,2
 80088d4:	00800084 	movi	r2,2
 80088d8:	b009883a 	mov	r4,r22
 80088dc:	003e4406 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 80088e0:	ad400814 	ori	r21,r21,32
 80088e4:	8005883a 	mov	r2,r16
 80088e8:	80c00007 	ldb	r3,0(r16)
 80088ec:	003dc006 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 80088f0:	00820074 	movhi	r2,2049
 80088f4:	10ba2d04 	addi	r2,r2,-5964
 80088f8:	d8802615 	stw	r2,152(sp)
 80088fc:	d9c01d85 	stb	r7,118(sp)
 8008900:	a880080c 	andi	r2,r21,32
 8008904:	103fb91e 	bne	r2,zero,80087ec <__flash_exceptions_start+0xf7e077cc>
 8008908:	a880040c 	andi	r2,r21,16
 800890c:	10010f1e 	bne	r2,zero,8008d4c <___vfiprintf_internal_r+0xed4>
 8008910:	a880100c 	andi	r2,r21,64
 8008914:	10010d26 	beq	r2,zero,8008d4c <___vfiprintf_internal_r+0xed4>
 8008918:	d9002217 	ldw	r4,136(sp)
 800891c:	001b883a 	mov	r13,zero
 8008920:	2580000b 	ldhu	r22,0(r4)
 8008924:	21000104 	addi	r4,r4,4
 8008928:	d9002215 	stw	r4,136(sp)
 800892c:	003fb406 	br	8008800 <__flash_exceptions_start+0xf7e077e0>
 8008930:	d9002217 	ldw	r4,136(sp)
 8008934:	00800044 	movi	r2,1
 8008938:	25800017 	ldw	r22,0(r4)
 800893c:	23400117 	ldw	r13,4(r4)
 8008940:	21000204 	addi	r4,r4,8
 8008944:	d9002215 	stw	r4,136(sp)
 8008948:	b348b03a 	or	r4,r22,r13
 800894c:	003e2806 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008950:	d9c01d85 	stb	r7,118(sp)
 8008954:	1801ab26 	beq	r3,zero,8009004 <___vfiprintf_internal_r+0x118c>
 8008958:	04400044 	movi	r17,1
 800895c:	d8c01005 	stb	r3,64(sp)
 8008960:	d8001d85 	stb	zero,118(sp)
 8008964:	8827883a 	mov	r19,r17
 8008968:	dd001004 	addi	r20,sp,64
 800896c:	003f8a06 	br	8008798 <__flash_exceptions_start+0xf7e07778>
 8008970:	d9002017 	ldw	r4,128(sp)
 8008974:	d9402117 	ldw	r5,132(sp)
 8008978:	d9801a04 	addi	r6,sp,104
 800897c:	d9c02b15 	stw	r7,172(sp)
 8008980:	dbc02a15 	stw	r15,168(sp)
 8008984:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008988:	d9c02b17 	ldw	r7,172(sp)
 800898c:	dbc02a17 	ldw	r15,168(sp)
 8008990:	1000631e 	bne	r2,zero,8008b20 <___vfiprintf_internal_r+0xca8>
 8008994:	d9801b17 	ldw	r6,108(sp)
 8008998:	d8801c17 	ldw	r2,112(sp)
 800899c:	d811883a 	mov	r8,sp
 80089a0:	31400044 	addi	r5,r6,1
 80089a4:	003e4d06 	br	80082dc <__flash_exceptions_start+0xf7e072bc>
 80089a8:	d9401b17 	ldw	r5,108(sp)
 80089ac:	d8801c17 	ldw	r2,112(sp)
 80089b0:	29000044 	addi	r4,r5,1
 80089b4:	d8c01d87 	ldb	r3,118(sp)
 80089b8:	183e6726 	beq	r3,zero,8008358 <__flash_exceptions_start+0xf7e07338>
 80089bc:	00c00044 	movi	r3,1
 80089c0:	d9401d84 	addi	r5,sp,118
 80089c4:	10c5883a 	add	r2,r2,r3
 80089c8:	41400015 	stw	r5,0(r8)
 80089cc:	40c00115 	stw	r3,4(r8)
 80089d0:	d8801c15 	stw	r2,112(sp)
 80089d4:	d9001b15 	stw	r4,108(sp)
 80089d8:	014001c4 	movi	r5,7
 80089dc:	2900ab16 	blt	r5,r4,8008c8c <___vfiprintf_internal_r+0xe14>
 80089e0:	200b883a 	mov	r5,r4
 80089e4:	42000204 	addi	r8,r8,8
 80089e8:	21000044 	addi	r4,r4,1
 80089ec:	003e5a06 	br	8008358 <__flash_exceptions_start+0xf7e07338>
 80089f0:	d9002017 	ldw	r4,128(sp)
 80089f4:	d9402117 	ldw	r5,132(sp)
 80089f8:	d9801a04 	addi	r6,sp,104
 80089fc:	d9c02b15 	stw	r7,172(sp)
 8008a00:	db402a15 	stw	r13,168(sp)
 8008a04:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008a08:	d9c02b17 	ldw	r7,172(sp)
 8008a0c:	db402a17 	ldw	r13,168(sp)
 8008a10:	1000431e 	bne	r2,zero,8008b20 <___vfiprintf_internal_r+0xca8>
 8008a14:	d9401b17 	ldw	r5,108(sp)
 8008a18:	d8801c17 	ldw	r2,112(sp)
 8008a1c:	d811883a 	mov	r8,sp
 8008a20:	29000044 	addi	r4,r5,1
 8008a24:	003e6706 	br	80083c4 <__flash_exceptions_start+0xf7e073a4>
 8008a28:	10803fcc 	andi	r2,r2,255
 8008a2c:	00c00044 	movi	r3,1
 8008a30:	10fdfa1e 	bne	r2,r3,800821c <__flash_exceptions_start+0xf7e071fc>
 8008a34:	6800021e 	bne	r13,zero,8008a40 <___vfiprintf_internal_r+0xbc8>
 8008a38:	00800244 	movi	r2,9
 8008a3c:	1580222e 	bgeu	r2,r22,8008ac8 <___vfiprintf_internal_r+0xc50>
 8008a40:	dc802415 	stw	r18,144(sp)
 8008a44:	dc002515 	stw	r16,148(sp)
 8008a48:	dc401a04 	addi	r17,sp,104
 8008a4c:	b021883a 	mov	r16,r22
 8008a50:	4827883a 	mov	r19,r9
 8008a54:	4029883a 	mov	r20,r8
 8008a58:	702d883a 	mov	r22,r14
 8008a5c:	6825883a 	mov	r18,r13
 8008a60:	8009883a 	mov	r4,r16
 8008a64:	900b883a 	mov	r5,r18
 8008a68:	01800284 	movi	r6,10
 8008a6c:	000f883a 	mov	r7,zero
 8008a70:	800a0e00 	call	800a0e0 <__umoddi3>
 8008a74:	10800c04 	addi	r2,r2,48
 8008a78:	8c7fffc4 	addi	r17,r17,-1
 8008a7c:	8009883a 	mov	r4,r16
 8008a80:	900b883a 	mov	r5,r18
 8008a84:	01800284 	movi	r6,10
 8008a88:	000f883a 	mov	r7,zero
 8008a8c:	88800005 	stb	r2,0(r17)
 8008a90:	8009b200 	call	8009b20 <__udivdi3>
 8008a94:	1021883a 	mov	r16,r2
 8008a98:	10c4b03a 	or	r2,r2,r3
 8008a9c:	1825883a 	mov	r18,r3
 8008aa0:	103fef1e 	bne	r2,zero,8008a60 <__flash_exceptions_start+0xf7e07a40>
 8008aa4:	dc802417 	ldw	r18,144(sp)
 8008aa8:	dc002517 	ldw	r16,148(sp)
 8008aac:	a011883a 	mov	r8,r20
 8008ab0:	9813883a 	mov	r9,r19
 8008ab4:	b01d883a 	mov	r14,r22
 8008ab8:	8829883a 	mov	r20,r17
 8008abc:	d8c01e17 	ldw	r3,120(sp)
 8008ac0:	1d27c83a 	sub	r19,r3,r20
 8008ac4:	003de606 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 8008ac8:	b5800c04 	addi	r22,r22,48
 8008acc:	dd8019c5 	stb	r22,103(sp)
 8008ad0:	dcc02717 	ldw	r19,156(sp)
 8008ad4:	dd0019c4 	addi	r20,sp,103
 8008ad8:	003de106 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 8008adc:	d9002017 	ldw	r4,128(sp)
 8008ae0:	d9402117 	ldw	r5,132(sp)
 8008ae4:	d9801a04 	addi	r6,sp,104
 8008ae8:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008aec:	10000c1e 	bne	r2,zero,8008b20 <___vfiprintf_internal_r+0xca8>
 8008af0:	d8801c17 	ldw	r2,112(sp)
 8008af4:	8c80010e 	bge	r17,r18,8008afc <___vfiprintf_internal_r+0xc84>
 8008af8:	9023883a 	mov	r17,r18
 8008afc:	d8c02317 	ldw	r3,140(sp)
 8008b00:	1c47883a 	add	r3,r3,r17
 8008b04:	d8c02315 	stw	r3,140(sp)
 8008b08:	103e7e26 	beq	r2,zero,8008504 <__flash_exceptions_start+0xf7e074e4>
 8008b0c:	d9002017 	ldw	r4,128(sp)
 8008b10:	d9402117 	ldw	r5,132(sp)
 8008b14:	d9801a04 	addi	r6,sp,104
 8008b18:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008b1c:	103e7926 	beq	r2,zero,8008504 <__flash_exceptions_start+0xf7e074e4>
 8008b20:	dd402117 	ldw	r21,132(sp)
 8008b24:	a880030b 	ldhu	r2,12(r21)
 8008b28:	1080100c 	andi	r2,r2,64
 8008b2c:	103e881e 	bne	r2,zero,8008550 <__flash_exceptions_start+0xf7e07530>
 8008b30:	d8802317 	ldw	r2,140(sp)
 8008b34:	003e8706 	br	8008554 <__flash_exceptions_start+0xf7e07534>
 8008b38:	d9402117 	ldw	r5,132(sp)
 8008b3c:	b009883a 	mov	r4,r22
 8008b40:	d9801a04 	addi	r6,sp,104
 8008b44:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008b48:	103ff51e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008b4c:	d9001b17 	ldw	r4,108(sp)
 8008b50:	d8801c17 	ldw	r2,112(sp)
 8008b54:	d811883a 	mov	r8,sp
 8008b58:	21400044 	addi	r5,r4,1
 8008b5c:	003e4d06 	br	8008494 <__flash_exceptions_start+0xf7e07474>
 8008b60:	1000aa1e 	bne	r2,zero,8008e0c <___vfiprintf_internal_r+0xf94>
 8008b64:	00c00044 	movi	r3,1
 8008b68:	9805883a 	mov	r2,r19
 8008b6c:	dd000015 	stw	r20,0(sp)
 8008b70:	dcc00115 	stw	r19,4(sp)
 8008b74:	dcc01c15 	stw	r19,112(sp)
 8008b78:	d8c01b15 	stw	r3,108(sp)
 8008b7c:	d811883a 	mov	r8,sp
 8008b80:	42000204 	addi	r8,r8,8
 8008b84:	aac0010c 	andi	r11,r21,4
 8008b88:	583fda26 	beq	r11,zero,8008af4 <__flash_exceptions_start+0xf7e07ad4>
 8008b8c:	9467c83a 	sub	r19,r18,r17
 8008b90:	04fe3316 	blt	zero,r19,8008460 <__flash_exceptions_start+0xf7e07440>
 8008b94:	003fd706 	br	8008af4 <__flash_exceptions_start+0xf7e07ad4>
 8008b98:	946dc83a 	sub	r22,r18,r17
 8008b9c:	05bdfd0e 	bge	zero,r22,8008394 <__flash_exceptions_start+0xf7e07374>
 8008ba0:	00c20074 	movhi	r3,2049
 8008ba4:	18fa8e04 	addi	r3,r3,-5576
 8008ba8:	01c00404 	movi	r7,16
 8008bac:	d8c02415 	stw	r3,144(sp)
 8008bb0:	3d81530e 	bge	r7,r22,8009100 <___vfiprintf_internal_r+0x1288>
 8008bb4:	8007883a 	mov	r3,r16
 8008bb8:	034001c4 	movi	r13,7
 8008bbc:	b021883a 	mov	r16,r22
 8008bc0:	da402515 	stw	r9,148(sp)
 8008bc4:	182d883a 	mov	r22,r3
 8008bc8:	00000506 	br	8008be0 <___vfiprintf_internal_r+0xd68>
 8008bcc:	29800084 	addi	r6,r5,2
 8008bd0:	42000204 	addi	r8,r8,8
 8008bd4:	180b883a 	mov	r5,r3
 8008bd8:	843ffc04 	addi	r16,r16,-16
 8008bdc:	3c000d0e 	bge	r7,r16,8008c14 <___vfiprintf_internal_r+0xd9c>
 8008be0:	10800404 	addi	r2,r2,16
 8008be4:	28c00044 	addi	r3,r5,1
 8008be8:	45c00015 	stw	r23,0(r8)
 8008bec:	41c00115 	stw	r7,4(r8)
 8008bf0:	d8801c15 	stw	r2,112(sp)
 8008bf4:	d8c01b15 	stw	r3,108(sp)
 8008bf8:	68fff40e 	bge	r13,r3,8008bcc <__flash_exceptions_start+0xf7e07bac>
 8008bfc:	1000151e 	bne	r2,zero,8008c54 <___vfiprintf_internal_r+0xddc>
 8008c00:	843ffc04 	addi	r16,r16,-16
 8008c04:	01800044 	movi	r6,1
 8008c08:	000b883a 	mov	r5,zero
 8008c0c:	d811883a 	mov	r8,sp
 8008c10:	3c3ff316 	blt	r7,r16,8008be0 <__flash_exceptions_start+0xf7e07bc0>
 8008c14:	da402517 	ldw	r9,148(sp)
 8008c18:	b007883a 	mov	r3,r22
 8008c1c:	802d883a 	mov	r22,r16
 8008c20:	1821883a 	mov	r16,r3
 8008c24:	d8c02417 	ldw	r3,144(sp)
 8008c28:	1585883a 	add	r2,r2,r22
 8008c2c:	45800115 	stw	r22,4(r8)
 8008c30:	40c00015 	stw	r3,0(r8)
 8008c34:	d8801c15 	stw	r2,112(sp)
 8008c38:	d9801b15 	stw	r6,108(sp)
 8008c3c:	00c001c4 	movi	r3,7
 8008c40:	19806d16 	blt	r3,r6,8008df8 <___vfiprintf_internal_r+0xf80>
 8008c44:	42000204 	addi	r8,r8,8
 8008c48:	31000044 	addi	r4,r6,1
 8008c4c:	300b883a 	mov	r5,r6
 8008c50:	003dd006 	br	8008394 <__flash_exceptions_start+0xf7e07374>
 8008c54:	d9002017 	ldw	r4,128(sp)
 8008c58:	d9402117 	ldw	r5,132(sp)
 8008c5c:	d9801a04 	addi	r6,sp,104
 8008c60:	d9c02b15 	stw	r7,172(sp)
 8008c64:	db402a15 	stw	r13,168(sp)
 8008c68:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008c6c:	d9c02b17 	ldw	r7,172(sp)
 8008c70:	db402a17 	ldw	r13,168(sp)
 8008c74:	103faa1e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008c78:	d9401b17 	ldw	r5,108(sp)
 8008c7c:	d8801c17 	ldw	r2,112(sp)
 8008c80:	d811883a 	mov	r8,sp
 8008c84:	29800044 	addi	r6,r5,1
 8008c88:	003fd306 	br	8008bd8 <__flash_exceptions_start+0xf7e07bb8>
 8008c8c:	1000401e 	bne	r2,zero,8008d90 <___vfiprintf_internal_r+0xf18>
 8008c90:	68003b26 	beq	r13,zero,8008d80 <___vfiprintf_internal_r+0xf08>
 8008c94:	d9001d04 	addi	r4,sp,116
 8008c98:	00800084 	movi	r2,2
 8008c9c:	d9000015 	stw	r4,0(sp)
 8008ca0:	d8800115 	stw	r2,4(sp)
 8008ca4:	1809883a 	mov	r4,r3
 8008ca8:	d811883a 	mov	r8,sp
 8008cac:	003db406 	br	8008380 <__flash_exceptions_start+0xf7e07360>
 8008cb0:	1000451e 	bne	r2,zero,8008dc8 <___vfiprintf_internal_r+0xf50>
 8008cb4:	01000044 	movi	r4,1
 8008cb8:	000b883a 	mov	r5,zero
 8008cbc:	d811883a 	mov	r8,sp
 8008cc0:	003db206 	br	800838c <__flash_exceptions_start+0xf7e0736c>
 8008cc4:	10803fcc 	andi	r2,r2,255
 8008cc8:	1000071e 	bne	r2,zero,8008ce8 <___vfiprintf_internal_r+0xe70>
 8008ccc:	a880004c 	andi	r2,r21,1
 8008cd0:	10000526 	beq	r2,zero,8008ce8 <___vfiprintf_internal_r+0xe70>
 8008cd4:	00800c04 	movi	r2,48
 8008cd8:	d88019c5 	stb	r2,103(sp)
 8008cdc:	dcc02717 	ldw	r19,156(sp)
 8008ce0:	dd0019c4 	addi	r20,sp,103
 8008ce4:	003d5e06 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 8008ce8:	dd001a04 	addi	r20,sp,104
 8008cec:	003d5c06 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 8008cf0:	1000971e 	bne	r2,zero,8008f50 <___vfiprintf_internal_r+0x10d8>
 8008cf4:	d8c01d87 	ldb	r3,118(sp)
 8008cf8:	18005826 	beq	r3,zero,8008e5c <___vfiprintf_internal_r+0xfe4>
 8008cfc:	00800044 	movi	r2,1
 8008d00:	d8c01d84 	addi	r3,sp,118
 8008d04:	1009883a 	mov	r4,r2
 8008d08:	d8c00015 	stw	r3,0(sp)
 8008d0c:	d8800115 	stw	r2,4(sp)
 8008d10:	d811883a 	mov	r8,sp
 8008d14:	003f3206 	br	80089e0 <__flash_exceptions_start+0xf7e079c0>
 8008d18:	8023883a 	mov	r17,r16
 8008d1c:	003ca706 	br	8007fbc <__flash_exceptions_start+0xf7e06f9c>
 8008d20:	d9002017 	ldw	r4,128(sp)
 8008d24:	d9402117 	ldw	r5,132(sp)
 8008d28:	d9801a04 	addi	r6,sp,104
 8008d2c:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008d30:	103f7b1e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008d34:	d8801c17 	ldw	r2,112(sp)
 8008d38:	d811883a 	mov	r8,sp
 8008d3c:	003f9106 	br	8008b84 <__flash_exceptions_start+0xf7e07b64>
 8008d40:	00800084 	movi	r2,2
 8008d44:	b348b03a 	or	r4,r22,r13
 8008d48:	003d2906 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008d4c:	d8802217 	ldw	r2,136(sp)
 8008d50:	001b883a 	mov	r13,zero
 8008d54:	15800017 	ldw	r22,0(r2)
 8008d58:	10800104 	addi	r2,r2,4
 8008d5c:	d8802215 	stw	r2,136(sp)
 8008d60:	003ea706 	br	8008800 <__flash_exceptions_start+0xf7e077e0>
 8008d64:	d9002017 	ldw	r4,128(sp)
 8008d68:	d9402117 	ldw	r5,132(sp)
 8008d6c:	d9801a04 	addi	r6,sp,104
 8008d70:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008d74:	103f6a1e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008d78:	d811883a 	mov	r8,sp
 8008d7c:	003cff06 	br	800817c <__flash_exceptions_start+0xf7e0715c>
 8008d80:	000b883a 	mov	r5,zero
 8008d84:	1809883a 	mov	r4,r3
 8008d88:	d811883a 	mov	r8,sp
 8008d8c:	003d7f06 	br	800838c <__flash_exceptions_start+0xf7e0736c>
 8008d90:	d9002017 	ldw	r4,128(sp)
 8008d94:	d9402117 	ldw	r5,132(sp)
 8008d98:	d9801a04 	addi	r6,sp,104
 8008d9c:	da402b15 	stw	r9,172(sp)
 8008da0:	db402a15 	stw	r13,168(sp)
 8008da4:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008da8:	da402b17 	ldw	r9,172(sp)
 8008dac:	db402a17 	ldw	r13,168(sp)
 8008db0:	103f5b1e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008db4:	d9401b17 	ldw	r5,108(sp)
 8008db8:	d8801c17 	ldw	r2,112(sp)
 8008dbc:	d811883a 	mov	r8,sp
 8008dc0:	29000044 	addi	r4,r5,1
 8008dc4:	003d6406 	br	8008358 <__flash_exceptions_start+0xf7e07338>
 8008dc8:	d9002017 	ldw	r4,128(sp)
 8008dcc:	d9402117 	ldw	r5,132(sp)
 8008dd0:	d9801a04 	addi	r6,sp,104
 8008dd4:	da402b15 	stw	r9,172(sp)
 8008dd8:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008ddc:	da402b17 	ldw	r9,172(sp)
 8008de0:	103f4f1e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008de4:	d9401b17 	ldw	r5,108(sp)
 8008de8:	d8801c17 	ldw	r2,112(sp)
 8008dec:	d811883a 	mov	r8,sp
 8008df0:	29000044 	addi	r4,r5,1
 8008df4:	003d6506 	br	800838c <__flash_exceptions_start+0xf7e0736c>
 8008df8:	10009a1e 	bne	r2,zero,8009064 <___vfiprintf_internal_r+0x11ec>
 8008dfc:	01000044 	movi	r4,1
 8008e00:	000b883a 	mov	r5,zero
 8008e04:	d811883a 	mov	r8,sp
 8008e08:	003d6206 	br	8008394 <__flash_exceptions_start+0xf7e07374>
 8008e0c:	d9002017 	ldw	r4,128(sp)
 8008e10:	d9402117 	ldw	r5,132(sp)
 8008e14:	d9801a04 	addi	r6,sp,104
 8008e18:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008e1c:	103f401e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008e20:	d9001b17 	ldw	r4,108(sp)
 8008e24:	d8801c17 	ldw	r2,112(sp)
 8008e28:	d811883a 	mov	r8,sp
 8008e2c:	21000044 	addi	r4,r4,1
 8008e30:	003d7d06 	br	8008428 <__flash_exceptions_start+0xf7e07408>
 8008e34:	05adc83a 	sub	r22,zero,r22
 8008e38:	b004c03a 	cmpne	r2,r22,zero
 8008e3c:	035bc83a 	sub	r13,zero,r13
 8008e40:	689bc83a 	sub	r13,r13,r2
 8008e44:	03800b44 	movi	r14,45
 8008e48:	db801d85 	stb	r14,118(sp)
 8008e4c:	4827883a 	mov	r19,r9
 8008e50:	00800044 	movi	r2,1
 8008e54:	b348b03a 	or	r4,r22,r13
 8008e58:	003ce806 	br	80081fc <__flash_exceptions_start+0xf7e071dc>
 8008e5c:	000b883a 	mov	r5,zero
 8008e60:	01000044 	movi	r4,1
 8008e64:	d811883a 	mov	r8,sp
 8008e68:	683d4826 	beq	r13,zero,800838c <__flash_exceptions_start+0xf7e0736c>
 8008e6c:	00800084 	movi	r2,2
 8008e70:	d8c01d04 	addi	r3,sp,116
 8008e74:	d8c00015 	stw	r3,0(sp)
 8008e78:	d8800115 	stw	r2,4(sp)
 8008e7c:	003d4006 	br	8008380 <__flash_exceptions_start+0xf7e07360>
 8008e80:	00800084 	movi	r2,2
 8008e84:	003cda06 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008e88:	a880100c 	andi	r2,r21,64
 8008e8c:	10004226 	beq	r2,zero,8008f98 <___vfiprintf_internal_r+0x1120>
 8008e90:	d8802217 	ldw	r2,136(sp)
 8008e94:	001b883a 	mov	r13,zero
 8008e98:	1580000b 	ldhu	r22,0(r2)
 8008e9c:	10800104 	addi	r2,r2,4
 8008ea0:	d8802215 	stw	r2,136(sp)
 8008ea4:	b009883a 	mov	r4,r22
 8008ea8:	0005883a 	mov	r2,zero
 8008eac:	003cd006 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008eb0:	80c00007 	ldb	r3,0(r16)
 8008eb4:	8005883a 	mov	r2,r16
 8008eb8:	003c4d06 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8008ebc:	a880100c 	andi	r2,r21,64
 8008ec0:	10004426 	beq	r2,zero,8008fd4 <___vfiprintf_internal_r+0x115c>
 8008ec4:	d8c02217 	ldw	r3,136(sp)
 8008ec8:	001b883a 	mov	r13,zero
 8008ecc:	00800044 	movi	r2,1
 8008ed0:	1d80000b 	ldhu	r22,0(r3)
 8008ed4:	18c00104 	addi	r3,r3,4
 8008ed8:	d8c02215 	stw	r3,136(sp)
 8008edc:	b009883a 	mov	r4,r22
 8008ee0:	003cc306 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008ee4:	a880040c 	andi	r2,r21,16
 8008ee8:	1000091e 	bne	r2,zero,8008f10 <___vfiprintf_internal_r+0x1098>
 8008eec:	aac0100c 	andi	r11,r21,64
 8008ef0:	58000726 	beq	r11,zero,8008f10 <___vfiprintf_internal_r+0x1098>
 8008ef4:	d8c02217 	ldw	r3,136(sp)
 8008ef8:	d9002317 	ldw	r4,140(sp)
 8008efc:	18800017 	ldw	r2,0(r3)
 8008f00:	18c00104 	addi	r3,r3,4
 8008f04:	d8c02215 	stw	r3,136(sp)
 8008f08:	1100000d 	sth	r4,0(r2)
 8008f0c:	003c0e06 	br	8007f48 <__flash_exceptions_start+0xf7e06f28>
 8008f10:	d8c02217 	ldw	r3,136(sp)
 8008f14:	d9002317 	ldw	r4,140(sp)
 8008f18:	18800017 	ldw	r2,0(r3)
 8008f1c:	18c00104 	addi	r3,r3,4
 8008f20:	d8c02215 	stw	r3,136(sp)
 8008f24:	11000015 	stw	r4,0(r2)
 8008f28:	003c0706 	br	8007f48 <__flash_exceptions_start+0xf7e06f28>
 8008f2c:	a880100c 	andi	r2,r21,64
 8008f30:	10002126 	beq	r2,zero,8008fb8 <___vfiprintf_internal_r+0x1140>
 8008f34:	1d80000f 	ldh	r22,0(r3)
 8008f38:	d8c02217 	ldw	r3,136(sp)
 8008f3c:	b01bd7fa 	srai	r13,r22,31
 8008f40:	18c00104 	addi	r3,r3,4
 8008f44:	d8c02215 	stw	r3,136(sp)
 8008f48:	6805883a 	mov	r2,r13
 8008f4c:	003dc406 	br	8008660 <__flash_exceptions_start+0xf7e07640>
 8008f50:	d9002017 	ldw	r4,128(sp)
 8008f54:	d9402117 	ldw	r5,132(sp)
 8008f58:	d9801a04 	addi	r6,sp,104
 8008f5c:	da402b15 	stw	r9,172(sp)
 8008f60:	db402a15 	stw	r13,168(sp)
 8008f64:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8008f68:	da402b17 	ldw	r9,172(sp)
 8008f6c:	db402a17 	ldw	r13,168(sp)
 8008f70:	103eeb1e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8008f74:	d9401b17 	ldw	r5,108(sp)
 8008f78:	d8801c17 	ldw	r2,112(sp)
 8008f7c:	d811883a 	mov	r8,sp
 8008f80:	29000044 	addi	r4,r5,1
 8008f84:	003e8b06 	br	80089b4 <__flash_exceptions_start+0xf7e07994>
 8008f88:	9023883a 	mov	r17,r18
 8008f8c:	003d5a06 	br	80084f8 <__flash_exceptions_start+0xf7e074d8>
 8008f90:	4827883a 	mov	r19,r9
 8008f94:	003e3506 	br	800886c <__flash_exceptions_start+0xf7e0784c>
 8008f98:	d8c02217 	ldw	r3,136(sp)
 8008f9c:	001b883a 	mov	r13,zero
 8008fa0:	0005883a 	mov	r2,zero
 8008fa4:	1d800017 	ldw	r22,0(r3)
 8008fa8:	18c00104 	addi	r3,r3,4
 8008fac:	d8c02215 	stw	r3,136(sp)
 8008fb0:	b009883a 	mov	r4,r22
 8008fb4:	003c8e06 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008fb8:	1d800017 	ldw	r22,0(r3)
 8008fbc:	d9002217 	ldw	r4,136(sp)
 8008fc0:	b01bd7fa 	srai	r13,r22,31
 8008fc4:	21000104 	addi	r4,r4,4
 8008fc8:	d9002215 	stw	r4,136(sp)
 8008fcc:	6805883a 	mov	r2,r13
 8008fd0:	003da306 	br	8008660 <__flash_exceptions_start+0xf7e07640>
 8008fd4:	d9002217 	ldw	r4,136(sp)
 8008fd8:	001b883a 	mov	r13,zero
 8008fdc:	00800044 	movi	r2,1
 8008fe0:	25800017 	ldw	r22,0(r4)
 8008fe4:	21000104 	addi	r4,r4,4
 8008fe8:	d9002215 	stw	r4,136(sp)
 8008fec:	b009883a 	mov	r4,r22
 8008ff0:	003c7f06 	br	80081f0 <__flash_exceptions_start+0xf7e071d0>
 8008ff4:	00c20074 	movhi	r3,2049
 8008ff8:	18fa8e04 	addi	r3,r3,-5576
 8008ffc:	d8c02415 	stw	r3,144(sp)
 8009000:	003cff06 	br	8008400 <__flash_exceptions_start+0xf7e073e0>
 8009004:	d8801c17 	ldw	r2,112(sp)
 8009008:	dd402117 	ldw	r21,132(sp)
 800900c:	103ec526 	beq	r2,zero,8008b24 <__flash_exceptions_start+0xf7e07b04>
 8009010:	d9002017 	ldw	r4,128(sp)
 8009014:	a80b883a 	mov	r5,r21
 8009018:	d9801a04 	addi	r6,sp,104
 800901c:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8009020:	003ec006 	br	8008b24 <__flash_exceptions_start+0xf7e07b04>
 8009024:	80800044 	addi	r2,r16,1
 8009028:	ad400814 	ori	r21,r21,32
 800902c:	80c00047 	ldb	r3,1(r16)
 8009030:	003bef06 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8009034:	04a5c83a 	sub	r18,zero,r18
 8009038:	8005883a 	mov	r2,r16
 800903c:	d8c02215 	stw	r3,136(sp)
 8009040:	003d5306 	br	8008590 <__flash_exceptions_start+0xf7e07570>
 8009044:	da002a15 	stw	r8,168(sp)
 8009048:	8000b000 	call	8000b00 <strlen>
 800904c:	1027883a 	mov	r19,r2
 8009050:	db801d83 	ldbu	r14,118(sp)
 8009054:	dd802215 	stw	r22,136(sp)
 8009058:	0013883a 	mov	r9,zero
 800905c:	da002a17 	ldw	r8,168(sp)
 8009060:	003c7f06 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 8009064:	d9002017 	ldw	r4,128(sp)
 8009068:	d9402117 	ldw	r5,132(sp)
 800906c:	d9801a04 	addi	r6,sp,104
 8009070:	da402b15 	stw	r9,172(sp)
 8009074:	8007d640 	call	8007d64 <__sprint_r.part.0>
 8009078:	da402b17 	ldw	r9,172(sp)
 800907c:	103ea81e 	bne	r2,zero,8008b20 <__flash_exceptions_start+0xf7e07b00>
 8009080:	d9401b17 	ldw	r5,108(sp)
 8009084:	d8801c17 	ldw	r2,112(sp)
 8009088:	d811883a 	mov	r8,sp
 800908c:	29000044 	addi	r4,r5,1
 8009090:	003cc006 	br	8008394 <__flash_exceptions_start+0xf7e07374>
 8009094:	d9401b17 	ldw	r5,108(sp)
 8009098:	01020074 	movhi	r4,2049
 800909c:	213a9204 	addi	r4,r4,-5560
 80090a0:	d9002415 	stw	r4,144(sp)
 80090a4:	29400044 	addi	r5,r5,1
 80090a8:	003c9f06 	br	8008328 <__flash_exceptions_start+0xf7e07308>
 80090ac:	00800184 	movi	r2,6
 80090b0:	1240012e 	bgeu	r2,r9,80090b8 <___vfiprintf_internal_r+0x1240>
 80090b4:	1013883a 	mov	r9,r2
 80090b8:	4827883a 	mov	r19,r9
 80090bc:	4823883a 	mov	r17,r9
 80090c0:	48001116 	blt	r9,zero,8009108 <___vfiprintf_internal_r+0x1290>
 80090c4:	05020074 	movhi	r20,2049
 80090c8:	dd802215 	stw	r22,136(sp)
 80090cc:	a53a3204 	addi	r20,r20,-5944
 80090d0:	003db106 	br	8008798 <__flash_exceptions_start+0xf7e07778>
 80090d4:	d9401b17 	ldw	r5,108(sp)
 80090d8:	01020074 	movhi	r4,2049
 80090dc:	213a9204 	addi	r4,r4,-5560
 80090e0:	d9002415 	stw	r4,144(sp)
 80090e4:	29400044 	addi	r5,r5,1
 80090e8:	003cf906 	br	80084d0 <__flash_exceptions_start+0xf7e074b0>
 80090ec:	4827883a 	mov	r19,r9
 80090f0:	db801d83 	ldbu	r14,118(sp)
 80090f4:	dd802215 	stw	r22,136(sp)
 80090f8:	0013883a 	mov	r9,zero
 80090fc:	003c5806 	br	8008260 <__flash_exceptions_start+0xf7e07240>
 8009100:	200d883a 	mov	r6,r4
 8009104:	003ec706 	br	8008c24 <__flash_exceptions_start+0xf7e07c04>
 8009108:	0023883a 	mov	r17,zero
 800910c:	003fed06 	br	80090c4 <__flash_exceptions_start+0xf7e080a4>
 8009110:	d9002217 	ldw	r4,136(sp)
 8009114:	22400017 	ldw	r9,0(r4)
 8009118:	20c00104 	addi	r3,r4,4
 800911c:	d8c02215 	stw	r3,136(sp)
 8009120:	483fc20e 	bge	r9,zero,800902c <__flash_exceptions_start+0xf7e0800c>
 8009124:	027fffc4 	movi	r9,-1
 8009128:	80c00047 	ldb	r3,1(r16)
 800912c:	003bb006 	br	8007ff0 <__flash_exceptions_start+0xf7e06fd0>
 8009130:	8c80010e 	bge	r17,r18,8009138 <___vfiprintf_internal_r+0x12c0>
 8009134:	9023883a 	mov	r17,r18
 8009138:	d8802317 	ldw	r2,140(sp)
 800913c:	1445883a 	add	r2,r2,r17
 8009140:	d8802315 	stw	r2,140(sp)
 8009144:	003cef06 	br	8008504 <__flash_exceptions_start+0xf7e074e4>

08009148 <__vfiprintf_internal>:
 8009148:	2007883a 	mov	r3,r4
 800914c:	01020074 	movhi	r4,2049
 8009150:	213db004 	addi	r4,r4,-2368
 8009154:	21000017 	ldw	r4,0(r4)
 8009158:	2805883a 	mov	r2,r5
 800915c:	300f883a 	mov	r7,r6
 8009160:	180b883a 	mov	r5,r3
 8009164:	100d883a 	mov	r6,r2
 8009168:	8007e781 	jmpi	8007e78 <___vfiprintf_internal_r>

0800916c <__sbprintf>:
 800916c:	2880030b 	ldhu	r2,12(r5)
 8009170:	2ac01917 	ldw	r11,100(r5)
 8009174:	2a80038b 	ldhu	r10,14(r5)
 8009178:	2a400717 	ldw	r9,28(r5)
 800917c:	2a000917 	ldw	r8,36(r5)
 8009180:	defee204 	addi	sp,sp,-1144
 8009184:	00c10004 	movi	r3,1024
 8009188:	dc011a15 	stw	r16,1128(sp)
 800918c:	10bfff4c 	andi	r2,r2,65533
 8009190:	2821883a 	mov	r16,r5
 8009194:	d8cb883a 	add	r5,sp,r3
 8009198:	dc811c15 	stw	r18,1136(sp)
 800919c:	dc411b15 	stw	r17,1132(sp)
 80091a0:	dfc11d15 	stw	ra,1140(sp)
 80091a4:	2025883a 	mov	r18,r4
 80091a8:	d881030d 	sth	r2,1036(sp)
 80091ac:	dac11915 	stw	r11,1124(sp)
 80091b0:	da81038d 	sth	r10,1038(sp)
 80091b4:	da410715 	stw	r9,1052(sp)
 80091b8:	da010915 	stw	r8,1060(sp)
 80091bc:	dec10015 	stw	sp,1024(sp)
 80091c0:	dec10415 	stw	sp,1040(sp)
 80091c4:	d8c10215 	stw	r3,1032(sp)
 80091c8:	d8c10515 	stw	r3,1044(sp)
 80091cc:	d8010615 	stw	zero,1048(sp)
 80091d0:	8007e780 	call	8007e78 <___vfiprintf_internal_r>
 80091d4:	1023883a 	mov	r17,r2
 80091d8:	10000416 	blt	r2,zero,80091ec <__sbprintf+0x80>
 80091dc:	9009883a 	mov	r4,r18
 80091e0:	d9410004 	addi	r5,sp,1024
 80091e4:	800484c0 	call	800484c <_fflush_r>
 80091e8:	10000d1e 	bne	r2,zero,8009220 <__sbprintf+0xb4>
 80091ec:	d8c1030b 	ldhu	r3,1036(sp)
 80091f0:	18c0100c 	andi	r3,r3,64
 80091f4:	18000326 	beq	r3,zero,8009204 <__sbprintf+0x98>
 80091f8:	8080030b 	ldhu	r2,12(r16)
 80091fc:	10801014 	ori	r2,r2,64
 8009200:	8080030d 	sth	r2,12(r16)
 8009204:	8805883a 	mov	r2,r17
 8009208:	dfc11d17 	ldw	ra,1140(sp)
 800920c:	dc811c17 	ldw	r18,1136(sp)
 8009210:	dc411b17 	ldw	r17,1132(sp)
 8009214:	dc011a17 	ldw	r16,1128(sp)
 8009218:	dec11e04 	addi	sp,sp,1144
 800921c:	f800283a 	ret
 8009220:	047fffc4 	movi	r17,-1
 8009224:	003ff106 	br	80091ec <__flash_exceptions_start+0xf7e081cc>

08009228 <_write_r>:
 8009228:	defffd04 	addi	sp,sp,-12
 800922c:	dc000015 	stw	r16,0(sp)
 8009230:	04020074 	movhi	r16,2049
 8009234:	dc400115 	stw	r17,4(sp)
 8009238:	84009504 	addi	r16,r16,596
 800923c:	2023883a 	mov	r17,r4
 8009240:	2809883a 	mov	r4,r5
 8009244:	300b883a 	mov	r5,r6
 8009248:	380d883a 	mov	r6,r7
 800924c:	dfc00215 	stw	ra,8(sp)
 8009250:	80000015 	stw	zero,0(r16)
 8009254:	800d6480 	call	800d648 <write>
 8009258:	00ffffc4 	movi	r3,-1
 800925c:	10c00526 	beq	r2,r3,8009274 <_write_r+0x4c>
 8009260:	dfc00217 	ldw	ra,8(sp)
 8009264:	dc400117 	ldw	r17,4(sp)
 8009268:	dc000017 	ldw	r16,0(sp)
 800926c:	dec00304 	addi	sp,sp,12
 8009270:	f800283a 	ret
 8009274:	80c00017 	ldw	r3,0(r16)
 8009278:	183ff926 	beq	r3,zero,8009260 <__flash_exceptions_start+0xf7e08240>
 800927c:	88c00015 	stw	r3,0(r17)
 8009280:	003ff706 	br	8009260 <__flash_exceptions_start+0xf7e08240>

08009284 <_close_r>:
 8009284:	defffd04 	addi	sp,sp,-12
 8009288:	dc000015 	stw	r16,0(sp)
 800928c:	04020074 	movhi	r16,2049
 8009290:	dc400115 	stw	r17,4(sp)
 8009294:	84009504 	addi	r16,r16,596
 8009298:	2023883a 	mov	r17,r4
 800929c:	2809883a 	mov	r4,r5
 80092a0:	dfc00215 	stw	ra,8(sp)
 80092a4:	80000015 	stw	zero,0(r16)
 80092a8:	800cdec0 	call	800cdec <close>
 80092ac:	00ffffc4 	movi	r3,-1
 80092b0:	10c00526 	beq	r2,r3,80092c8 <_close_r+0x44>
 80092b4:	dfc00217 	ldw	ra,8(sp)
 80092b8:	dc400117 	ldw	r17,4(sp)
 80092bc:	dc000017 	ldw	r16,0(sp)
 80092c0:	dec00304 	addi	sp,sp,12
 80092c4:	f800283a 	ret
 80092c8:	80c00017 	ldw	r3,0(r16)
 80092cc:	183ff926 	beq	r3,zero,80092b4 <__flash_exceptions_start+0xf7e08294>
 80092d0:	88c00015 	stw	r3,0(r17)
 80092d4:	003ff706 	br	80092b4 <__flash_exceptions_start+0xf7e08294>

080092d8 <_calloc_r>:
 80092d8:	298b383a 	mul	r5,r5,r6
 80092dc:	defffe04 	addi	sp,sp,-8
 80092e0:	dc000015 	stw	r16,0(sp)
 80092e4:	dfc00115 	stw	ra,4(sp)
 80092e8:	800596c0 	call	800596c <_malloc_r>
 80092ec:	1021883a 	mov	r16,r2
 80092f0:	10002826 	beq	r2,zero,8009394 <_calloc_r+0xbc>
 80092f4:	11bfff17 	ldw	r6,-4(r2)
 80092f8:	00bfff04 	movi	r2,-4
 80092fc:	00c00904 	movi	r3,36
 8009300:	308c703a 	and	r6,r6,r2
 8009304:	308d883a 	add	r6,r6,r2
 8009308:	19801436 	bltu	r3,r6,800935c <_calloc_r+0x84>
 800930c:	008004c4 	movi	r2,19
 8009310:	11800936 	bltu	r2,r6,8009338 <_calloc_r+0x60>
 8009314:	8005883a 	mov	r2,r16
 8009318:	10000015 	stw	zero,0(r2)
 800931c:	10000115 	stw	zero,4(r2)
 8009320:	10000215 	stw	zero,8(r2)
 8009324:	8005883a 	mov	r2,r16
 8009328:	dfc00117 	ldw	ra,4(sp)
 800932c:	dc000017 	ldw	r16,0(sp)
 8009330:	dec00204 	addi	sp,sp,8
 8009334:	f800283a 	ret
 8009338:	80000015 	stw	zero,0(r16)
 800933c:	80000115 	stw	zero,4(r16)
 8009340:	008006c4 	movi	r2,27
 8009344:	11800d2e 	bgeu	r2,r6,800937c <_calloc_r+0xa4>
 8009348:	80000215 	stw	zero,8(r16)
 800934c:	80000315 	stw	zero,12(r16)
 8009350:	30c00c26 	beq	r6,r3,8009384 <_calloc_r+0xac>
 8009354:	80800404 	addi	r2,r16,16
 8009358:	003fef06 	br	8009318 <__flash_exceptions_start+0xf7e082f8>
 800935c:	8009883a 	mov	r4,r16
 8009360:	000b883a 	mov	r5,zero
 8009364:	80064900 	call	8006490 <memset>
 8009368:	8005883a 	mov	r2,r16
 800936c:	dfc00117 	ldw	ra,4(sp)
 8009370:	dc000017 	ldw	r16,0(sp)
 8009374:	dec00204 	addi	sp,sp,8
 8009378:	f800283a 	ret
 800937c:	80800204 	addi	r2,r16,8
 8009380:	003fe506 	br	8009318 <__flash_exceptions_start+0xf7e082f8>
 8009384:	80000415 	stw	zero,16(r16)
 8009388:	80800604 	addi	r2,r16,24
 800938c:	80000515 	stw	zero,20(r16)
 8009390:	003fe106 	br	8009318 <__flash_exceptions_start+0xf7e082f8>
 8009394:	0005883a 	mov	r2,zero
 8009398:	003fe306 	br	8009328 <__flash_exceptions_start+0xf7e08308>

0800939c <_fclose_r>:
 800939c:	28003926 	beq	r5,zero,8009484 <_fclose_r+0xe8>
 80093a0:	defffc04 	addi	sp,sp,-16
 80093a4:	dc400115 	stw	r17,4(sp)
 80093a8:	dc000015 	stw	r16,0(sp)
 80093ac:	dfc00315 	stw	ra,12(sp)
 80093b0:	dc800215 	stw	r18,8(sp)
 80093b4:	2023883a 	mov	r17,r4
 80093b8:	2821883a 	mov	r16,r5
 80093bc:	20000226 	beq	r4,zero,80093c8 <_fclose_r+0x2c>
 80093c0:	20800e17 	ldw	r2,56(r4)
 80093c4:	10002726 	beq	r2,zero,8009464 <_fclose_r+0xc8>
 80093c8:	8080030f 	ldh	r2,12(r16)
 80093cc:	1000071e 	bne	r2,zero,80093ec <_fclose_r+0x50>
 80093d0:	0005883a 	mov	r2,zero
 80093d4:	dfc00317 	ldw	ra,12(sp)
 80093d8:	dc800217 	ldw	r18,8(sp)
 80093dc:	dc400117 	ldw	r17,4(sp)
 80093e0:	dc000017 	ldw	r16,0(sp)
 80093e4:	dec00404 	addi	sp,sp,16
 80093e8:	f800283a 	ret
 80093ec:	8809883a 	mov	r4,r17
 80093f0:	800b883a 	mov	r5,r16
 80093f4:	80046440 	call	8004644 <__sflush_r>
 80093f8:	1025883a 	mov	r18,r2
 80093fc:	80800b17 	ldw	r2,44(r16)
 8009400:	10000426 	beq	r2,zero,8009414 <_fclose_r+0x78>
 8009404:	81400717 	ldw	r5,28(r16)
 8009408:	8809883a 	mov	r4,r17
 800940c:	103ee83a 	callr	r2
 8009410:	10001616 	blt	r2,zero,800946c <_fclose_r+0xd0>
 8009414:	8080030b 	ldhu	r2,12(r16)
 8009418:	1080200c 	andi	r2,r2,128
 800941c:	1000151e 	bne	r2,zero,8009474 <_fclose_r+0xd8>
 8009420:	81400c17 	ldw	r5,48(r16)
 8009424:	28000526 	beq	r5,zero,800943c <_fclose_r+0xa0>
 8009428:	80801004 	addi	r2,r16,64
 800942c:	28800226 	beq	r5,r2,8009438 <_fclose_r+0x9c>
 8009430:	8809883a 	mov	r4,r17
 8009434:	8004d9c0 	call	8004d9c <_free_r>
 8009438:	80000c15 	stw	zero,48(r16)
 800943c:	81401117 	ldw	r5,68(r16)
 8009440:	28000326 	beq	r5,zero,8009450 <_fclose_r+0xb4>
 8009444:	8809883a 	mov	r4,r17
 8009448:	8004d9c0 	call	8004d9c <_free_r>
 800944c:	80001115 	stw	zero,68(r16)
 8009450:	8004c380 	call	8004c38 <__sfp_lock_acquire>
 8009454:	8000030d 	sth	zero,12(r16)
 8009458:	8004c3c0 	call	8004c3c <__sfp_lock_release>
 800945c:	9005883a 	mov	r2,r18
 8009460:	003fdc06 	br	80093d4 <__flash_exceptions_start+0xf7e083b4>
 8009464:	8004c280 	call	8004c28 <__sinit>
 8009468:	003fd706 	br	80093c8 <__flash_exceptions_start+0xf7e083a8>
 800946c:	04bfffc4 	movi	r18,-1
 8009470:	003fe806 	br	8009414 <__flash_exceptions_start+0xf7e083f4>
 8009474:	81400417 	ldw	r5,16(r16)
 8009478:	8809883a 	mov	r4,r17
 800947c:	8004d9c0 	call	8004d9c <_free_r>
 8009480:	003fe706 	br	8009420 <__flash_exceptions_start+0xf7e08400>
 8009484:	0005883a 	mov	r2,zero
 8009488:	f800283a 	ret

0800948c <fclose>:
 800948c:	00820074 	movhi	r2,2049
 8009490:	10bdb004 	addi	r2,r2,-2368
 8009494:	200b883a 	mov	r5,r4
 8009498:	11000017 	ldw	r4,0(r2)
 800949c:	800939c1 	jmpi	800939c <_fclose_r>

080094a0 <_fputwc_r>:
 80094a0:	3080030b 	ldhu	r2,12(r6)
 80094a4:	defff804 	addi	sp,sp,-32
 80094a8:	dcc00415 	stw	r19,16(sp)
 80094ac:	dc800315 	stw	r18,12(sp)
 80094b0:	dc000115 	stw	r16,4(sp)
 80094b4:	dfc00715 	stw	ra,28(sp)
 80094b8:	dd400615 	stw	r21,24(sp)
 80094bc:	dd000515 	stw	r20,20(sp)
 80094c0:	dc400215 	stw	r17,8(sp)
 80094c4:	10c8000c 	andi	r3,r2,8192
 80094c8:	3021883a 	mov	r16,r6
 80094cc:	2027883a 	mov	r19,r4
 80094d0:	2825883a 	mov	r18,r5
 80094d4:	1800051e 	bne	r3,zero,80094ec <_fputwc_r+0x4c>
 80094d8:	30c01917 	ldw	r3,100(r6)
 80094dc:	10880014 	ori	r2,r2,8192
 80094e0:	3080030d 	sth	r2,12(r6)
 80094e4:	18880014 	ori	r2,r3,8192
 80094e8:	30801915 	stw	r2,100(r6)
 80094ec:	800575c0 	call	800575c <__locale_mb_cur_max>
 80094f0:	00c00044 	movi	r3,1
 80094f4:	10c03e26 	beq	r2,r3,80095f0 <_fputwc_r+0x150>
 80094f8:	9809883a 	mov	r4,r19
 80094fc:	d80b883a 	mov	r5,sp
 8009500:	900d883a 	mov	r6,r18
 8009504:	81c01704 	addi	r7,r16,92
 8009508:	80099380 	call	8009938 <_wcrtomb_r>
 800950c:	1029883a 	mov	r20,r2
 8009510:	00bfffc4 	movi	r2,-1
 8009514:	a0802026 	beq	r20,r2,8009598 <_fputwc_r+0xf8>
 8009518:	d9400003 	ldbu	r5,0(sp)
 800951c:	a0001c26 	beq	r20,zero,8009590 <_fputwc_r+0xf0>
 8009520:	0023883a 	mov	r17,zero
 8009524:	05400284 	movi	r21,10
 8009528:	00000906 	br	8009550 <_fputwc_r+0xb0>
 800952c:	80800017 	ldw	r2,0(r16)
 8009530:	11400005 	stb	r5,0(r2)
 8009534:	80c00017 	ldw	r3,0(r16)
 8009538:	18c00044 	addi	r3,r3,1
 800953c:	80c00015 	stw	r3,0(r16)
 8009540:	8c400044 	addi	r17,r17,1
 8009544:	dc45883a 	add	r2,sp,r17
 8009548:	8d00112e 	bgeu	r17,r20,8009590 <_fputwc_r+0xf0>
 800954c:	11400003 	ldbu	r5,0(r2)
 8009550:	80c00217 	ldw	r3,8(r16)
 8009554:	18ffffc4 	addi	r3,r3,-1
 8009558:	80c00215 	stw	r3,8(r16)
 800955c:	183ff30e 	bge	r3,zero,800952c <__flash_exceptions_start+0xf7e0850c>
 8009560:	80800617 	ldw	r2,24(r16)
 8009564:	18801916 	blt	r3,r2,80095cc <_fputwc_r+0x12c>
 8009568:	80800017 	ldw	r2,0(r16)
 800956c:	11400005 	stb	r5,0(r2)
 8009570:	80800017 	ldw	r2,0(r16)
 8009574:	10c00003 	ldbu	r3,0(r2)
 8009578:	10800044 	addi	r2,r2,1
 800957c:	1d402326 	beq	r3,r21,800960c <_fputwc_r+0x16c>
 8009580:	80800015 	stw	r2,0(r16)
 8009584:	8c400044 	addi	r17,r17,1
 8009588:	dc45883a 	add	r2,sp,r17
 800958c:	8d3fef36 	bltu	r17,r20,800954c <__flash_exceptions_start+0xf7e0852c>
 8009590:	9005883a 	mov	r2,r18
 8009594:	00000406 	br	80095a8 <_fputwc_r+0x108>
 8009598:	80c0030b 	ldhu	r3,12(r16)
 800959c:	a005883a 	mov	r2,r20
 80095a0:	18c01014 	ori	r3,r3,64
 80095a4:	80c0030d 	sth	r3,12(r16)
 80095a8:	dfc00717 	ldw	ra,28(sp)
 80095ac:	dd400617 	ldw	r21,24(sp)
 80095b0:	dd000517 	ldw	r20,20(sp)
 80095b4:	dcc00417 	ldw	r19,16(sp)
 80095b8:	dc800317 	ldw	r18,12(sp)
 80095bc:	dc400217 	ldw	r17,8(sp)
 80095c0:	dc000117 	ldw	r16,4(sp)
 80095c4:	dec00804 	addi	sp,sp,32
 80095c8:	f800283a 	ret
 80095cc:	9809883a 	mov	r4,r19
 80095d0:	29403fcc 	andi	r5,r5,255
 80095d4:	800d883a 	mov	r6,r16
 80095d8:	80097e40 	call	80097e4 <__swbuf_r>
 80095dc:	10bfffe0 	cmpeqi	r2,r2,-1
 80095e0:	10803fcc 	andi	r2,r2,255
 80095e4:	103fd626 	beq	r2,zero,8009540 <__flash_exceptions_start+0xf7e08520>
 80095e8:	00bfffc4 	movi	r2,-1
 80095ec:	003fee06 	br	80095a8 <__flash_exceptions_start+0xf7e08588>
 80095f0:	90ffffc4 	addi	r3,r18,-1
 80095f4:	01003f84 	movi	r4,254
 80095f8:	20ffbf36 	bltu	r4,r3,80094f8 <__flash_exceptions_start+0xf7e084d8>
 80095fc:	900b883a 	mov	r5,r18
 8009600:	dc800005 	stb	r18,0(sp)
 8009604:	1029883a 	mov	r20,r2
 8009608:	003fc506 	br	8009520 <__flash_exceptions_start+0xf7e08500>
 800960c:	9809883a 	mov	r4,r19
 8009610:	a80b883a 	mov	r5,r21
 8009614:	800d883a 	mov	r6,r16
 8009618:	80097e40 	call	80097e4 <__swbuf_r>
 800961c:	10bfffe0 	cmpeqi	r2,r2,-1
 8009620:	003fef06 	br	80095e0 <__flash_exceptions_start+0xf7e085c0>

08009624 <fputwc>:
 8009624:	00820074 	movhi	r2,2049
 8009628:	defffc04 	addi	sp,sp,-16
 800962c:	10bdb004 	addi	r2,r2,-2368
 8009630:	dc000115 	stw	r16,4(sp)
 8009634:	14000017 	ldw	r16,0(r2)
 8009638:	dc400215 	stw	r17,8(sp)
 800963c:	dfc00315 	stw	ra,12(sp)
 8009640:	2023883a 	mov	r17,r4
 8009644:	280d883a 	mov	r6,r5
 8009648:	80000626 	beq	r16,zero,8009664 <fputwc+0x40>
 800964c:	80800e17 	ldw	r2,56(r16)
 8009650:	1000041e 	bne	r2,zero,8009664 <fputwc+0x40>
 8009654:	8009883a 	mov	r4,r16
 8009658:	d9400015 	stw	r5,0(sp)
 800965c:	8004c280 	call	8004c28 <__sinit>
 8009660:	d9800017 	ldw	r6,0(sp)
 8009664:	8009883a 	mov	r4,r16
 8009668:	880b883a 	mov	r5,r17
 800966c:	dfc00317 	ldw	ra,12(sp)
 8009670:	dc400217 	ldw	r17,8(sp)
 8009674:	dc000117 	ldw	r16,4(sp)
 8009678:	dec00404 	addi	sp,sp,16
 800967c:	80094a01 	jmpi	80094a0 <_fputwc_r>

08009680 <_fstat_r>:
 8009680:	defffd04 	addi	sp,sp,-12
 8009684:	dc000015 	stw	r16,0(sp)
 8009688:	04020074 	movhi	r16,2049
 800968c:	dc400115 	stw	r17,4(sp)
 8009690:	84009504 	addi	r16,r16,596
 8009694:	2023883a 	mov	r17,r4
 8009698:	2809883a 	mov	r4,r5
 800969c:	300b883a 	mov	r5,r6
 80096a0:	dfc00215 	stw	ra,8(sp)
 80096a4:	80000015 	stw	zero,0(r16)
 80096a8:	800cf380 	call	800cf38 <fstat>
 80096ac:	00ffffc4 	movi	r3,-1
 80096b0:	10c00526 	beq	r2,r3,80096c8 <_fstat_r+0x48>
 80096b4:	dfc00217 	ldw	ra,8(sp)
 80096b8:	dc400117 	ldw	r17,4(sp)
 80096bc:	dc000017 	ldw	r16,0(sp)
 80096c0:	dec00304 	addi	sp,sp,12
 80096c4:	f800283a 	ret
 80096c8:	80c00017 	ldw	r3,0(r16)
 80096cc:	183ff926 	beq	r3,zero,80096b4 <__flash_exceptions_start+0xf7e08694>
 80096d0:	88c00015 	stw	r3,0(r17)
 80096d4:	003ff706 	br	80096b4 <__flash_exceptions_start+0xf7e08694>

080096d8 <_isatty_r>:
 80096d8:	defffd04 	addi	sp,sp,-12
 80096dc:	dc000015 	stw	r16,0(sp)
 80096e0:	04020074 	movhi	r16,2049
 80096e4:	dc400115 	stw	r17,4(sp)
 80096e8:	84009504 	addi	r16,r16,596
 80096ec:	2023883a 	mov	r17,r4
 80096f0:	2809883a 	mov	r4,r5
 80096f4:	dfc00215 	stw	ra,8(sp)
 80096f8:	80000015 	stw	zero,0(r16)
 80096fc:	800d0380 	call	800d038 <isatty>
 8009700:	00ffffc4 	movi	r3,-1
 8009704:	10c00526 	beq	r2,r3,800971c <_isatty_r+0x44>
 8009708:	dfc00217 	ldw	ra,8(sp)
 800970c:	dc400117 	ldw	r17,4(sp)
 8009710:	dc000017 	ldw	r16,0(sp)
 8009714:	dec00304 	addi	sp,sp,12
 8009718:	f800283a 	ret
 800971c:	80c00017 	ldw	r3,0(r16)
 8009720:	183ff926 	beq	r3,zero,8009708 <__flash_exceptions_start+0xf7e086e8>
 8009724:	88c00015 	stw	r3,0(r17)
 8009728:	003ff706 	br	8009708 <__flash_exceptions_start+0xf7e086e8>

0800972c <_lseek_r>:
 800972c:	defffd04 	addi	sp,sp,-12
 8009730:	dc000015 	stw	r16,0(sp)
 8009734:	04020074 	movhi	r16,2049
 8009738:	dc400115 	stw	r17,4(sp)
 800973c:	84009504 	addi	r16,r16,596
 8009740:	2023883a 	mov	r17,r4
 8009744:	2809883a 	mov	r4,r5
 8009748:	300b883a 	mov	r5,r6
 800974c:	380d883a 	mov	r6,r7
 8009750:	dfc00215 	stw	ra,8(sp)
 8009754:	80000015 	stw	zero,0(r16)
 8009758:	800d2100 	call	800d210 <lseek>
 800975c:	00ffffc4 	movi	r3,-1
 8009760:	10c00526 	beq	r2,r3,8009778 <_lseek_r+0x4c>
 8009764:	dfc00217 	ldw	ra,8(sp)
 8009768:	dc400117 	ldw	r17,4(sp)
 800976c:	dc000017 	ldw	r16,0(sp)
 8009770:	dec00304 	addi	sp,sp,12
 8009774:	f800283a 	ret
 8009778:	80c00017 	ldw	r3,0(r16)
 800977c:	183ff926 	beq	r3,zero,8009764 <__flash_exceptions_start+0xf7e08744>
 8009780:	88c00015 	stw	r3,0(r17)
 8009784:	003ff706 	br	8009764 <__flash_exceptions_start+0xf7e08744>

08009788 <_read_r>:
 8009788:	defffd04 	addi	sp,sp,-12
 800978c:	dc000015 	stw	r16,0(sp)
 8009790:	04020074 	movhi	r16,2049
 8009794:	dc400115 	stw	r17,4(sp)
 8009798:	84009504 	addi	r16,r16,596
 800979c:	2023883a 	mov	r17,r4
 80097a0:	2809883a 	mov	r4,r5
 80097a4:	300b883a 	mov	r5,r6
 80097a8:	380d883a 	mov	r6,r7
 80097ac:	dfc00215 	stw	ra,8(sp)
 80097b0:	80000015 	stw	zero,0(r16)
 80097b4:	800d3ec0 	call	800d3ec <read>
 80097b8:	00ffffc4 	movi	r3,-1
 80097bc:	10c00526 	beq	r2,r3,80097d4 <_read_r+0x4c>
 80097c0:	dfc00217 	ldw	ra,8(sp)
 80097c4:	dc400117 	ldw	r17,4(sp)
 80097c8:	dc000017 	ldw	r16,0(sp)
 80097cc:	dec00304 	addi	sp,sp,12
 80097d0:	f800283a 	ret
 80097d4:	80c00017 	ldw	r3,0(r16)
 80097d8:	183ff926 	beq	r3,zero,80097c0 <__flash_exceptions_start+0xf7e087a0>
 80097dc:	88c00015 	stw	r3,0(r17)
 80097e0:	003ff706 	br	80097c0 <__flash_exceptions_start+0xf7e087a0>

080097e4 <__swbuf_r>:
 80097e4:	defffc04 	addi	sp,sp,-16
 80097e8:	dc800215 	stw	r18,8(sp)
 80097ec:	dc400115 	stw	r17,4(sp)
 80097f0:	dc000015 	stw	r16,0(sp)
 80097f4:	dfc00315 	stw	ra,12(sp)
 80097f8:	2025883a 	mov	r18,r4
 80097fc:	2823883a 	mov	r17,r5
 8009800:	3021883a 	mov	r16,r6
 8009804:	20000226 	beq	r4,zero,8009810 <__swbuf_r+0x2c>
 8009808:	20800e17 	ldw	r2,56(r4)
 800980c:	10004126 	beq	r2,zero,8009914 <__swbuf_r+0x130>
 8009810:	80c00617 	ldw	r3,24(r16)
 8009814:	8180030b 	ldhu	r6,12(r16)
 8009818:	80c00215 	stw	r3,8(r16)
 800981c:	30c0020c 	andi	r3,r6,8
 8009820:	18003526 	beq	r3,zero,80098f8 <__swbuf_r+0x114>
 8009824:	80c00417 	ldw	r3,16(r16)
 8009828:	18003326 	beq	r3,zero,80098f8 <__swbuf_r+0x114>
 800982c:	3088000c 	andi	r2,r6,8192
 8009830:	8c403fcc 	andi	r17,r17,255
 8009834:	10001726 	beq	r2,zero,8009894 <__swbuf_r+0xb0>
 8009838:	80800017 	ldw	r2,0(r16)
 800983c:	81000517 	ldw	r4,20(r16)
 8009840:	10c7c83a 	sub	r3,r2,r3
 8009844:	19001d0e 	bge	r3,r4,80098bc <__swbuf_r+0xd8>
 8009848:	18c00044 	addi	r3,r3,1
 800984c:	81400217 	ldw	r5,8(r16)
 8009850:	11000044 	addi	r4,r2,1
 8009854:	81000015 	stw	r4,0(r16)
 8009858:	297fffc4 	addi	r5,r5,-1
 800985c:	81400215 	stw	r5,8(r16)
 8009860:	14400005 	stb	r17,0(r2)
 8009864:	80800517 	ldw	r2,20(r16)
 8009868:	10c01d26 	beq	r2,r3,80098e0 <__swbuf_r+0xfc>
 800986c:	8080030b 	ldhu	r2,12(r16)
 8009870:	1080004c 	andi	r2,r2,1
 8009874:	1000181e 	bne	r2,zero,80098d8 <__swbuf_r+0xf4>
 8009878:	8805883a 	mov	r2,r17
 800987c:	dfc00317 	ldw	ra,12(sp)
 8009880:	dc800217 	ldw	r18,8(sp)
 8009884:	dc400117 	ldw	r17,4(sp)
 8009888:	dc000017 	ldw	r16,0(sp)
 800988c:	dec00404 	addi	sp,sp,16
 8009890:	f800283a 	ret
 8009894:	81001917 	ldw	r4,100(r16)
 8009898:	00b7ffc4 	movi	r2,-8193
 800989c:	31880014 	ori	r6,r6,8192
 80098a0:	2084703a 	and	r2,r4,r2
 80098a4:	80801915 	stw	r2,100(r16)
 80098a8:	80800017 	ldw	r2,0(r16)
 80098ac:	81000517 	ldw	r4,20(r16)
 80098b0:	8180030d 	sth	r6,12(r16)
 80098b4:	10c7c83a 	sub	r3,r2,r3
 80098b8:	193fe316 	blt	r3,r4,8009848 <__flash_exceptions_start+0xf7e08828>
 80098bc:	9009883a 	mov	r4,r18
 80098c0:	800b883a 	mov	r5,r16
 80098c4:	800484c0 	call	800484c <_fflush_r>
 80098c8:	1000091e 	bne	r2,zero,80098f0 <__swbuf_r+0x10c>
 80098cc:	80800017 	ldw	r2,0(r16)
 80098d0:	00c00044 	movi	r3,1
 80098d4:	003fdd06 	br	800984c <__flash_exceptions_start+0xf7e0882c>
 80098d8:	00800284 	movi	r2,10
 80098dc:	88bfe61e 	bne	r17,r2,8009878 <__flash_exceptions_start+0xf7e08858>
 80098e0:	9009883a 	mov	r4,r18
 80098e4:	800b883a 	mov	r5,r16
 80098e8:	800484c0 	call	800484c <_fflush_r>
 80098ec:	103fe226 	beq	r2,zero,8009878 <__flash_exceptions_start+0xf7e08858>
 80098f0:	00bfffc4 	movi	r2,-1
 80098f4:	003fe106 	br	800987c <__flash_exceptions_start+0xf7e0885c>
 80098f8:	9009883a 	mov	r4,r18
 80098fc:	800b883a 	mov	r5,r16
 8009900:	8002bc80 	call	8002bc8 <__swsetup_r>
 8009904:	103ffa1e 	bne	r2,zero,80098f0 <__flash_exceptions_start+0xf7e088d0>
 8009908:	8180030b 	ldhu	r6,12(r16)
 800990c:	80c00417 	ldw	r3,16(r16)
 8009910:	003fc606 	br	800982c <__flash_exceptions_start+0xf7e0880c>
 8009914:	8004c280 	call	8004c28 <__sinit>
 8009918:	003fbd06 	br	8009810 <__flash_exceptions_start+0xf7e087f0>

0800991c <__swbuf>:
 800991c:	00c20074 	movhi	r3,2049
 8009920:	18fdb004 	addi	r3,r3,-2368
 8009924:	2005883a 	mov	r2,r4
 8009928:	19000017 	ldw	r4,0(r3)
 800992c:	280d883a 	mov	r6,r5
 8009930:	100b883a 	mov	r5,r2
 8009934:	80097e41 	jmpi	80097e4 <__swbuf_r>

08009938 <_wcrtomb_r>:
 8009938:	defff604 	addi	sp,sp,-40
 800993c:	00820074 	movhi	r2,2049
 8009940:	dc800815 	stw	r18,32(sp)
 8009944:	dc400715 	stw	r17,28(sp)
 8009948:	dc000615 	stw	r16,24(sp)
 800994c:	10bdb404 	addi	r2,r2,-2352
 8009950:	dfc00915 	stw	ra,36(sp)
 8009954:	2021883a 	mov	r16,r4
 8009958:	3823883a 	mov	r17,r7
 800995c:	14800017 	ldw	r18,0(r2)
 8009960:	28001426 	beq	r5,zero,80099b4 <_wcrtomb_r+0x7c>
 8009964:	d9400415 	stw	r5,16(sp)
 8009968:	d9800515 	stw	r6,20(sp)
 800996c:	80057500 	call	8005750 <__locale_charset>
 8009970:	d9400417 	ldw	r5,16(sp)
 8009974:	d9800517 	ldw	r6,20(sp)
 8009978:	8009883a 	mov	r4,r16
 800997c:	dc400015 	stw	r17,0(sp)
 8009980:	100f883a 	mov	r7,r2
 8009984:	903ee83a 	callr	r18
 8009988:	00ffffc4 	movi	r3,-1
 800998c:	10c0031e 	bne	r2,r3,800999c <_wcrtomb_r+0x64>
 8009990:	88000015 	stw	zero,0(r17)
 8009994:	00c02284 	movi	r3,138
 8009998:	80c00015 	stw	r3,0(r16)
 800999c:	dfc00917 	ldw	ra,36(sp)
 80099a0:	dc800817 	ldw	r18,32(sp)
 80099a4:	dc400717 	ldw	r17,28(sp)
 80099a8:	dc000617 	ldw	r16,24(sp)
 80099ac:	dec00a04 	addi	sp,sp,40
 80099b0:	f800283a 	ret
 80099b4:	80057500 	call	8005750 <__locale_charset>
 80099b8:	8009883a 	mov	r4,r16
 80099bc:	dc400015 	stw	r17,0(sp)
 80099c0:	d9400104 	addi	r5,sp,4
 80099c4:	000d883a 	mov	r6,zero
 80099c8:	100f883a 	mov	r7,r2
 80099cc:	903ee83a 	callr	r18
 80099d0:	003fed06 	br	8009988 <__flash_exceptions_start+0xf7e08968>

080099d4 <wcrtomb>:
 80099d4:	defff604 	addi	sp,sp,-40
 80099d8:	00820074 	movhi	r2,2049
 80099dc:	dc800615 	stw	r18,24(sp)
 80099e0:	dc400515 	stw	r17,20(sp)
 80099e4:	dc000415 	stw	r16,16(sp)
 80099e8:	10bdb004 	addi	r2,r2,-2368
 80099ec:	dfc00915 	stw	ra,36(sp)
 80099f0:	dd000815 	stw	r20,32(sp)
 80099f4:	dcc00715 	stw	r19,28(sp)
 80099f8:	2021883a 	mov	r16,r4
 80099fc:	3025883a 	mov	r18,r6
 8009a00:	14400017 	ldw	r17,0(r2)
 8009a04:	20001826 	beq	r4,zero,8009a68 <wcrtomb+0x94>
 8009a08:	00820074 	movhi	r2,2049
 8009a0c:	10bdb404 	addi	r2,r2,-2352
 8009a10:	15000017 	ldw	r20,0(r2)
 8009a14:	2827883a 	mov	r19,r5
 8009a18:	80057500 	call	8005750 <__locale_charset>
 8009a1c:	8809883a 	mov	r4,r17
 8009a20:	dc800015 	stw	r18,0(sp)
 8009a24:	800b883a 	mov	r5,r16
 8009a28:	980d883a 	mov	r6,r19
 8009a2c:	100f883a 	mov	r7,r2
 8009a30:	a03ee83a 	callr	r20
 8009a34:	00ffffc4 	movi	r3,-1
 8009a38:	10c0031e 	bne	r2,r3,8009a48 <wcrtomb+0x74>
 8009a3c:	90000015 	stw	zero,0(r18)
 8009a40:	00c02284 	movi	r3,138
 8009a44:	88c00015 	stw	r3,0(r17)
 8009a48:	dfc00917 	ldw	ra,36(sp)
 8009a4c:	dd000817 	ldw	r20,32(sp)
 8009a50:	dcc00717 	ldw	r19,28(sp)
 8009a54:	dc800617 	ldw	r18,24(sp)
 8009a58:	dc400517 	ldw	r17,20(sp)
 8009a5c:	dc000417 	ldw	r16,16(sp)
 8009a60:	dec00a04 	addi	sp,sp,40
 8009a64:	f800283a 	ret
 8009a68:	00820074 	movhi	r2,2049
 8009a6c:	10bdb404 	addi	r2,r2,-2352
 8009a70:	14000017 	ldw	r16,0(r2)
 8009a74:	80057500 	call	8005750 <__locale_charset>
 8009a78:	8809883a 	mov	r4,r17
 8009a7c:	dc800015 	stw	r18,0(sp)
 8009a80:	d9400104 	addi	r5,sp,4
 8009a84:	000d883a 	mov	r6,zero
 8009a88:	100f883a 	mov	r7,r2
 8009a8c:	803ee83a 	callr	r16
 8009a90:	003fe806 	br	8009a34 <__flash_exceptions_start+0xf7e08a14>

08009a94 <__ascii_wctomb>:
 8009a94:	28000526 	beq	r5,zero,8009aac <__ascii_wctomb+0x18>
 8009a98:	00803fc4 	movi	r2,255
 8009a9c:	11800536 	bltu	r2,r6,8009ab4 <__ascii_wctomb+0x20>
 8009aa0:	29800005 	stb	r6,0(r5)
 8009aa4:	00800044 	movi	r2,1
 8009aa8:	f800283a 	ret
 8009aac:	0005883a 	mov	r2,zero
 8009ab0:	f800283a 	ret
 8009ab4:	00802284 	movi	r2,138
 8009ab8:	20800015 	stw	r2,0(r4)
 8009abc:	00bfffc4 	movi	r2,-1
 8009ac0:	f800283a 	ret

08009ac4 <_wctomb_r>:
 8009ac4:	00820074 	movhi	r2,2049
 8009ac8:	defff904 	addi	sp,sp,-28
 8009acc:	10bdb404 	addi	r2,r2,-2352
 8009ad0:	dfc00615 	stw	ra,24(sp)
 8009ad4:	dc400515 	stw	r17,20(sp)
 8009ad8:	dc000415 	stw	r16,16(sp)
 8009adc:	3823883a 	mov	r17,r7
 8009ae0:	14000017 	ldw	r16,0(r2)
 8009ae4:	d9000115 	stw	r4,4(sp)
 8009ae8:	d9400215 	stw	r5,8(sp)
 8009aec:	d9800315 	stw	r6,12(sp)
 8009af0:	80057500 	call	8005750 <__locale_charset>
 8009af4:	d9000117 	ldw	r4,4(sp)
 8009af8:	d9400217 	ldw	r5,8(sp)
 8009afc:	d9800317 	ldw	r6,12(sp)
 8009b00:	dc400015 	stw	r17,0(sp)
 8009b04:	100f883a 	mov	r7,r2
 8009b08:	803ee83a 	callr	r16
 8009b0c:	dfc00617 	ldw	ra,24(sp)
 8009b10:	dc400517 	ldw	r17,20(sp)
 8009b14:	dc000417 	ldw	r16,16(sp)
 8009b18:	dec00704 	addi	sp,sp,28
 8009b1c:	f800283a 	ret

08009b20 <__udivdi3>:
 8009b20:	defff504 	addi	sp,sp,-44
 8009b24:	dcc00415 	stw	r19,16(sp)
 8009b28:	dc000115 	stw	r16,4(sp)
 8009b2c:	dfc00a15 	stw	ra,40(sp)
 8009b30:	df000915 	stw	fp,36(sp)
 8009b34:	ddc00815 	stw	r23,32(sp)
 8009b38:	dd800715 	stw	r22,28(sp)
 8009b3c:	dd400615 	stw	r21,24(sp)
 8009b40:	dd000515 	stw	r20,20(sp)
 8009b44:	dc800315 	stw	r18,12(sp)
 8009b48:	dc400215 	stw	r17,8(sp)
 8009b4c:	2027883a 	mov	r19,r4
 8009b50:	2821883a 	mov	r16,r5
 8009b54:	3800421e 	bne	r7,zero,8009c60 <__udivdi3+0x140>
 8009b58:	3025883a 	mov	r18,r6
 8009b5c:	2023883a 	mov	r17,r4
 8009b60:	2980542e 	bgeu	r5,r6,8009cb4 <__udivdi3+0x194>
 8009b64:	00bfffd4 	movui	r2,65535
 8009b68:	282d883a 	mov	r22,r5
 8009b6c:	1180a836 	bltu	r2,r6,8009e10 <__udivdi3+0x2f0>
 8009b70:	00803fc4 	movi	r2,255
 8009b74:	1181422e 	bgeu	r2,r6,800a080 <__udivdi3+0x560>
 8009b78:	00800204 	movi	r2,8
 8009b7c:	1007883a 	mov	r3,r2
 8009b80:	3084d83a 	srl	r2,r6,r2
 8009b84:	01020074 	movhi	r4,2049
 8009b88:	213a9604 	addi	r4,r4,-5544
 8009b8c:	2085883a 	add	r2,r4,r2
 8009b90:	10800003 	ldbu	r2,0(r2)
 8009b94:	10c7883a 	add	r3,r2,r3
 8009b98:	00800804 	movi	r2,32
 8009b9c:	10c5c83a 	sub	r2,r2,r3
 8009ba0:	10000526 	beq	r2,zero,8009bb8 <__udivdi3+0x98>
 8009ba4:	80a0983a 	sll	r16,r16,r2
 8009ba8:	98c6d83a 	srl	r3,r19,r3
 8009bac:	30a4983a 	sll	r18,r6,r2
 8009bb0:	98a2983a 	sll	r17,r19,r2
 8009bb4:	80ecb03a 	or	r22,r16,r3
 8009bb8:	902ad43a 	srli	r21,r18,16
 8009bbc:	b009883a 	mov	r4,r22
 8009bc0:	953fffcc 	andi	r20,r18,65535
 8009bc4:	a80b883a 	mov	r5,r21
 8009bc8:	800a7940 	call	800a794 <__umodsi3>
 8009bcc:	b009883a 	mov	r4,r22
 8009bd0:	a80b883a 	mov	r5,r21
 8009bd4:	1027883a 	mov	r19,r2
 8009bd8:	800a78c0 	call	800a78c <__udivsi3>
 8009bdc:	1021883a 	mov	r16,r2
 8009be0:	8806d43a 	srli	r3,r17,16
 8009be4:	9804943a 	slli	r2,r19,16
 8009be8:	8527383a 	mul	r19,r16,r20
 8009bec:	10c4b03a 	or	r2,r2,r3
 8009bf0:	14c0052e 	bgeu	r2,r19,8009c08 <__udivdi3+0xe8>
 8009bf4:	1485883a 	add	r2,r2,r18
 8009bf8:	80ffffc4 	addi	r3,r16,-1
 8009bfc:	14800136 	bltu	r2,r18,8009c04 <__udivdi3+0xe4>
 8009c00:	14c13436 	bltu	r2,r19,800a0d4 <__udivdi3+0x5b4>
 8009c04:	1821883a 	mov	r16,r3
 8009c08:	14e7c83a 	sub	r19,r2,r19
 8009c0c:	9809883a 	mov	r4,r19
 8009c10:	a80b883a 	mov	r5,r21
 8009c14:	800a7940 	call	800a794 <__umodsi3>
 8009c18:	102d883a 	mov	r22,r2
 8009c1c:	9809883a 	mov	r4,r19
 8009c20:	a80b883a 	mov	r5,r21
 8009c24:	800a78c0 	call	800a78c <__udivsi3>
 8009c28:	b02c943a 	slli	r22,r22,16
 8009c2c:	1529383a 	mul	r20,r2,r20
 8009c30:	8c7fffcc 	andi	r17,r17,65535
 8009c34:	b462b03a 	or	r17,r22,r17
 8009c38:	8d00052e 	bgeu	r17,r20,8009c50 <__udivdi3+0x130>
 8009c3c:	8ca3883a 	add	r17,r17,r18
 8009c40:	10ffffc4 	addi	r3,r2,-1
 8009c44:	8c80f636 	bltu	r17,r18,800a020 <__udivdi3+0x500>
 8009c48:	8d00f52e 	bgeu	r17,r20,800a020 <__udivdi3+0x500>
 8009c4c:	10bfff84 	addi	r2,r2,-2
 8009c50:	8020943a 	slli	r16,r16,16
 8009c54:	0007883a 	mov	r3,zero
 8009c58:	1404b03a 	or	r2,r2,r16
 8009c5c:	00005b06 	br	8009dcc <__udivdi3+0x2ac>
 8009c60:	29c05836 	bltu	r5,r7,8009dc4 <__udivdi3+0x2a4>
 8009c64:	00bfffd4 	movui	r2,65535
 8009c68:	11c0642e 	bgeu	r2,r7,8009dfc <__udivdi3+0x2dc>
 8009c6c:	00804034 	movhi	r2,256
 8009c70:	10bfffc4 	addi	r2,r2,-1
 8009c74:	11c0f32e 	bgeu	r2,r7,800a044 <__udivdi3+0x524>
 8009c78:	00c00604 	movi	r3,24
 8009c7c:	180b883a 	mov	r5,r3
 8009c80:	38c6d83a 	srl	r3,r7,r3
 8009c84:	00820074 	movhi	r2,2049
 8009c88:	10ba9604 	addi	r2,r2,-5544
 8009c8c:	10c7883a 	add	r3,r2,r3
 8009c90:	18c00003 	ldbu	r3,0(r3)
 8009c94:	01000804 	movi	r4,32
 8009c98:	1947883a 	add	r3,r3,r5
 8009c9c:	20e5c83a 	sub	r18,r4,r3
 8009ca0:	9000661e 	bne	r18,zero,8009e3c <__udivdi3+0x31c>
 8009ca4:	3c00f936 	bltu	r7,r16,800a08c <__udivdi3+0x56c>
 8009ca8:	9985403a 	cmpgeu	r2,r19,r6
 8009cac:	0007883a 	mov	r3,zero
 8009cb0:	00004606 	br	8009dcc <__udivdi3+0x2ac>
 8009cb4:	3000041e 	bne	r6,zero,8009cc8 <__udivdi3+0x1a8>
 8009cb8:	01000044 	movi	r4,1
 8009cbc:	000b883a 	mov	r5,zero
 8009cc0:	800a78c0 	call	800a78c <__udivsi3>
 8009cc4:	1025883a 	mov	r18,r2
 8009cc8:	00bfffd4 	movui	r2,65535
 8009ccc:	1480562e 	bgeu	r2,r18,8009e28 <__udivdi3+0x308>
 8009cd0:	00804034 	movhi	r2,256
 8009cd4:	10bfffc4 	addi	r2,r2,-1
 8009cd8:	1480e32e 	bgeu	r2,r18,800a068 <__udivdi3+0x548>
 8009cdc:	00800604 	movi	r2,24
 8009ce0:	1007883a 	mov	r3,r2
 8009ce4:	9084d83a 	srl	r2,r18,r2
 8009ce8:	01020074 	movhi	r4,2049
 8009cec:	213a9604 	addi	r4,r4,-5544
 8009cf0:	2085883a 	add	r2,r4,r2
 8009cf4:	10800003 	ldbu	r2,0(r2)
 8009cf8:	10c5883a 	add	r2,r2,r3
 8009cfc:	00c00804 	movi	r3,32
 8009d00:	1887c83a 	sub	r3,r3,r2
 8009d04:	1800911e 	bne	r3,zero,8009f4c <__udivdi3+0x42c>
 8009d08:	9028d43a 	srli	r20,r18,16
 8009d0c:	84a1c83a 	sub	r16,r16,r18
 8009d10:	957fffcc 	andi	r21,r18,65535
 8009d14:	00c00044 	movi	r3,1
 8009d18:	8009883a 	mov	r4,r16
 8009d1c:	a00b883a 	mov	r5,r20
 8009d20:	d8c00015 	stw	r3,0(sp)
 8009d24:	800a7940 	call	800a794 <__umodsi3>
 8009d28:	8009883a 	mov	r4,r16
 8009d2c:	a00b883a 	mov	r5,r20
 8009d30:	1027883a 	mov	r19,r2
 8009d34:	800a78c0 	call	800a78c <__udivsi3>
 8009d38:	1021883a 	mov	r16,r2
 8009d3c:	880cd43a 	srli	r6,r17,16
 8009d40:	9804943a 	slli	r2,r19,16
 8009d44:	8567383a 	mul	r19,r16,r21
 8009d48:	d8c00017 	ldw	r3,0(sp)
 8009d4c:	1188b03a 	or	r4,r2,r6
 8009d50:	24c0052e 	bgeu	r4,r19,8009d68 <__udivdi3+0x248>
 8009d54:	2489883a 	add	r4,r4,r18
 8009d58:	80bfffc4 	addi	r2,r16,-1
 8009d5c:	24800136 	bltu	r4,r18,8009d64 <__udivdi3+0x244>
 8009d60:	24c0d936 	bltu	r4,r19,800a0c8 <__udivdi3+0x5a8>
 8009d64:	1021883a 	mov	r16,r2
 8009d68:	24e7c83a 	sub	r19,r4,r19
 8009d6c:	9809883a 	mov	r4,r19
 8009d70:	a00b883a 	mov	r5,r20
 8009d74:	d8c00015 	stw	r3,0(sp)
 8009d78:	800a7940 	call	800a794 <__umodsi3>
 8009d7c:	102d883a 	mov	r22,r2
 8009d80:	9809883a 	mov	r4,r19
 8009d84:	a00b883a 	mov	r5,r20
 8009d88:	800a78c0 	call	800a78c <__udivsi3>
 8009d8c:	b02c943a 	slli	r22,r22,16
 8009d90:	156b383a 	mul	r21,r2,r21
 8009d94:	8c7fffcc 	andi	r17,r17,65535
 8009d98:	b462b03a 	or	r17,r22,r17
 8009d9c:	d8c00017 	ldw	r3,0(sp)
 8009da0:	8d40052e 	bgeu	r17,r21,8009db8 <__udivdi3+0x298>
 8009da4:	8ca3883a 	add	r17,r17,r18
 8009da8:	113fffc4 	addi	r4,r2,-1
 8009dac:	8c809a36 	bltu	r17,r18,800a018 <__udivdi3+0x4f8>
 8009db0:	8d40992e 	bgeu	r17,r21,800a018 <__udivdi3+0x4f8>
 8009db4:	10bfff84 	addi	r2,r2,-2
 8009db8:	8020943a 	slli	r16,r16,16
 8009dbc:	1404b03a 	or	r2,r2,r16
 8009dc0:	00000206 	br	8009dcc <__udivdi3+0x2ac>
 8009dc4:	0007883a 	mov	r3,zero
 8009dc8:	0005883a 	mov	r2,zero
 8009dcc:	dfc00a17 	ldw	ra,40(sp)
 8009dd0:	df000917 	ldw	fp,36(sp)
 8009dd4:	ddc00817 	ldw	r23,32(sp)
 8009dd8:	dd800717 	ldw	r22,28(sp)
 8009ddc:	dd400617 	ldw	r21,24(sp)
 8009de0:	dd000517 	ldw	r20,20(sp)
 8009de4:	dcc00417 	ldw	r19,16(sp)
 8009de8:	dc800317 	ldw	r18,12(sp)
 8009dec:	dc400217 	ldw	r17,8(sp)
 8009df0:	dc000117 	ldw	r16,4(sp)
 8009df4:	dec00b04 	addi	sp,sp,44
 8009df8:	f800283a 	ret
 8009dfc:	00803fc4 	movi	r2,255
 8009e00:	11c0932e 	bgeu	r2,r7,800a050 <__udivdi3+0x530>
 8009e04:	00c00204 	movi	r3,8
 8009e08:	180b883a 	mov	r5,r3
 8009e0c:	003f9c06 	br	8009c80 <__flash_exceptions_start+0xf7e08c60>
 8009e10:	00804034 	movhi	r2,256
 8009e14:	10bfffc4 	addi	r2,r2,-1
 8009e18:	1180902e 	bgeu	r2,r6,800a05c <__udivdi3+0x53c>
 8009e1c:	00800604 	movi	r2,24
 8009e20:	1007883a 	mov	r3,r2
 8009e24:	003f5606 	br	8009b80 <__flash_exceptions_start+0xf7e08b60>
 8009e28:	00803fc4 	movi	r2,255
 8009e2c:	1480912e 	bgeu	r2,r18,800a074 <__udivdi3+0x554>
 8009e30:	00800204 	movi	r2,8
 8009e34:	1007883a 	mov	r3,r2
 8009e38:	003faa06 	br	8009ce4 <__flash_exceptions_start+0xf7e08cc4>
 8009e3c:	30eed83a 	srl	r23,r6,r3
 8009e40:	3c8e983a 	sll	r7,r7,r18
 8009e44:	80f8d83a 	srl	fp,r16,r3
 8009e48:	98c6d83a 	srl	r3,r19,r3
 8009e4c:	3deeb03a 	or	r23,r7,r23
 8009e50:	b828d43a 	srli	r20,r23,16
 8009e54:	84a0983a 	sll	r16,r16,r18
 8009e58:	e009883a 	mov	r4,fp
 8009e5c:	a00b883a 	mov	r5,r20
 8009e60:	80e2b03a 	or	r17,r16,r3
 8009e64:	34aa983a 	sll	r21,r6,r18
 8009e68:	800a7940 	call	800a794 <__umodsi3>
 8009e6c:	e009883a 	mov	r4,fp
 8009e70:	a00b883a 	mov	r5,r20
 8009e74:	102d883a 	mov	r22,r2
 8009e78:	800a78c0 	call	800a78c <__udivsi3>
 8009e7c:	1021883a 	mov	r16,r2
 8009e80:	bf3fffcc 	andi	fp,r23,65535
 8009e84:	b004943a 	slli	r2,r22,16
 8009e88:	8808d43a 	srli	r4,r17,16
 8009e8c:	872d383a 	mul	r22,r16,fp
 8009e90:	1104b03a 	or	r2,r2,r4
 8009e94:	1580042e 	bgeu	r2,r22,8009ea8 <__udivdi3+0x388>
 8009e98:	15c5883a 	add	r2,r2,r23
 8009e9c:	80ffffc4 	addi	r3,r16,-1
 8009ea0:	15c0812e 	bgeu	r2,r23,800a0a8 <__udivdi3+0x588>
 8009ea4:	1821883a 	mov	r16,r3
 8009ea8:	15adc83a 	sub	r22,r2,r22
 8009eac:	b009883a 	mov	r4,r22
 8009eb0:	a00b883a 	mov	r5,r20
 8009eb4:	800a7940 	call	800a794 <__umodsi3>
 8009eb8:	a00b883a 	mov	r5,r20
 8009ebc:	b009883a 	mov	r4,r22
 8009ec0:	d8800015 	stw	r2,0(sp)
 8009ec4:	800a78c0 	call	800a78c <__udivsi3>
 8009ec8:	d8c00017 	ldw	r3,0(sp)
 8009ecc:	170b383a 	mul	r5,r2,fp
 8009ed0:	8c7fffcc 	andi	r17,r17,65535
 8009ed4:	1806943a 	slli	r3,r3,16
 8009ed8:	1c46b03a 	or	r3,r3,r17
 8009edc:	1940042e 	bgeu	r3,r5,8009ef0 <__udivdi3+0x3d0>
 8009ee0:	1dc7883a 	add	r3,r3,r23
 8009ee4:	113fffc4 	addi	r4,r2,-1
 8009ee8:	1dc06b2e 	bgeu	r3,r23,800a098 <__udivdi3+0x578>
 8009eec:	2005883a 	mov	r2,r4
 8009ef0:	8020943a 	slli	r16,r16,16
 8009ef4:	a9ffffcc 	andi	r7,r21,65535
 8009ef8:	a82ad43a 	srli	r21,r21,16
 8009efc:	1404b03a 	or	r2,r2,r16
 8009f00:	113fffcc 	andi	r4,r2,65535
 8009f04:	100cd43a 	srli	r6,r2,16
 8009f08:	21d3383a 	mul	r9,r4,r7
 8009f0c:	2549383a 	mul	r4,r4,r21
 8009f10:	31cf383a 	mul	r7,r6,r7
 8009f14:	4810d43a 	srli	r8,r9,16
 8009f18:	1947c83a 	sub	r3,r3,r5
 8009f1c:	3909883a 	add	r4,r7,r4
 8009f20:	2209883a 	add	r4,r4,r8
 8009f24:	354d383a 	mul	r6,r6,r21
 8009f28:	21c0022e 	bgeu	r4,r7,8009f34 <__udivdi3+0x414>
 8009f2c:	01400074 	movhi	r5,1
 8009f30:	314d883a 	add	r6,r6,r5
 8009f34:	202ad43a 	srli	r21,r4,16
 8009f38:	354d883a 	add	r6,r6,r21
 8009f3c:	19803f36 	bltu	r3,r6,800a03c <__udivdi3+0x51c>
 8009f40:	19803926 	beq	r3,r6,800a028 <__udivdi3+0x508>
 8009f44:	0007883a 	mov	r3,zero
 8009f48:	003fa006 	br	8009dcc <__flash_exceptions_start+0xf7e08dac>
 8009f4c:	90e4983a 	sll	r18,r18,r3
 8009f50:	80aad83a 	srl	r21,r16,r2
 8009f54:	80e0983a 	sll	r16,r16,r3
 8009f58:	9028d43a 	srli	r20,r18,16
 8009f5c:	9884d83a 	srl	r2,r19,r2
 8009f60:	a809883a 	mov	r4,r21
 8009f64:	a00b883a 	mov	r5,r20
 8009f68:	80acb03a 	or	r22,r16,r2
 8009f6c:	98e2983a 	sll	r17,r19,r3
 8009f70:	800a7940 	call	800a794 <__umodsi3>
 8009f74:	a809883a 	mov	r4,r21
 8009f78:	a00b883a 	mov	r5,r20
 8009f7c:	1021883a 	mov	r16,r2
 8009f80:	800a78c0 	call	800a78c <__udivsi3>
 8009f84:	957fffcc 	andi	r21,r18,65535
 8009f88:	8020943a 	slli	r16,r16,16
 8009f8c:	b00ad43a 	srli	r5,r22,16
 8009f90:	1567383a 	mul	r19,r2,r21
 8009f94:	102f883a 	mov	r23,r2
 8009f98:	8148b03a 	or	r4,r16,r5
 8009f9c:	24c0062e 	bgeu	r4,r19,8009fb8 <__udivdi3+0x498>
 8009fa0:	2489883a 	add	r4,r4,r18
 8009fa4:	10bfffc4 	addi	r2,r2,-1
 8009fa8:	24804536 	bltu	r4,r18,800a0c0 <__udivdi3+0x5a0>
 8009fac:	24c0442e 	bgeu	r4,r19,800a0c0 <__udivdi3+0x5a0>
 8009fb0:	bdffff84 	addi	r23,r23,-2
 8009fb4:	2489883a 	add	r4,r4,r18
 8009fb8:	24e7c83a 	sub	r19,r4,r19
 8009fbc:	9809883a 	mov	r4,r19
 8009fc0:	a00b883a 	mov	r5,r20
 8009fc4:	800a7940 	call	800a794 <__umodsi3>
 8009fc8:	1021883a 	mov	r16,r2
 8009fcc:	9809883a 	mov	r4,r19
 8009fd0:	a00b883a 	mov	r5,r20
 8009fd4:	800a78c0 	call	800a78c <__udivsi3>
 8009fd8:	8020943a 	slli	r16,r16,16
 8009fdc:	1007883a 	mov	r3,r2
 8009fe0:	1545383a 	mul	r2,r2,r21
 8009fe4:	b13fffcc 	andi	r4,r22,65535
 8009fe8:	8108b03a 	or	r4,r16,r4
 8009fec:	2080062e 	bgeu	r4,r2,800a008 <__udivdi3+0x4e8>
 8009ff0:	2489883a 	add	r4,r4,r18
 8009ff4:	197fffc4 	addi	r5,r3,-1
 8009ff8:	24802f36 	bltu	r4,r18,800a0b8 <__udivdi3+0x598>
 8009ffc:	20802e2e 	bgeu	r4,r2,800a0b8 <__udivdi3+0x598>
 800a000:	18ffff84 	addi	r3,r3,-2
 800a004:	2489883a 	add	r4,r4,r18
 800a008:	b82e943a 	slli	r23,r23,16
 800a00c:	20a1c83a 	sub	r16,r4,r2
 800a010:	1dc6b03a 	or	r3,r3,r23
 800a014:	003f4006 	br	8009d18 <__flash_exceptions_start+0xf7e08cf8>
 800a018:	2005883a 	mov	r2,r4
 800a01c:	003f6606 	br	8009db8 <__flash_exceptions_start+0xf7e08d98>
 800a020:	1805883a 	mov	r2,r3
 800a024:	003f0a06 	br	8009c50 <__flash_exceptions_start+0xf7e08c30>
 800a028:	2006943a 	slli	r3,r4,16
 800a02c:	9c88983a 	sll	r4,r19,r18
 800a030:	4a7fffcc 	andi	r9,r9,65535
 800a034:	1a47883a 	add	r3,r3,r9
 800a038:	20ffc22e 	bgeu	r4,r3,8009f44 <__flash_exceptions_start+0xf7e08f24>
 800a03c:	10bfffc4 	addi	r2,r2,-1
 800a040:	003fc006 	br	8009f44 <__flash_exceptions_start+0xf7e08f24>
 800a044:	00c00404 	movi	r3,16
 800a048:	180b883a 	mov	r5,r3
 800a04c:	003f0c06 	br	8009c80 <__flash_exceptions_start+0xf7e08c60>
 800a050:	0007883a 	mov	r3,zero
 800a054:	000b883a 	mov	r5,zero
 800a058:	003f0906 	br	8009c80 <__flash_exceptions_start+0xf7e08c60>
 800a05c:	00800404 	movi	r2,16
 800a060:	1007883a 	mov	r3,r2
 800a064:	003ec606 	br	8009b80 <__flash_exceptions_start+0xf7e08b60>
 800a068:	00800404 	movi	r2,16
 800a06c:	1007883a 	mov	r3,r2
 800a070:	003f1c06 	br	8009ce4 <__flash_exceptions_start+0xf7e08cc4>
 800a074:	0005883a 	mov	r2,zero
 800a078:	0007883a 	mov	r3,zero
 800a07c:	003f1906 	br	8009ce4 <__flash_exceptions_start+0xf7e08cc4>
 800a080:	0005883a 	mov	r2,zero
 800a084:	0007883a 	mov	r3,zero
 800a088:	003ebd06 	br	8009b80 <__flash_exceptions_start+0xf7e08b60>
 800a08c:	0007883a 	mov	r3,zero
 800a090:	00800044 	movi	r2,1
 800a094:	003f4d06 	br	8009dcc <__flash_exceptions_start+0xf7e08dac>
 800a098:	197f942e 	bgeu	r3,r5,8009eec <__flash_exceptions_start+0xf7e08ecc>
 800a09c:	10bfff84 	addi	r2,r2,-2
 800a0a0:	1dc7883a 	add	r3,r3,r23
 800a0a4:	003f9206 	br	8009ef0 <__flash_exceptions_start+0xf7e08ed0>
 800a0a8:	15bf7e2e 	bgeu	r2,r22,8009ea4 <__flash_exceptions_start+0xf7e08e84>
 800a0ac:	843fff84 	addi	r16,r16,-2
 800a0b0:	15c5883a 	add	r2,r2,r23
 800a0b4:	003f7c06 	br	8009ea8 <__flash_exceptions_start+0xf7e08e88>
 800a0b8:	2807883a 	mov	r3,r5
 800a0bc:	003fd206 	br	800a008 <__flash_exceptions_start+0xf7e08fe8>
 800a0c0:	102f883a 	mov	r23,r2
 800a0c4:	003fbc06 	br	8009fb8 <__flash_exceptions_start+0xf7e08f98>
 800a0c8:	843fff84 	addi	r16,r16,-2
 800a0cc:	2489883a 	add	r4,r4,r18
 800a0d0:	003f2506 	br	8009d68 <__flash_exceptions_start+0xf7e08d48>
 800a0d4:	843fff84 	addi	r16,r16,-2
 800a0d8:	1485883a 	add	r2,r2,r18
 800a0dc:	003eca06 	br	8009c08 <__flash_exceptions_start+0xf7e08be8>

0800a0e0 <__umoddi3>:
 800a0e0:	defff404 	addi	sp,sp,-48
 800a0e4:	ddc00915 	stw	r23,36(sp)
 800a0e8:	dc400315 	stw	r17,12(sp)
 800a0ec:	dc000215 	stw	r16,8(sp)
 800a0f0:	dfc00b15 	stw	ra,44(sp)
 800a0f4:	df000a15 	stw	fp,40(sp)
 800a0f8:	dd800815 	stw	r22,32(sp)
 800a0fc:	dd400715 	stw	r21,28(sp)
 800a100:	dd000615 	stw	r20,24(sp)
 800a104:	dcc00515 	stw	r19,20(sp)
 800a108:	dc800415 	stw	r18,16(sp)
 800a10c:	2021883a 	mov	r16,r4
 800a110:	2823883a 	mov	r17,r5
 800a114:	282f883a 	mov	r23,r5
 800a118:	3800381e 	bne	r7,zero,800a1fc <__umoddi3+0x11c>
 800a11c:	3027883a 	mov	r19,r6
 800a120:	2029883a 	mov	r20,r4
 800a124:	29804e2e 	bgeu	r5,r6,800a260 <__umoddi3+0x180>
 800a128:	00bfffd4 	movui	r2,65535
 800a12c:	11809c36 	bltu	r2,r6,800a3a0 <__umoddi3+0x2c0>
 800a130:	00803fc4 	movi	r2,255
 800a134:	11813b2e 	bgeu	r2,r6,800a624 <__umoddi3+0x544>
 800a138:	01400204 	movi	r5,8
 800a13c:	2805883a 	mov	r2,r5
 800a140:	314ad83a 	srl	r5,r6,r5
 800a144:	00c20074 	movhi	r3,2049
 800a148:	18fa9604 	addi	r3,r3,-5544
 800a14c:	194b883a 	add	r5,r3,r5
 800a150:	29000003 	ldbu	r4,0(r5)
 800a154:	2089883a 	add	r4,r4,r2
 800a158:	00800804 	movi	r2,32
 800a15c:	1105c83a 	sub	r2,r2,r4
 800a160:	1000ec26 	beq	r2,zero,800a514 <__umoddi3+0x434>
 800a164:	88a2983a 	sll	r17,r17,r2
 800a168:	8108d83a 	srl	r4,r16,r4
 800a16c:	30a6983a 	sll	r19,r6,r2
 800a170:	80a8983a 	sll	r20,r16,r2
 800a174:	1025883a 	mov	r18,r2
 800a178:	892eb03a 	or	r23,r17,r4
 800a17c:	982cd43a 	srli	r22,r19,16
 800a180:	b809883a 	mov	r4,r23
 800a184:	9d7fffcc 	andi	r21,r19,65535
 800a188:	b00b883a 	mov	r5,r22
 800a18c:	800a7940 	call	800a794 <__umodsi3>
 800a190:	b809883a 	mov	r4,r23
 800a194:	b00b883a 	mov	r5,r22
 800a198:	1021883a 	mov	r16,r2
 800a19c:	800a78c0 	call	800a78c <__udivsi3>
 800a1a0:	8020943a 	slli	r16,r16,16
 800a1a4:	a00cd43a 	srli	r6,r20,16
 800a1a8:	1545383a 	mul	r2,r2,r21
 800a1ac:	8188b03a 	or	r4,r16,r6
 800a1b0:	2080042e 	bgeu	r4,r2,800a1c4 <__umoddi3+0xe4>
 800a1b4:	24c9883a 	add	r4,r4,r19
 800a1b8:	24c00236 	bltu	r4,r19,800a1c4 <__umoddi3+0xe4>
 800a1bc:	2080012e 	bgeu	r4,r2,800a1c4 <__umoddi3+0xe4>
 800a1c0:	24c9883a 	add	r4,r4,r19
 800a1c4:	20a3c83a 	sub	r17,r4,r2
 800a1c8:	8809883a 	mov	r4,r17
 800a1cc:	b00b883a 	mov	r5,r22
 800a1d0:	800a7940 	call	800a794 <__umodsi3>
 800a1d4:	8809883a 	mov	r4,r17
 800a1d8:	b00b883a 	mov	r5,r22
 800a1dc:	1021883a 	mov	r16,r2
 800a1e0:	800a78c0 	call	800a78c <__udivsi3>
 800a1e4:	8006943a 	slli	r3,r16,16
 800a1e8:	1545383a 	mul	r2,r2,r21
 800a1ec:	a13fffcc 	andi	r4,r20,65535
 800a1f0:	1906b03a 	or	r3,r3,r4
 800a1f4:	1880532e 	bgeu	r3,r2,800a344 <__umoddi3+0x264>
 800a1f8:	00004e06 	br	800a334 <__umoddi3+0x254>
 800a1fc:	29c05536 	bltu	r5,r7,800a354 <__umoddi3+0x274>
 800a200:	00bfffd4 	movui	r2,65535
 800a204:	11c0612e 	bgeu	r2,r7,800a38c <__umoddi3+0x2ac>
 800a208:	00804034 	movhi	r2,256
 800a20c:	10bfffc4 	addi	r2,r2,-1
 800a210:	11c0f82e 	bgeu	r2,r7,800a5f4 <__umoddi3+0x514>
 800a214:	01400604 	movi	r5,24
 800a218:	282b883a 	mov	r21,r5
 800a21c:	394ad83a 	srl	r5,r7,r5
 800a220:	00c20074 	movhi	r3,2049
 800a224:	18fa9604 	addi	r3,r3,-5544
 800a228:	194b883a 	add	r5,r3,r5
 800a22c:	28800003 	ldbu	r2,0(r5)
 800a230:	00c00804 	movi	r3,32
 800a234:	156b883a 	add	r21,r2,r21
 800a238:	1d69c83a 	sub	r20,r3,r21
 800a23c:	a000631e 	bne	r20,zero,800a3cc <__umoddi3+0x2ec>
 800a240:	3c400136 	bltu	r7,r17,800a248 <__umoddi3+0x168>
 800a244:	81810436 	bltu	r16,r6,800a658 <__umoddi3+0x578>
 800a248:	8185c83a 	sub	r2,r16,r6
 800a24c:	89e3c83a 	sub	r17,r17,r7
 800a250:	8087803a 	cmpltu	r3,r16,r2
 800a254:	88efc83a 	sub	r23,r17,r3
 800a258:	b807883a 	mov	r3,r23
 800a25c:	00003f06 	br	800a35c <__umoddi3+0x27c>
 800a260:	3000041e 	bne	r6,zero,800a274 <__umoddi3+0x194>
 800a264:	01000044 	movi	r4,1
 800a268:	000b883a 	mov	r5,zero
 800a26c:	800a78c0 	call	800a78c <__udivsi3>
 800a270:	1027883a 	mov	r19,r2
 800a274:	00bfffd4 	movui	r2,65535
 800a278:	14c04f2e 	bgeu	r2,r19,800a3b8 <__umoddi3+0x2d8>
 800a27c:	00804034 	movhi	r2,256
 800a280:	10bfffc4 	addi	r2,r2,-1
 800a284:	14c0e42e 	bgeu	r2,r19,800a618 <__umoddi3+0x538>
 800a288:	00800604 	movi	r2,24
 800a28c:	1007883a 	mov	r3,r2
 800a290:	9884d83a 	srl	r2,r19,r2
 800a294:	01020074 	movhi	r4,2049
 800a298:	213a9604 	addi	r4,r4,-5544
 800a29c:	2085883a 	add	r2,r4,r2
 800a2a0:	11000003 	ldbu	r4,0(r2)
 800a2a4:	00800804 	movi	r2,32
 800a2a8:	20c7883a 	add	r3,r4,r3
 800a2ac:	10c5c83a 	sub	r2,r2,r3
 800a2b0:	10009a1e 	bne	r2,zero,800a51c <__umoddi3+0x43c>
 800a2b4:	982cd43a 	srli	r22,r19,16
 800a2b8:	8ce3c83a 	sub	r17,r17,r19
 800a2bc:	9c3fffcc 	andi	r16,r19,65535
 800a2c0:	0025883a 	mov	r18,zero
 800a2c4:	8809883a 	mov	r4,r17
 800a2c8:	b00b883a 	mov	r5,r22
 800a2cc:	800a7940 	call	800a794 <__umodsi3>
 800a2d0:	8809883a 	mov	r4,r17
 800a2d4:	b00b883a 	mov	r5,r22
 800a2d8:	102b883a 	mov	r21,r2
 800a2dc:	800a78c0 	call	800a78c <__udivsi3>
 800a2e0:	a806943a 	slli	r3,r21,16
 800a2e4:	a008d43a 	srli	r4,r20,16
 800a2e8:	1405383a 	mul	r2,r2,r16
 800a2ec:	190cb03a 	or	r6,r3,r4
 800a2f0:	3080032e 	bgeu	r6,r2,800a300 <__umoddi3+0x220>
 800a2f4:	34cd883a 	add	r6,r6,r19
 800a2f8:	34c00136 	bltu	r6,r19,800a300 <__umoddi3+0x220>
 800a2fc:	3080d436 	bltu	r6,r2,800a650 <__umoddi3+0x570>
 800a300:	30abc83a 	sub	r21,r6,r2
 800a304:	a809883a 	mov	r4,r21
 800a308:	b00b883a 	mov	r5,r22
 800a30c:	800a7940 	call	800a794 <__umodsi3>
 800a310:	1023883a 	mov	r17,r2
 800a314:	a809883a 	mov	r4,r21
 800a318:	b00b883a 	mov	r5,r22
 800a31c:	800a78c0 	call	800a78c <__udivsi3>
 800a320:	8822943a 	slli	r17,r17,16
 800a324:	1405383a 	mul	r2,r2,r16
 800a328:	a13fffcc 	andi	r4,r20,65535
 800a32c:	8906b03a 	or	r3,r17,r4
 800a330:	1880042e 	bgeu	r3,r2,800a344 <__umoddi3+0x264>
 800a334:	1cc7883a 	add	r3,r3,r19
 800a338:	1cc00236 	bltu	r3,r19,800a344 <__umoddi3+0x264>
 800a33c:	1880012e 	bgeu	r3,r2,800a344 <__umoddi3+0x264>
 800a340:	1cc7883a 	add	r3,r3,r19
 800a344:	1887c83a 	sub	r3,r3,r2
 800a348:	1c84d83a 	srl	r2,r3,r18
 800a34c:	0007883a 	mov	r3,zero
 800a350:	00000206 	br	800a35c <__umoddi3+0x27c>
 800a354:	2005883a 	mov	r2,r4
 800a358:	2807883a 	mov	r3,r5
 800a35c:	dfc00b17 	ldw	ra,44(sp)
 800a360:	df000a17 	ldw	fp,40(sp)
 800a364:	ddc00917 	ldw	r23,36(sp)
 800a368:	dd800817 	ldw	r22,32(sp)
 800a36c:	dd400717 	ldw	r21,28(sp)
 800a370:	dd000617 	ldw	r20,24(sp)
 800a374:	dcc00517 	ldw	r19,20(sp)
 800a378:	dc800417 	ldw	r18,16(sp)
 800a37c:	dc400317 	ldw	r17,12(sp)
 800a380:	dc000217 	ldw	r16,8(sp)
 800a384:	dec00c04 	addi	sp,sp,48
 800a388:	f800283a 	ret
 800a38c:	00803fc4 	movi	r2,255
 800a390:	11c0952e 	bgeu	r2,r7,800a5e8 <__umoddi3+0x508>
 800a394:	01400204 	movi	r5,8
 800a398:	282b883a 	mov	r21,r5
 800a39c:	003f9f06 	br	800a21c <__flash_exceptions_start+0xf7e091fc>
 800a3a0:	00804034 	movhi	r2,256
 800a3a4:	10bfffc4 	addi	r2,r2,-1
 800a3a8:	1180952e 	bgeu	r2,r6,800a600 <__umoddi3+0x520>
 800a3ac:	01400604 	movi	r5,24
 800a3b0:	2805883a 	mov	r2,r5
 800a3b4:	003f6206 	br	800a140 <__flash_exceptions_start+0xf7e09120>
 800a3b8:	00803fc4 	movi	r2,255
 800a3bc:	14c0932e 	bgeu	r2,r19,800a60c <__umoddi3+0x52c>
 800a3c0:	00800204 	movi	r2,8
 800a3c4:	1007883a 	mov	r3,r2
 800a3c8:	003fb106 	br	800a290 <__flash_exceptions_start+0xf7e09270>
 800a3cc:	3548d83a 	srl	r4,r6,r21
 800a3d0:	3d0e983a 	sll	r7,r7,r20
 800a3d4:	8d10983a 	sll	r8,r17,r20
 800a3d8:	8d6cd83a 	srl	r22,r17,r21
 800a3dc:	3922b03a 	or	r17,r7,r4
 800a3e0:	882ed43a 	srli	r23,r17,16
 800a3e4:	8564d83a 	srl	r18,r16,r21
 800a3e8:	b009883a 	mov	r4,r22
 800a3ec:	b80b883a 	mov	r5,r23
 800a3f0:	44a4b03a 	or	r18,r8,r18
 800a3f4:	3526983a 	sll	r19,r6,r20
 800a3f8:	800a7940 	call	800a794 <__umodsi3>
 800a3fc:	b009883a 	mov	r4,r22
 800a400:	b80b883a 	mov	r5,r23
 800a404:	1039883a 	mov	fp,r2
 800a408:	800a78c0 	call	800a78c <__udivsi3>
 800a40c:	102d883a 	mov	r22,r2
 800a410:	8a3fffcc 	andi	r8,r17,65535
 800a414:	e004943a 	slli	r2,fp,16
 800a418:	900cd43a 	srli	r6,r18,16
 800a41c:	b239383a 	mul	fp,r22,r8
 800a420:	8520983a 	sll	r16,r16,r20
 800a424:	118ab03a 	or	r5,r2,r6
 800a428:	2f00042e 	bgeu	r5,fp,800a43c <__umoddi3+0x35c>
 800a42c:	2c4b883a 	add	r5,r5,r17
 800a430:	b0bfffc4 	addi	r2,r22,-1
 800a434:	2c40822e 	bgeu	r5,r17,800a640 <__umoddi3+0x560>
 800a438:	102d883a 	mov	r22,r2
 800a43c:	2f39c83a 	sub	fp,r5,fp
 800a440:	e009883a 	mov	r4,fp
 800a444:	b80b883a 	mov	r5,r23
 800a448:	da000115 	stw	r8,4(sp)
 800a44c:	800a7940 	call	800a794 <__umodsi3>
 800a450:	e009883a 	mov	r4,fp
 800a454:	b80b883a 	mov	r5,r23
 800a458:	d8800015 	stw	r2,0(sp)
 800a45c:	800a78c0 	call	800a78c <__udivsi3>
 800a460:	d9800017 	ldw	r6,0(sp)
 800a464:	da000117 	ldw	r8,4(sp)
 800a468:	94bfffcc 	andi	r18,r18,65535
 800a46c:	300c943a 	slli	r6,r6,16
 800a470:	1209383a 	mul	r4,r2,r8
 800a474:	3490b03a 	or	r8,r6,r18
 800a478:	4100042e 	bgeu	r8,r4,800a48c <__umoddi3+0x3ac>
 800a47c:	4451883a 	add	r8,r8,r17
 800a480:	10ffffc4 	addi	r3,r2,-1
 800a484:	44406a2e 	bgeu	r8,r17,800a630 <__umoddi3+0x550>
 800a488:	1805883a 	mov	r2,r3
 800a48c:	b012943a 	slli	r9,r22,16
 800a490:	9abfffcc 	andi	r10,r19,65535
 800a494:	980ed43a 	srli	r7,r19,16
 800a498:	124ab03a 	or	r5,r2,r9
 800a49c:	2a7fffcc 	andi	r9,r5,65535
 800a4a0:	280ad43a 	srli	r5,r5,16
 800a4a4:	4a8d383a 	mul	r6,r9,r10
 800a4a8:	49d3383a 	mul	r9,r9,r7
 800a4ac:	2a95383a 	mul	r10,r5,r10
 800a4b0:	3004d43a 	srli	r2,r6,16
 800a4b4:	4111c83a 	sub	r8,r8,r4
 800a4b8:	5253883a 	add	r9,r10,r9
 800a4bc:	4893883a 	add	r9,r9,r2
 800a4c0:	29cb383a 	mul	r5,r5,r7
 800a4c4:	4a80022e 	bgeu	r9,r10,800a4d0 <__umoddi3+0x3f0>
 800a4c8:	00800074 	movhi	r2,1
 800a4cc:	288b883a 	add	r5,r5,r2
 800a4d0:	4808d43a 	srli	r4,r9,16
 800a4d4:	4812943a 	slli	r9,r9,16
 800a4d8:	31bfffcc 	andi	r6,r6,65535
 800a4dc:	290b883a 	add	r5,r5,r4
 800a4e0:	498d883a 	add	r6,r9,r6
 800a4e4:	41403a36 	bltu	r8,r5,800a5d0 <__umoddi3+0x4f0>
 800a4e8:	41405d26 	beq	r8,r5,800a660 <__umoddi3+0x580>
 800a4ec:	4149c83a 	sub	r4,r8,r5
 800a4f0:	300f883a 	mov	r7,r6
 800a4f4:	81cfc83a 	sub	r7,r16,r7
 800a4f8:	81c7803a 	cmpltu	r3,r16,r7
 800a4fc:	20c7c83a 	sub	r3,r4,r3
 800a500:	1d44983a 	sll	r2,r3,r21
 800a504:	3d0ed83a 	srl	r7,r7,r20
 800a508:	1d06d83a 	srl	r3,r3,r20
 800a50c:	11c4b03a 	or	r2,r2,r7
 800a510:	003f9206 	br	800a35c <__flash_exceptions_start+0xf7e0933c>
 800a514:	0025883a 	mov	r18,zero
 800a518:	003f1806 	br	800a17c <__flash_exceptions_start+0xf7e0915c>
 800a51c:	98a6983a 	sll	r19,r19,r2
 800a520:	88e8d83a 	srl	r20,r17,r3
 800a524:	80c6d83a 	srl	r3,r16,r3
 800a528:	982cd43a 	srli	r22,r19,16
 800a52c:	88a2983a 	sll	r17,r17,r2
 800a530:	a009883a 	mov	r4,r20
 800a534:	b00b883a 	mov	r5,r22
 800a538:	88eab03a 	or	r21,r17,r3
 800a53c:	1025883a 	mov	r18,r2
 800a540:	800a7940 	call	800a794 <__umodsi3>
 800a544:	a009883a 	mov	r4,r20
 800a548:	b00b883a 	mov	r5,r22
 800a54c:	1023883a 	mov	r17,r2
 800a550:	800a78c0 	call	800a78c <__udivsi3>
 800a554:	9f3fffcc 	andi	fp,r19,65535
 800a558:	8822943a 	slli	r17,r17,16
 800a55c:	a80ad43a 	srli	r5,r21,16
 800a560:	1705383a 	mul	r2,r2,fp
 800a564:	84a8983a 	sll	r20,r16,r18
 800a568:	8948b03a 	or	r4,r17,r5
 800a56c:	2080042e 	bgeu	r4,r2,800a580 <__umoddi3+0x4a0>
 800a570:	24c9883a 	add	r4,r4,r19
 800a574:	24c00236 	bltu	r4,r19,800a580 <__umoddi3+0x4a0>
 800a578:	2080012e 	bgeu	r4,r2,800a580 <__umoddi3+0x4a0>
 800a57c:	24c9883a 	add	r4,r4,r19
 800a580:	20afc83a 	sub	r23,r4,r2
 800a584:	b809883a 	mov	r4,r23
 800a588:	b00b883a 	mov	r5,r22
 800a58c:	800a7940 	call	800a794 <__umodsi3>
 800a590:	1023883a 	mov	r17,r2
 800a594:	b809883a 	mov	r4,r23
 800a598:	b00b883a 	mov	r5,r22
 800a59c:	800a78c0 	call	800a78c <__udivsi3>
 800a5a0:	8822943a 	slli	r17,r17,16
 800a5a4:	1705383a 	mul	r2,r2,fp
 800a5a8:	a93fffcc 	andi	r4,r21,65535
 800a5ac:	8908b03a 	or	r4,r17,r4
 800a5b0:	2080042e 	bgeu	r4,r2,800a5c4 <__umoddi3+0x4e4>
 800a5b4:	24c9883a 	add	r4,r4,r19
 800a5b8:	24c00236 	bltu	r4,r19,800a5c4 <__umoddi3+0x4e4>
 800a5bc:	2080012e 	bgeu	r4,r2,800a5c4 <__umoddi3+0x4e4>
 800a5c0:	24c9883a 	add	r4,r4,r19
 800a5c4:	20a3c83a 	sub	r17,r4,r2
 800a5c8:	e021883a 	mov	r16,fp
 800a5cc:	003f3d06 	br	800a2c4 <__flash_exceptions_start+0xf7e092a4>
 800a5d0:	34cfc83a 	sub	r7,r6,r19
 800a5d4:	2c4bc83a 	sub	r5,r5,r17
 800a5d8:	31cd803a 	cmpltu	r6,r6,r7
 800a5dc:	298dc83a 	sub	r6,r5,r6
 800a5e0:	4189c83a 	sub	r4,r8,r6
 800a5e4:	003fc306 	br	800a4f4 <__flash_exceptions_start+0xf7e094d4>
 800a5e8:	000b883a 	mov	r5,zero
 800a5ec:	002b883a 	mov	r21,zero
 800a5f0:	003f0a06 	br	800a21c <__flash_exceptions_start+0xf7e091fc>
 800a5f4:	01400404 	movi	r5,16
 800a5f8:	282b883a 	mov	r21,r5
 800a5fc:	003f0706 	br	800a21c <__flash_exceptions_start+0xf7e091fc>
 800a600:	01400404 	movi	r5,16
 800a604:	2805883a 	mov	r2,r5
 800a608:	003ecd06 	br	800a140 <__flash_exceptions_start+0xf7e09120>
 800a60c:	0005883a 	mov	r2,zero
 800a610:	0007883a 	mov	r3,zero
 800a614:	003f1e06 	br	800a290 <__flash_exceptions_start+0xf7e09270>
 800a618:	00800404 	movi	r2,16
 800a61c:	1007883a 	mov	r3,r2
 800a620:	003f1b06 	br	800a290 <__flash_exceptions_start+0xf7e09270>
 800a624:	000b883a 	mov	r5,zero
 800a628:	0005883a 	mov	r2,zero
 800a62c:	003ec406 	br	800a140 <__flash_exceptions_start+0xf7e09120>
 800a630:	413f952e 	bgeu	r8,r4,800a488 <__flash_exceptions_start+0xf7e09468>
 800a634:	10bfff84 	addi	r2,r2,-2
 800a638:	4451883a 	add	r8,r8,r17
 800a63c:	003f9306 	br	800a48c <__flash_exceptions_start+0xf7e0946c>
 800a640:	2f3f7d2e 	bgeu	r5,fp,800a438 <__flash_exceptions_start+0xf7e09418>
 800a644:	b5bfff84 	addi	r22,r22,-2
 800a648:	2c4b883a 	add	r5,r5,r17
 800a64c:	003f7b06 	br	800a43c <__flash_exceptions_start+0xf7e0941c>
 800a650:	34cd883a 	add	r6,r6,r19
 800a654:	003f2a06 	br	800a300 <__flash_exceptions_start+0xf7e092e0>
 800a658:	8005883a 	mov	r2,r16
 800a65c:	003efe06 	br	800a258 <__flash_exceptions_start+0xf7e09238>
 800a660:	81bfdb36 	bltu	r16,r6,800a5d0 <__flash_exceptions_start+0xf7e095b0>
 800a664:	300f883a 	mov	r7,r6
 800a668:	0009883a 	mov	r4,zero
 800a66c:	003fa106 	br	800a4f4 <__flash_exceptions_start+0xf7e094d4>

0800a670 <udivmodsi4>:
 800a670:	2900182e 	bgeu	r5,r4,800a6d4 <udivmodsi4+0x64>
 800a674:	28001716 	blt	r5,zero,800a6d4 <udivmodsi4+0x64>
 800a678:	00800804 	movi	r2,32
 800a67c:	00c00044 	movi	r3,1
 800a680:	00000206 	br	800a68c <udivmodsi4+0x1c>
 800a684:	10001126 	beq	r2,zero,800a6cc <udivmodsi4+0x5c>
 800a688:	28000516 	blt	r5,zero,800a6a0 <udivmodsi4+0x30>
 800a68c:	294b883a 	add	r5,r5,r5
 800a690:	10bfffc4 	addi	r2,r2,-1
 800a694:	18c7883a 	add	r3,r3,r3
 800a698:	293ffa36 	bltu	r5,r4,800a684 <__flash_exceptions_start+0xf7e09664>
 800a69c:	18000b26 	beq	r3,zero,800a6cc <udivmodsi4+0x5c>
 800a6a0:	0005883a 	mov	r2,zero
 800a6a4:	21400236 	bltu	r4,r5,800a6b0 <udivmodsi4+0x40>
 800a6a8:	2149c83a 	sub	r4,r4,r5
 800a6ac:	10c4b03a 	or	r2,r2,r3
 800a6b0:	1806d07a 	srli	r3,r3,1
 800a6b4:	280ad07a 	srli	r5,r5,1
 800a6b8:	183ffa1e 	bne	r3,zero,800a6a4 <__flash_exceptions_start+0xf7e09684>
 800a6bc:	3000011e 	bne	r6,zero,800a6c4 <udivmodsi4+0x54>
 800a6c0:	f800283a 	ret
 800a6c4:	2005883a 	mov	r2,r4
 800a6c8:	f800283a 	ret
 800a6cc:	0005883a 	mov	r2,zero
 800a6d0:	003ffa06 	br	800a6bc <__flash_exceptions_start+0xf7e0969c>
 800a6d4:	00c00044 	movi	r3,1
 800a6d8:	003ff106 	br	800a6a0 <__flash_exceptions_start+0xf7e09680>

0800a6dc <__divsi3>:
 800a6dc:	defffe04 	addi	sp,sp,-8
 800a6e0:	dfc00115 	stw	ra,4(sp)
 800a6e4:	dc000015 	stw	r16,0(sp)
 800a6e8:	20000b16 	blt	r4,zero,800a718 <__divsi3+0x3c>
 800a6ec:	0021883a 	mov	r16,zero
 800a6f0:	28000c16 	blt	r5,zero,800a724 <__divsi3+0x48>
 800a6f4:	000d883a 	mov	r6,zero
 800a6f8:	800a6700 	call	800a670 <udivmodsi4>
 800a6fc:	0407c83a 	sub	r3,zero,r16
 800a700:	1884f03a 	xor	r2,r3,r2
 800a704:	1405883a 	add	r2,r2,r16
 800a708:	dfc00117 	ldw	ra,4(sp)
 800a70c:	dc000017 	ldw	r16,0(sp)
 800a710:	dec00204 	addi	sp,sp,8
 800a714:	f800283a 	ret
 800a718:	0109c83a 	sub	r4,zero,r4
 800a71c:	04000044 	movi	r16,1
 800a720:	283ff40e 	bge	r5,zero,800a6f4 <__flash_exceptions_start+0xf7e096d4>
 800a724:	014bc83a 	sub	r5,zero,r5
 800a728:	8400005c 	xori	r16,r16,1
 800a72c:	003ff106 	br	800a6f4 <__flash_exceptions_start+0xf7e096d4>

0800a730 <__modsi3>:
 800a730:	defffd04 	addi	sp,sp,-12
 800a734:	dfc00215 	stw	ra,8(sp)
 800a738:	dc400115 	stw	r17,4(sp)
 800a73c:	dc000015 	stw	r16,0(sp)
 800a740:	20000c16 	blt	r4,zero,800a774 <__modsi3+0x44>
 800a744:	0023883a 	mov	r17,zero
 800a748:	0021883a 	mov	r16,zero
 800a74c:	28000d16 	blt	r5,zero,800a784 <__modsi3+0x54>
 800a750:	01800044 	movi	r6,1
 800a754:	800a6700 	call	800a670 <udivmodsi4>
 800a758:	1404f03a 	xor	r2,r2,r16
 800a75c:	8885883a 	add	r2,r17,r2
 800a760:	dfc00217 	ldw	ra,8(sp)
 800a764:	dc400117 	ldw	r17,4(sp)
 800a768:	dc000017 	ldw	r16,0(sp)
 800a76c:	dec00304 	addi	sp,sp,12
 800a770:	f800283a 	ret
 800a774:	0109c83a 	sub	r4,zero,r4
 800a778:	04400044 	movi	r17,1
 800a77c:	043fffc4 	movi	r16,-1
 800a780:	283ff30e 	bge	r5,zero,800a750 <__flash_exceptions_start+0xf7e09730>
 800a784:	014bc83a 	sub	r5,zero,r5
 800a788:	003ff106 	br	800a750 <__flash_exceptions_start+0xf7e09730>

0800a78c <__udivsi3>:
 800a78c:	000d883a 	mov	r6,zero
 800a790:	800a6701 	jmpi	800a670 <udivmodsi4>

0800a794 <__umodsi3>:
 800a794:	01800044 	movi	r6,1
 800a798:	800a6701 	jmpi	800a670 <udivmodsi4>

0800a79c <__adddf3>:
 800a79c:	02000434 	movhi	r8,16
 800a7a0:	423fffc4 	addi	r8,r8,-1
 800a7a4:	defffb04 	addi	sp,sp,-20
 800a7a8:	2a12703a 	and	r9,r5,r8
 800a7ac:	2806d7fa 	srli	r3,r5,31
 800a7b0:	3a10703a 	and	r8,r7,r8
 800a7b4:	3804d53a 	srli	r2,r7,20
 800a7b8:	3014d77a 	srli	r10,r6,29
 800a7bc:	dc000015 	stw	r16,0(sp)
 800a7c0:	481290fa 	slli	r9,r9,3
 800a7c4:	2820d53a 	srli	r16,r5,20
 800a7c8:	401090fa 	slli	r8,r8,3
 800a7cc:	200ad77a 	srli	r5,r4,29
 800a7d0:	380ed7fa 	srli	r7,r7,31
 800a7d4:	dc800215 	stw	r18,8(sp)
 800a7d8:	dc400115 	stw	r17,4(sp)
 800a7dc:	dfc00415 	stw	ra,16(sp)
 800a7e0:	dcc00315 	stw	r19,12(sp)
 800a7e4:	1c803fcc 	andi	r18,r3,255
 800a7e8:	8401ffcc 	andi	r16,r16,2047
 800a7ec:	494ab03a 	or	r5,r9,r5
 800a7f0:	202290fa 	slli	r17,r4,3
 800a7f4:	1081ffcc 	andi	r2,r2,2047
 800a7f8:	4290b03a 	or	r8,r8,r10
 800a7fc:	300c90fa 	slli	r6,r6,3
 800a800:	91c07026 	beq	r18,r7,800a9c4 <__adddf3+0x228>
 800a804:	8087c83a 	sub	r3,r16,r2
 800a808:	00c0b30e 	bge	zero,r3,800aad8 <__adddf3+0x33c>
 800a80c:	10002a1e 	bne	r2,zero,800a8b8 <__adddf3+0x11c>
 800a810:	4184b03a 	or	r2,r8,r6
 800a814:	1000991e 	bne	r2,zero,800aa7c <__adddf3+0x2e0>
 800a818:	888001cc 	andi	r2,r17,7
 800a81c:	10005b26 	beq	r2,zero,800a98c <__adddf3+0x1f0>
 800a820:	88c003cc 	andi	r3,r17,15
 800a824:	00800104 	movi	r2,4
 800a828:	18805826 	beq	r3,r2,800a98c <__adddf3+0x1f0>
 800a82c:	89800104 	addi	r6,r17,4
 800a830:	3463803a 	cmpltu	r17,r6,r17
 800a834:	2c4b883a 	add	r5,r5,r17
 800a838:	2880202c 	andhi	r2,r5,128
 800a83c:	9007883a 	mov	r3,r18
 800a840:	3023883a 	mov	r17,r6
 800a844:	10005426 	beq	r2,zero,800a998 <__adddf3+0x1fc>
 800a848:	84000044 	addi	r16,r16,1
 800a84c:	0081ffc4 	movi	r2,2047
 800a850:	8080c126 	beq	r16,r2,800ab58 <__adddf3+0x3bc>
 800a854:	013fe034 	movhi	r4,65408
 800a858:	213fffc4 	addi	r4,r4,-1
 800a85c:	290a703a 	and	r5,r5,r4
 800a860:	2804977a 	slli	r2,r5,29
 800a864:	280a927a 	slli	r5,r5,9
 800a868:	8822d0fa 	srli	r17,r17,3
 800a86c:	8401ffcc 	andi	r16,r16,2047
 800a870:	2808d33a 	srli	r4,r5,12
 800a874:	1444b03a 	or	r2,r2,r17
 800a878:	8401ffcc 	andi	r16,r16,2047
 800a87c:	800a953a 	slli	r5,r16,20
 800a880:	18c03fcc 	andi	r3,r3,255
 800a884:	04000434 	movhi	r16,16
 800a888:	180697fa 	slli	r3,r3,31
 800a88c:	843fffc4 	addi	r16,r16,-1
 800a890:	2420703a 	and	r16,r4,r16
 800a894:	8160b03a 	or	r16,r16,r5
 800a898:	80c6b03a 	or	r3,r16,r3
 800a89c:	dfc00417 	ldw	ra,16(sp)
 800a8a0:	dcc00317 	ldw	r19,12(sp)
 800a8a4:	dc800217 	ldw	r18,8(sp)
 800a8a8:	dc400117 	ldw	r17,4(sp)
 800a8ac:	dc000017 	ldw	r16,0(sp)
 800a8b0:	dec00504 	addi	sp,sp,20
 800a8b4:	f800283a 	ret
 800a8b8:	0081ffc4 	movi	r2,2047
 800a8bc:	80bfd626 	beq	r16,r2,800a818 <__flash_exceptions_start+0xf7e097f8>
 800a8c0:	42002034 	orhi	r8,r8,128
 800a8c4:	00800e04 	movi	r2,56
 800a8c8:	10c0a616 	blt	r2,r3,800ab64 <__adddf3+0x3c8>
 800a8cc:	008007c4 	movi	r2,31
 800a8d0:	10c0c916 	blt	r2,r3,800abf8 <__adddf3+0x45c>
 800a8d4:	00800804 	movi	r2,32
 800a8d8:	10c5c83a 	sub	r2,r2,r3
 800a8dc:	408e983a 	sll	r7,r8,r2
 800a8e0:	30c8d83a 	srl	r4,r6,r3
 800a8e4:	3084983a 	sll	r2,r6,r2
 800a8e8:	40c6d83a 	srl	r3,r8,r3
 800a8ec:	390cb03a 	or	r6,r7,r4
 800a8f0:	1004c03a 	cmpne	r2,r2,zero
 800a8f4:	308cb03a 	or	r6,r6,r2
 800a8f8:	898dc83a 	sub	r6,r17,r6
 800a8fc:	89a3803a 	cmpltu	r17,r17,r6
 800a900:	28cbc83a 	sub	r5,r5,r3
 800a904:	2c4bc83a 	sub	r5,r5,r17
 800a908:	3023883a 	mov	r17,r6
 800a90c:	2880202c 	andhi	r2,r5,128
 800a910:	10006d26 	beq	r2,zero,800aac8 <__adddf3+0x32c>
 800a914:	04c02034 	movhi	r19,128
 800a918:	9cffffc4 	addi	r19,r19,-1
 800a91c:	2ce6703a 	and	r19,r5,r19
 800a920:	98007e26 	beq	r19,zero,800ab1c <__adddf3+0x380>
 800a924:	9809883a 	mov	r4,r19
 800a928:	800cd380 	call	800cd38 <__clzsi2>
 800a92c:	10fffe04 	addi	r3,r2,-8
 800a930:	010007c4 	movi	r4,31
 800a934:	20c07f16 	blt	r4,r3,800ab34 <__adddf3+0x398>
 800a938:	01400a04 	movi	r5,40
 800a93c:	2885c83a 	sub	r2,r5,r2
 800a940:	888ad83a 	srl	r5,r17,r2
 800a944:	98e6983a 	sll	r19,r19,r3
 800a948:	88e2983a 	sll	r17,r17,r3
 800a94c:	2ce6b03a 	or	r19,r5,r19
 800a950:	1c007c16 	blt	r3,r16,800ab44 <__adddf3+0x3a8>
 800a954:	1c21c83a 	sub	r16,r3,r16
 800a958:	81400044 	addi	r5,r16,1
 800a95c:	00c007c4 	movi	r3,31
 800a960:	19409816 	blt	r3,r5,800abc4 <__adddf3+0x428>
 800a964:	1c21c83a 	sub	r16,r3,r16
 800a968:	8c08983a 	sll	r4,r17,r16
 800a96c:	8946d83a 	srl	r3,r17,r5
 800a970:	9c20983a 	sll	r16,r19,r16
 800a974:	2008c03a 	cmpne	r4,r4,zero
 800a978:	994ad83a 	srl	r5,r19,r5
 800a97c:	1c06b03a 	or	r3,r3,r16
 800a980:	1922b03a 	or	r17,r3,r4
 800a984:	0021883a 	mov	r16,zero
 800a988:	003fa306 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800a98c:	2880202c 	andhi	r2,r5,128
 800a990:	9007883a 	mov	r3,r18
 800a994:	103fac1e 	bne	r2,zero,800a848 <__flash_exceptions_start+0xf7e09828>
 800a998:	2804977a 	slli	r2,r5,29
 800a99c:	8822d0fa 	srli	r17,r17,3
 800a9a0:	0101ffc4 	movi	r4,2047
 800a9a4:	280ad0fa 	srli	r5,r5,3
 800a9a8:	1444b03a 	or	r2,r2,r17
 800a9ac:	81002c26 	beq	r16,r4,800aa60 <__adddf3+0x2c4>
 800a9b0:	8120703a 	and	r16,r16,r4
 800a9b4:	01000434 	movhi	r4,16
 800a9b8:	213fffc4 	addi	r4,r4,-1
 800a9bc:	2908703a 	and	r4,r5,r4
 800a9c0:	003fad06 	br	800a878 <__flash_exceptions_start+0xf7e09858>
 800a9c4:	8089c83a 	sub	r4,r16,r2
 800a9c8:	01006a0e 	bge	zero,r4,800ab74 <__adddf3+0x3d8>
 800a9cc:	10003326 	beq	r2,zero,800aa9c <__adddf3+0x300>
 800a9d0:	0081ffc4 	movi	r2,2047
 800a9d4:	80bf9026 	beq	r16,r2,800a818 <__flash_exceptions_start+0xf7e097f8>
 800a9d8:	42002034 	orhi	r8,r8,128
 800a9dc:	00800e04 	movi	r2,56
 800a9e0:	1100b116 	blt	r2,r4,800aca8 <__adddf3+0x50c>
 800a9e4:	008007c4 	movi	r2,31
 800a9e8:	1100e216 	blt	r2,r4,800ad74 <__adddf3+0x5d8>
 800a9ec:	00800804 	movi	r2,32
 800a9f0:	1105c83a 	sub	r2,r2,r4
 800a9f4:	4092983a 	sll	r9,r8,r2
 800a9f8:	310ed83a 	srl	r7,r6,r4
 800a9fc:	3084983a 	sll	r2,r6,r2
 800aa00:	4110d83a 	srl	r8,r8,r4
 800aa04:	49ccb03a 	or	r6,r9,r7
 800aa08:	1004c03a 	cmpne	r2,r2,zero
 800aa0c:	308cb03a 	or	r6,r6,r2
 800aa10:	344d883a 	add	r6,r6,r17
 800aa14:	3463803a 	cmpltu	r17,r6,r17
 800aa18:	414b883a 	add	r5,r8,r5
 800aa1c:	2c4b883a 	add	r5,r5,r17
 800aa20:	3023883a 	mov	r17,r6
 800aa24:	2880202c 	andhi	r2,r5,128
 800aa28:	10002726 	beq	r2,zero,800aac8 <__adddf3+0x32c>
 800aa2c:	84000044 	addi	r16,r16,1
 800aa30:	0081ffc4 	movi	r2,2047
 800aa34:	8080ae26 	beq	r16,r2,800acf0 <__adddf3+0x554>
 800aa38:	00bfe034 	movhi	r2,65408
 800aa3c:	10bfffc4 	addi	r2,r2,-1
 800aa40:	288a703a 	and	r5,r5,r2
 800aa44:	880cd07a 	srli	r6,r17,1
 800aa48:	280897fa 	slli	r4,r5,31
 800aa4c:	88c0004c 	andi	r3,r17,1
 800aa50:	30e2b03a 	or	r17,r6,r3
 800aa54:	280ad07a 	srli	r5,r5,1
 800aa58:	8922b03a 	or	r17,r17,r4
 800aa5c:	003f6e06 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800aa60:	1148b03a 	or	r4,r2,r5
 800aa64:	20003c26 	beq	r4,zero,800ab58 <__adddf3+0x3bc>
 800aa68:	29000234 	orhi	r4,r5,8
 800aa6c:	01400434 	movhi	r5,16
 800aa70:	297fffc4 	addi	r5,r5,-1
 800aa74:	2148703a 	and	r4,r4,r5
 800aa78:	003f7f06 	br	800a878 <__flash_exceptions_start+0xf7e09858>
 800aa7c:	18ffffc4 	addi	r3,r3,-1
 800aa80:	18004d1e 	bne	r3,zero,800abb8 <__adddf3+0x41c>
 800aa84:	898dc83a 	sub	r6,r17,r6
 800aa88:	89a3803a 	cmpltu	r17,r17,r6
 800aa8c:	2a0bc83a 	sub	r5,r5,r8
 800aa90:	2c4bc83a 	sub	r5,r5,r17
 800aa94:	3023883a 	mov	r17,r6
 800aa98:	003f9c06 	br	800a90c <__flash_exceptions_start+0xf7e098ec>
 800aa9c:	4184b03a 	or	r2,r8,r6
 800aaa0:	103f5d26 	beq	r2,zero,800a818 <__flash_exceptions_start+0xf7e097f8>
 800aaa4:	213fffc4 	addi	r4,r4,-1
 800aaa8:	203fd926 	beq	r4,zero,800aa10 <__flash_exceptions_start+0xf7e099f0>
 800aaac:	0081ffc4 	movi	r2,2047
 800aab0:	80bfca1e 	bne	r16,r2,800a9dc <__flash_exceptions_start+0xf7e099bc>
 800aab4:	003f5806 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800aab8:	10c8b03a 	or	r4,r2,r3
 800aabc:	20008b26 	beq	r4,zero,800acec <__adddf3+0x550>
 800aac0:	100b883a 	mov	r5,r2
 800aac4:	1823883a 	mov	r17,r3
 800aac8:	888001cc 	andi	r2,r17,7
 800aacc:	103f541e 	bne	r2,zero,800a820 <__flash_exceptions_start+0xf7e09800>
 800aad0:	9007883a 	mov	r3,r18
 800aad4:	003fb006 	br	800a998 <__flash_exceptions_start+0xf7e09978>
 800aad8:	1800531e 	bne	r3,zero,800ac28 <__adddf3+0x48c>
 800aadc:	80800044 	addi	r2,r16,1
 800aae0:	1081ffcc 	andi	r2,r2,2047
 800aae4:	00c00044 	movi	r3,1
 800aae8:	1880990e 	bge	r3,r2,800ad50 <__adddf3+0x5b4>
 800aaec:	8985c83a 	sub	r2,r17,r6
 800aaf0:	8887803a 	cmpltu	r3,r17,r2
 800aaf4:	2a27c83a 	sub	r19,r5,r8
 800aaf8:	98e7c83a 	sub	r19,r19,r3
 800aafc:	98c0202c 	andhi	r3,r19,128
 800ab00:	18006226 	beq	r3,zero,800ac8c <__adddf3+0x4f0>
 800ab04:	3463c83a 	sub	r17,r6,r17
 800ab08:	4151c83a 	sub	r8,r8,r5
 800ab0c:	344d803a 	cmpltu	r6,r6,r17
 800ab10:	41a7c83a 	sub	r19,r8,r6
 800ab14:	3825883a 	mov	r18,r7
 800ab18:	983f821e 	bne	r19,zero,800a924 <__flash_exceptions_start+0xf7e09904>
 800ab1c:	8809883a 	mov	r4,r17
 800ab20:	800cd380 	call	800cd38 <__clzsi2>
 800ab24:	10800804 	addi	r2,r2,32
 800ab28:	10fffe04 	addi	r3,r2,-8
 800ab2c:	010007c4 	movi	r4,31
 800ab30:	20ff810e 	bge	r4,r3,800a938 <__flash_exceptions_start+0xf7e09918>
 800ab34:	14fff604 	addi	r19,r2,-40
 800ab38:	8ce6983a 	sll	r19,r17,r19
 800ab3c:	0023883a 	mov	r17,zero
 800ab40:	1c3f840e 	bge	r3,r16,800a954 <__flash_exceptions_start+0xf7e09934>
 800ab44:	017fe034 	movhi	r5,65408
 800ab48:	297fffc4 	addi	r5,r5,-1
 800ab4c:	80e1c83a 	sub	r16,r16,r3
 800ab50:	994a703a 	and	r5,r19,r5
 800ab54:	003f3006 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800ab58:	0009883a 	mov	r4,zero
 800ab5c:	0005883a 	mov	r2,zero
 800ab60:	003f4506 	br	800a878 <__flash_exceptions_start+0xf7e09858>
 800ab64:	418cb03a 	or	r6,r8,r6
 800ab68:	300cc03a 	cmpne	r6,r6,zero
 800ab6c:	0007883a 	mov	r3,zero
 800ab70:	003f6106 	br	800a8f8 <__flash_exceptions_start+0xf7e098d8>
 800ab74:	2000921e 	bne	r4,zero,800adc0 <__adddf3+0x624>
 800ab78:	80800044 	addi	r2,r16,1
 800ab7c:	11c1ffcc 	andi	r7,r2,2047
 800ab80:	01000044 	movi	r4,1
 800ab84:	21c0610e 	bge	r4,r7,800ad0c <__adddf3+0x570>
 800ab88:	0101ffc4 	movi	r4,2047
 800ab8c:	1100a326 	beq	r2,r4,800ae1c <__adddf3+0x680>
 800ab90:	344d883a 	add	r6,r6,r17
 800ab94:	3463803a 	cmpltu	r17,r6,r17
 800ab98:	414b883a 	add	r5,r8,r5
 800ab9c:	2c4b883a 	add	r5,r5,r17
 800aba0:	282297fa 	slli	r17,r5,31
 800aba4:	300cd07a 	srli	r6,r6,1
 800aba8:	280ad07a 	srli	r5,r5,1
 800abac:	1021883a 	mov	r16,r2
 800abb0:	89a2b03a 	or	r17,r17,r6
 800abb4:	003f1806 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800abb8:	0081ffc4 	movi	r2,2047
 800abbc:	80bf411e 	bne	r16,r2,800a8c4 <__flash_exceptions_start+0xf7e098a4>
 800abc0:	003f1506 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800abc4:	80bff844 	addi	r2,r16,-31
 800abc8:	00c00804 	movi	r3,32
 800abcc:	9884d83a 	srl	r2,r19,r2
 800abd0:	28c04a26 	beq	r5,r3,800acfc <__adddf3+0x560>
 800abd4:	00c00fc4 	movi	r3,63
 800abd8:	1c21c83a 	sub	r16,r3,r16
 800abdc:	9c26983a 	sll	r19,r19,r16
 800abe0:	9c62b03a 	or	r17,r19,r17
 800abe4:	8822c03a 	cmpne	r17,r17,zero
 800abe8:	88a2b03a 	or	r17,r17,r2
 800abec:	000b883a 	mov	r5,zero
 800abf0:	0021883a 	mov	r16,zero
 800abf4:	003fb406 	br	800aac8 <__flash_exceptions_start+0xf7e09aa8>
 800abf8:	18bff804 	addi	r2,r3,-32
 800abfc:	01000804 	movi	r4,32
 800ac00:	4084d83a 	srl	r2,r8,r2
 800ac04:	19003f26 	beq	r3,r4,800ad04 <__adddf3+0x568>
 800ac08:	01001004 	movi	r4,64
 800ac0c:	20c7c83a 	sub	r3,r4,r3
 800ac10:	40d0983a 	sll	r8,r8,r3
 800ac14:	418cb03a 	or	r6,r8,r6
 800ac18:	300cc03a 	cmpne	r6,r6,zero
 800ac1c:	308cb03a 	or	r6,r6,r2
 800ac20:	0007883a 	mov	r3,zero
 800ac24:	003f3406 	br	800a8f8 <__flash_exceptions_start+0xf7e098d8>
 800ac28:	80002326 	beq	r16,zero,800acb8 <__adddf3+0x51c>
 800ac2c:	0101ffc4 	movi	r4,2047
 800ac30:	11005e26 	beq	r2,r4,800adac <__adddf3+0x610>
 800ac34:	00c7c83a 	sub	r3,zero,r3
 800ac38:	29402034 	orhi	r5,r5,128
 800ac3c:	01000e04 	movi	r4,56
 800ac40:	20c07216 	blt	r4,r3,800ae0c <__adddf3+0x670>
 800ac44:	010007c4 	movi	r4,31
 800ac48:	20c0ce16 	blt	r4,r3,800af84 <__adddf3+0x7e8>
 800ac4c:	01000804 	movi	r4,32
 800ac50:	20c9c83a 	sub	r4,r4,r3
 800ac54:	2914983a 	sll	r10,r5,r4
 800ac58:	88d2d83a 	srl	r9,r17,r3
 800ac5c:	8908983a 	sll	r4,r17,r4
 800ac60:	28c6d83a 	srl	r3,r5,r3
 800ac64:	5262b03a 	or	r17,r10,r9
 800ac68:	2008c03a 	cmpne	r4,r4,zero
 800ac6c:	8922b03a 	or	r17,r17,r4
 800ac70:	3463c83a 	sub	r17,r6,r17
 800ac74:	40c7c83a 	sub	r3,r8,r3
 800ac78:	344d803a 	cmpltu	r6,r6,r17
 800ac7c:	198bc83a 	sub	r5,r3,r6
 800ac80:	1021883a 	mov	r16,r2
 800ac84:	3825883a 	mov	r18,r7
 800ac88:	003f2006 	br	800a90c <__flash_exceptions_start+0xf7e098ec>
 800ac8c:	9886b03a 	or	r3,r19,r2
 800ac90:	1800141e 	bne	r3,zero,800ace4 <__adddf3+0x548>
 800ac94:	0007883a 	mov	r3,zero
 800ac98:	000b883a 	mov	r5,zero
 800ac9c:	0023883a 	mov	r17,zero
 800aca0:	0021883a 	mov	r16,zero
 800aca4:	003f3c06 	br	800a998 <__flash_exceptions_start+0xf7e09978>
 800aca8:	418cb03a 	or	r6,r8,r6
 800acac:	300cc03a 	cmpne	r6,r6,zero
 800acb0:	0011883a 	mov	r8,zero
 800acb4:	003f5606 	br	800aa10 <__flash_exceptions_start+0xf7e099f0>
 800acb8:	2c48b03a 	or	r4,r5,r17
 800acbc:	20003b26 	beq	r4,zero,800adac <__adddf3+0x610>
 800acc0:	00c6303a 	nor	r3,zero,r3
 800acc4:	1800371e 	bne	r3,zero,800ada4 <__adddf3+0x608>
 800acc8:	3463c83a 	sub	r17,r6,r17
 800accc:	414bc83a 	sub	r5,r8,r5
 800acd0:	344d803a 	cmpltu	r6,r6,r17
 800acd4:	298bc83a 	sub	r5,r5,r6
 800acd8:	1021883a 	mov	r16,r2
 800acdc:	3825883a 	mov	r18,r7
 800ace0:	003f0a06 	br	800a90c <__flash_exceptions_start+0xf7e098ec>
 800ace4:	1023883a 	mov	r17,r2
 800ace8:	003f0d06 	br	800a920 <__flash_exceptions_start+0xf7e09900>
 800acec:	0007883a 	mov	r3,zero
 800acf0:	000b883a 	mov	r5,zero
 800acf4:	0023883a 	mov	r17,zero
 800acf8:	003f2706 	br	800a998 <__flash_exceptions_start+0xf7e09978>
 800acfc:	0027883a 	mov	r19,zero
 800ad00:	003fb706 	br	800abe0 <__flash_exceptions_start+0xf7e09bc0>
 800ad04:	0011883a 	mov	r8,zero
 800ad08:	003fc206 	br	800ac14 <__flash_exceptions_start+0xf7e09bf4>
 800ad0c:	2c44b03a 	or	r2,r5,r17
 800ad10:	8000871e 	bne	r16,zero,800af30 <__adddf3+0x794>
 800ad14:	1000b126 	beq	r2,zero,800afdc <__adddf3+0x840>
 800ad18:	4184b03a 	or	r2,r8,r6
 800ad1c:	103ebe26 	beq	r2,zero,800a818 <__flash_exceptions_start+0xf7e097f8>
 800ad20:	3445883a 	add	r2,r6,r17
 800ad24:	1463803a 	cmpltu	r17,r2,r17
 800ad28:	414b883a 	add	r5,r8,r5
 800ad2c:	2c4b883a 	add	r5,r5,r17
 800ad30:	28c0202c 	andhi	r3,r5,128
 800ad34:	1023883a 	mov	r17,r2
 800ad38:	183f6326 	beq	r3,zero,800aac8 <__flash_exceptions_start+0xf7e09aa8>
 800ad3c:	00bfe034 	movhi	r2,65408
 800ad40:	10bfffc4 	addi	r2,r2,-1
 800ad44:	2021883a 	mov	r16,r4
 800ad48:	288a703a 	and	r5,r5,r2
 800ad4c:	003eb206 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800ad50:	2c44b03a 	or	r2,r5,r17
 800ad54:	8000251e 	bne	r16,zero,800adec <__adddf3+0x650>
 800ad58:	10004b1e 	bne	r2,zero,800ae88 <__adddf3+0x6ec>
 800ad5c:	4184b03a 	or	r2,r8,r6
 800ad60:	103fe226 	beq	r2,zero,800acec <__flash_exceptions_start+0xf7e09ccc>
 800ad64:	400b883a 	mov	r5,r8
 800ad68:	3023883a 	mov	r17,r6
 800ad6c:	3825883a 	mov	r18,r7
 800ad70:	003ea906 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800ad74:	20bff804 	addi	r2,r4,-32
 800ad78:	01c00804 	movi	r7,32
 800ad7c:	4084d83a 	srl	r2,r8,r2
 800ad80:	21c07e26 	beq	r4,r7,800af7c <__adddf3+0x7e0>
 800ad84:	01c01004 	movi	r7,64
 800ad88:	3909c83a 	sub	r4,r7,r4
 800ad8c:	4110983a 	sll	r8,r8,r4
 800ad90:	418cb03a 	or	r6,r8,r6
 800ad94:	300cc03a 	cmpne	r6,r6,zero
 800ad98:	308cb03a 	or	r6,r6,r2
 800ad9c:	0011883a 	mov	r8,zero
 800ada0:	003f1b06 	br	800aa10 <__flash_exceptions_start+0xf7e099f0>
 800ada4:	0101ffc4 	movi	r4,2047
 800ada8:	113fa41e 	bne	r2,r4,800ac3c <__flash_exceptions_start+0xf7e09c1c>
 800adac:	400b883a 	mov	r5,r8
 800adb0:	3023883a 	mov	r17,r6
 800adb4:	1021883a 	mov	r16,r2
 800adb8:	3825883a 	mov	r18,r7
 800adbc:	003e9606 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800adc0:	80001a1e 	bne	r16,zero,800ae2c <__adddf3+0x690>
 800adc4:	2c4eb03a 	or	r7,r5,r17
 800adc8:	38005526 	beq	r7,zero,800af20 <__adddf3+0x784>
 800adcc:	0108303a 	nor	r4,zero,r4
 800add0:	2000511e 	bne	r4,zero,800af18 <__adddf3+0x77c>
 800add4:	89a3883a 	add	r17,r17,r6
 800add8:	414b883a 	add	r5,r8,r5
 800addc:	898d803a 	cmpltu	r6,r17,r6
 800ade0:	298b883a 	add	r5,r5,r6
 800ade4:	1021883a 	mov	r16,r2
 800ade8:	003f0e06 	br	800aa24 <__flash_exceptions_start+0xf7e09a04>
 800adec:	1000341e 	bne	r2,zero,800aec0 <__adddf3+0x724>
 800adf0:	4184b03a 	or	r2,r8,r6
 800adf4:	10006f26 	beq	r2,zero,800afb4 <__adddf3+0x818>
 800adf8:	400b883a 	mov	r5,r8
 800adfc:	3023883a 	mov	r17,r6
 800ae00:	3825883a 	mov	r18,r7
 800ae04:	0401ffc4 	movi	r16,2047
 800ae08:	003e8306 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800ae0c:	2c62b03a 	or	r17,r5,r17
 800ae10:	8822c03a 	cmpne	r17,r17,zero
 800ae14:	0007883a 	mov	r3,zero
 800ae18:	003f9506 	br	800ac70 <__flash_exceptions_start+0xf7e09c50>
 800ae1c:	1021883a 	mov	r16,r2
 800ae20:	000b883a 	mov	r5,zero
 800ae24:	0023883a 	mov	r17,zero
 800ae28:	003edb06 	br	800a998 <__flash_exceptions_start+0xf7e09978>
 800ae2c:	01c1ffc4 	movi	r7,2047
 800ae30:	11c03b26 	beq	r2,r7,800af20 <__adddf3+0x784>
 800ae34:	0109c83a 	sub	r4,zero,r4
 800ae38:	29402034 	orhi	r5,r5,128
 800ae3c:	01c00e04 	movi	r7,56
 800ae40:	39006216 	blt	r7,r4,800afcc <__adddf3+0x830>
 800ae44:	01c007c4 	movi	r7,31
 800ae48:	39006b16 	blt	r7,r4,800aff8 <__adddf3+0x85c>
 800ae4c:	01c00804 	movi	r7,32
 800ae50:	390fc83a 	sub	r7,r7,r4
 800ae54:	29d4983a 	sll	r10,r5,r7
 800ae58:	8912d83a 	srl	r9,r17,r4
 800ae5c:	89ce983a 	sll	r7,r17,r7
 800ae60:	2908d83a 	srl	r4,r5,r4
 800ae64:	5262b03a 	or	r17,r10,r9
 800ae68:	380ac03a 	cmpne	r5,r7,zero
 800ae6c:	8962b03a 	or	r17,r17,r5
 800ae70:	89a3883a 	add	r17,r17,r6
 800ae74:	2211883a 	add	r8,r4,r8
 800ae78:	898d803a 	cmpltu	r6,r17,r6
 800ae7c:	418b883a 	add	r5,r8,r6
 800ae80:	1021883a 	mov	r16,r2
 800ae84:	003ee706 	br	800aa24 <__flash_exceptions_start+0xf7e09a04>
 800ae88:	4184b03a 	or	r2,r8,r6
 800ae8c:	103e6226 	beq	r2,zero,800a818 <__flash_exceptions_start+0xf7e097f8>
 800ae90:	8987c83a 	sub	r3,r17,r6
 800ae94:	88c9803a 	cmpltu	r4,r17,r3
 800ae98:	2a05c83a 	sub	r2,r5,r8
 800ae9c:	1105c83a 	sub	r2,r2,r4
 800aea0:	1100202c 	andhi	r4,r2,128
 800aea4:	203f0426 	beq	r4,zero,800aab8 <__flash_exceptions_start+0xf7e09a98>
 800aea8:	3463c83a 	sub	r17,r6,r17
 800aeac:	414bc83a 	sub	r5,r8,r5
 800aeb0:	344d803a 	cmpltu	r6,r6,r17
 800aeb4:	298bc83a 	sub	r5,r5,r6
 800aeb8:	3825883a 	mov	r18,r7
 800aebc:	003e5606 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800aec0:	4184b03a 	or	r2,r8,r6
 800aec4:	10002b26 	beq	r2,zero,800af74 <__adddf3+0x7d8>
 800aec8:	2804d0fa 	srli	r2,r5,3
 800aecc:	8822d0fa 	srli	r17,r17,3
 800aed0:	280a977a 	slli	r5,r5,29
 800aed4:	10c0022c 	andhi	r3,r2,8
 800aed8:	2c62b03a 	or	r17,r5,r17
 800aedc:	18000826 	beq	r3,zero,800af00 <__adddf3+0x764>
 800aee0:	4008d0fa 	srli	r4,r8,3
 800aee4:	20c0022c 	andhi	r3,r4,8
 800aee8:	1800051e 	bne	r3,zero,800af00 <__adddf3+0x764>
 800aeec:	300cd0fa 	srli	r6,r6,3
 800aef0:	4010977a 	slli	r8,r8,29
 800aef4:	2005883a 	mov	r2,r4
 800aef8:	3825883a 	mov	r18,r7
 800aefc:	41a2b03a 	or	r17,r8,r6
 800af00:	880ad77a 	srli	r5,r17,29
 800af04:	100490fa 	slli	r2,r2,3
 800af08:	882290fa 	slli	r17,r17,3
 800af0c:	0401ffc4 	movi	r16,2047
 800af10:	288ab03a 	or	r5,r5,r2
 800af14:	003e4006 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800af18:	01c1ffc4 	movi	r7,2047
 800af1c:	11ffc71e 	bne	r2,r7,800ae3c <__flash_exceptions_start+0xf7e09e1c>
 800af20:	400b883a 	mov	r5,r8
 800af24:	3023883a 	mov	r17,r6
 800af28:	1021883a 	mov	r16,r2
 800af2c:	003e3a06 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800af30:	10002d26 	beq	r2,zero,800afe8 <__adddf3+0x84c>
 800af34:	4184b03a 	or	r2,r8,r6
 800af38:	10000e26 	beq	r2,zero,800af74 <__adddf3+0x7d8>
 800af3c:	2804d0fa 	srli	r2,r5,3
 800af40:	8822d0fa 	srli	r17,r17,3
 800af44:	280a977a 	slli	r5,r5,29
 800af48:	10c0022c 	andhi	r3,r2,8
 800af4c:	2c62b03a 	or	r17,r5,r17
 800af50:	183feb26 	beq	r3,zero,800af00 <__flash_exceptions_start+0xf7e09ee0>
 800af54:	4008d0fa 	srli	r4,r8,3
 800af58:	20c0022c 	andhi	r3,r4,8
 800af5c:	183fe81e 	bne	r3,zero,800af00 <__flash_exceptions_start+0xf7e09ee0>
 800af60:	300cd0fa 	srli	r6,r6,3
 800af64:	4010977a 	slli	r8,r8,29
 800af68:	2005883a 	mov	r2,r4
 800af6c:	41a2b03a 	or	r17,r8,r6
 800af70:	003fe306 	br	800af00 <__flash_exceptions_start+0xf7e09ee0>
 800af74:	0401ffc4 	movi	r16,2047
 800af78:	003e2706 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800af7c:	0011883a 	mov	r8,zero
 800af80:	003f8306 	br	800ad90 <__flash_exceptions_start+0xf7e09d70>
 800af84:	193ff804 	addi	r4,r3,-32
 800af88:	02400804 	movi	r9,32
 800af8c:	2908d83a 	srl	r4,r5,r4
 800af90:	1a402526 	beq	r3,r9,800b028 <__adddf3+0x88c>
 800af94:	02401004 	movi	r9,64
 800af98:	48c7c83a 	sub	r3,r9,r3
 800af9c:	28ca983a 	sll	r5,r5,r3
 800afa0:	2c62b03a 	or	r17,r5,r17
 800afa4:	8822c03a 	cmpne	r17,r17,zero
 800afa8:	8922b03a 	or	r17,r17,r4
 800afac:	0007883a 	mov	r3,zero
 800afb0:	003f2f06 	br	800ac70 <__flash_exceptions_start+0xf7e09c50>
 800afb4:	01402034 	movhi	r5,128
 800afb8:	0007883a 	mov	r3,zero
 800afbc:	297fffc4 	addi	r5,r5,-1
 800afc0:	047ffe04 	movi	r17,-8
 800afc4:	0401ffc4 	movi	r16,2047
 800afc8:	003e7306 	br	800a998 <__flash_exceptions_start+0xf7e09978>
 800afcc:	2c62b03a 	or	r17,r5,r17
 800afd0:	8822c03a 	cmpne	r17,r17,zero
 800afd4:	0009883a 	mov	r4,zero
 800afd8:	003fa506 	br	800ae70 <__flash_exceptions_start+0xf7e09e50>
 800afdc:	400b883a 	mov	r5,r8
 800afe0:	3023883a 	mov	r17,r6
 800afe4:	003e0c06 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800afe8:	400b883a 	mov	r5,r8
 800afec:	3023883a 	mov	r17,r6
 800aff0:	0401ffc4 	movi	r16,2047
 800aff4:	003e0806 	br	800a818 <__flash_exceptions_start+0xf7e097f8>
 800aff8:	21fff804 	addi	r7,r4,-32
 800affc:	02400804 	movi	r9,32
 800b000:	29ced83a 	srl	r7,r5,r7
 800b004:	22400a26 	beq	r4,r9,800b030 <__adddf3+0x894>
 800b008:	02401004 	movi	r9,64
 800b00c:	4909c83a 	sub	r4,r9,r4
 800b010:	290a983a 	sll	r5,r5,r4
 800b014:	2c62b03a 	or	r17,r5,r17
 800b018:	8822c03a 	cmpne	r17,r17,zero
 800b01c:	89e2b03a 	or	r17,r17,r7
 800b020:	0009883a 	mov	r4,zero
 800b024:	003f9206 	br	800ae70 <__flash_exceptions_start+0xf7e09e50>
 800b028:	000b883a 	mov	r5,zero
 800b02c:	003fdc06 	br	800afa0 <__flash_exceptions_start+0xf7e09f80>
 800b030:	000b883a 	mov	r5,zero
 800b034:	003ff706 	br	800b014 <__flash_exceptions_start+0xf7e09ff4>

0800b038 <__divdf3>:
 800b038:	defff204 	addi	sp,sp,-56
 800b03c:	dd000815 	stw	r20,32(sp)
 800b040:	2828d53a 	srli	r20,r5,20
 800b044:	dd800a15 	stw	r22,40(sp)
 800b048:	282cd7fa 	srli	r22,r5,31
 800b04c:	dc000415 	stw	r16,16(sp)
 800b050:	04000434 	movhi	r16,16
 800b054:	df000c15 	stw	fp,48(sp)
 800b058:	dcc00715 	stw	r19,28(sp)
 800b05c:	dc800615 	stw	r18,24(sp)
 800b060:	dc400515 	stw	r17,20(sp)
 800b064:	843fffc4 	addi	r16,r16,-1
 800b068:	dfc00d15 	stw	ra,52(sp)
 800b06c:	ddc00b15 	stw	r23,44(sp)
 800b070:	dd400915 	stw	r21,36(sp)
 800b074:	a501ffcc 	andi	r20,r20,2047
 800b078:	2025883a 	mov	r18,r4
 800b07c:	2027883a 	mov	r19,r4
 800b080:	2c22703a 	and	r17,r5,r16
 800b084:	b7003fcc 	andi	fp,r22,255
 800b088:	a0005e26 	beq	r20,zero,800b204 <__divdf3+0x1cc>
 800b08c:	0081ffc4 	movi	r2,2047
 800b090:	a0803526 	beq	r20,r2,800b168 <__divdf3+0x130>
 800b094:	8c000434 	orhi	r16,r17,16
 800b098:	2004d77a 	srli	r2,r4,29
 800b09c:	802090fa 	slli	r16,r16,3
 800b0a0:	202690fa 	slli	r19,r4,3
 800b0a4:	a53f0044 	addi	r20,r20,-1023
 800b0a8:	80a2b03a 	or	r17,r16,r2
 800b0ac:	0025883a 	mov	r18,zero
 800b0b0:	0011883a 	mov	r8,zero
 800b0b4:	380ad53a 	srli	r5,r7,20
 800b0b8:	382ed7fa 	srli	r23,r7,31
 800b0bc:	04000434 	movhi	r16,16
 800b0c0:	843fffc4 	addi	r16,r16,-1
 800b0c4:	2941ffcc 	andi	r5,r5,2047
 800b0c8:	302b883a 	mov	r21,r6
 800b0cc:	3c20703a 	and	r16,r7,r16
 800b0d0:	ba403fcc 	andi	r9,r23,255
 800b0d4:	28006726 	beq	r5,zero,800b274 <__divdf3+0x23c>
 800b0d8:	0081ffc4 	movi	r2,2047
 800b0dc:	28805f26 	beq	r5,r2,800b25c <__divdf3+0x224>
 800b0e0:	84000434 	orhi	r16,r16,16
 800b0e4:	3004d77a 	srli	r2,r6,29
 800b0e8:	802090fa 	slli	r16,r16,3
 800b0ec:	302a90fa 	slli	r21,r6,3
 800b0f0:	297f0044 	addi	r5,r5,-1023
 800b0f4:	80a0b03a 	or	r16,r16,r2
 800b0f8:	000f883a 	mov	r7,zero
 800b0fc:	3c86b03a 	or	r3,r7,r18
 800b100:	180690ba 	slli	r3,r3,2
 800b104:	00820074 	movhi	r2,2049
 800b108:	10ac4a04 	addi	r2,r2,-20184
 800b10c:	1887883a 	add	r3,r3,r2
 800b110:	18c00017 	ldw	r3,0(r3)
 800b114:	b5c8f03a 	xor	r4,r22,r23
 800b118:	200d883a 	mov	r6,r4
 800b11c:	24803fcc 	andi	r18,r4,255
 800b120:	a169c83a 	sub	r20,r20,r5
 800b124:	1800683a 	jmp	r3
 800b128:	0800b370 	cmpltui	zero,at,717
 800b12c:	0800b1a0 	cmpeqi	zero,at,710
 800b130:	0800b334 	orhi	zero,at,716
 800b134:	0800b184 	addi	zero,at,710
 800b138:	0800b334 	orhi	zero,at,716
 800b13c:	0800b308 	cmpgei	zero,at,716
 800b140:	0800b334 	orhi	zero,at,716
 800b144:	0800b184 	addi	zero,at,710
 800b148:	0800b1a0 	cmpeqi	zero,at,710
 800b14c:	0800b1a0 	cmpeqi	zero,at,710
 800b150:	0800b308 	cmpgei	zero,at,716
 800b154:	0800b184 	addi	zero,at,710
 800b158:	0800b194 	ori	zero,at,710
 800b15c:	0800b194 	ori	zero,at,710
 800b160:	0800b194 	ori	zero,at,710
 800b164:	0800b344 	addi	zero,at,717
 800b168:	8904b03a 	or	r2,r17,r4
 800b16c:	1000631e 	bne	r2,zero,800b2fc <__divdf3+0x2c4>
 800b170:	04800204 	movi	r18,8
 800b174:	0023883a 	mov	r17,zero
 800b178:	0027883a 	mov	r19,zero
 800b17c:	02000084 	movi	r8,2
 800b180:	003fcc06 	br	800b0b4 <__flash_exceptions_start+0xf7e0a094>
 800b184:	8023883a 	mov	r17,r16
 800b188:	a827883a 	mov	r19,r21
 800b18c:	4839883a 	mov	fp,r9
 800b190:	3811883a 	mov	r8,r7
 800b194:	00800084 	movi	r2,2
 800b198:	40812a1e 	bne	r8,r2,800b644 <__divdf3+0x60c>
 800b19c:	e025883a 	mov	r18,fp
 800b1a0:	9180004c 	andi	r6,r18,1
 800b1a4:	0101ffc4 	movi	r4,2047
 800b1a8:	000b883a 	mov	r5,zero
 800b1ac:	0027883a 	mov	r19,zero
 800b1b0:	2008953a 	slli	r4,r4,20
 800b1b4:	30c03fcc 	andi	r3,r6,255
 800b1b8:	04000434 	movhi	r16,16
 800b1bc:	180697fa 	slli	r3,r3,31
 800b1c0:	843fffc4 	addi	r16,r16,-1
 800b1c4:	2c20703a 	and	r16,r5,r16
 800b1c8:	8120b03a 	or	r16,r16,r4
 800b1cc:	80c6b03a 	or	r3,r16,r3
 800b1d0:	9805883a 	mov	r2,r19
 800b1d4:	dfc00d17 	ldw	ra,52(sp)
 800b1d8:	df000c17 	ldw	fp,48(sp)
 800b1dc:	ddc00b17 	ldw	r23,44(sp)
 800b1e0:	dd800a17 	ldw	r22,40(sp)
 800b1e4:	dd400917 	ldw	r21,36(sp)
 800b1e8:	dd000817 	ldw	r20,32(sp)
 800b1ec:	dcc00717 	ldw	r19,28(sp)
 800b1f0:	dc800617 	ldw	r18,24(sp)
 800b1f4:	dc400517 	ldw	r17,20(sp)
 800b1f8:	dc000417 	ldw	r16,16(sp)
 800b1fc:	dec00e04 	addi	sp,sp,56
 800b200:	f800283a 	ret
 800b204:	8904b03a 	or	r2,r17,r4
 800b208:	10003726 	beq	r2,zero,800b2e8 <__divdf3+0x2b0>
 800b20c:	88011c26 	beq	r17,zero,800b680 <__divdf3+0x648>
 800b210:	8809883a 	mov	r4,r17
 800b214:	d9800315 	stw	r6,12(sp)
 800b218:	d9c00115 	stw	r7,4(sp)
 800b21c:	800cd380 	call	800cd38 <__clzsi2>
 800b220:	d9800317 	ldw	r6,12(sp)
 800b224:	d9c00117 	ldw	r7,4(sp)
 800b228:	1007883a 	mov	r3,r2
 800b22c:	01000a04 	movi	r4,40
 800b230:	1cfffe04 	addi	r19,r3,-8
 800b234:	20c9c83a 	sub	r4,r4,r3
 800b238:	8cca983a 	sll	r5,r17,r19
 800b23c:	9108d83a 	srl	r4,r18,r4
 800b240:	94e6983a 	sll	r19,r18,r19
 800b244:	2162b03a 	or	r17,r4,r5
 800b248:	053f0344 	movi	r20,-1011
 800b24c:	a0e9c83a 	sub	r20,r20,r3
 800b250:	0025883a 	mov	r18,zero
 800b254:	0011883a 	mov	r8,zero
 800b258:	003f9606 	br	800b0b4 <__flash_exceptions_start+0xf7e0a094>
 800b25c:	8184b03a 	or	r2,r16,r6
 800b260:	10001f1e 	bne	r2,zero,800b2e0 <__divdf3+0x2a8>
 800b264:	0021883a 	mov	r16,zero
 800b268:	002b883a 	mov	r21,zero
 800b26c:	01c00084 	movi	r7,2
 800b270:	003fa206 	br	800b0fc <__flash_exceptions_start+0xf7e0a0dc>
 800b274:	8184b03a 	or	r2,r16,r6
 800b278:	10001526 	beq	r2,zero,800b2d0 <__divdf3+0x298>
 800b27c:	80010c26 	beq	r16,zero,800b6b0 <__divdf3+0x678>
 800b280:	8009883a 	mov	r4,r16
 800b284:	d9800315 	stw	r6,12(sp)
 800b288:	da000215 	stw	r8,8(sp)
 800b28c:	da400015 	stw	r9,0(sp)
 800b290:	800cd380 	call	800cd38 <__clzsi2>
 800b294:	d9800317 	ldw	r6,12(sp)
 800b298:	da000217 	ldw	r8,8(sp)
 800b29c:	da400017 	ldw	r9,0(sp)
 800b2a0:	1007883a 	mov	r3,r2
 800b2a4:	01000a04 	movi	r4,40
 800b2a8:	1d7ffe04 	addi	r21,r3,-8
 800b2ac:	20c9c83a 	sub	r4,r4,r3
 800b2b0:	8560983a 	sll	r16,r16,r21
 800b2b4:	3108d83a 	srl	r4,r6,r4
 800b2b8:	356a983a 	sll	r21,r6,r21
 800b2bc:	2420b03a 	or	r16,r4,r16
 800b2c0:	017f0344 	movi	r5,-1011
 800b2c4:	28cbc83a 	sub	r5,r5,r3
 800b2c8:	000f883a 	mov	r7,zero
 800b2cc:	003f8b06 	br	800b0fc <__flash_exceptions_start+0xf7e0a0dc>
 800b2d0:	0021883a 	mov	r16,zero
 800b2d4:	002b883a 	mov	r21,zero
 800b2d8:	01c00044 	movi	r7,1
 800b2dc:	003f8706 	br	800b0fc <__flash_exceptions_start+0xf7e0a0dc>
 800b2e0:	01c000c4 	movi	r7,3
 800b2e4:	003f8506 	br	800b0fc <__flash_exceptions_start+0xf7e0a0dc>
 800b2e8:	04800104 	movi	r18,4
 800b2ec:	0023883a 	mov	r17,zero
 800b2f0:	0027883a 	mov	r19,zero
 800b2f4:	02000044 	movi	r8,1
 800b2f8:	003f6e06 	br	800b0b4 <__flash_exceptions_start+0xf7e0a094>
 800b2fc:	04800304 	movi	r18,12
 800b300:	020000c4 	movi	r8,3
 800b304:	003f6b06 	br	800b0b4 <__flash_exceptions_start+0xf7e0a094>
 800b308:	01400434 	movhi	r5,16
 800b30c:	000d883a 	mov	r6,zero
 800b310:	297fffc4 	addi	r5,r5,-1
 800b314:	04ffffc4 	movi	r19,-1
 800b318:	0101ffc4 	movi	r4,2047
 800b31c:	003fa406 	br	800b1b0 <__flash_exceptions_start+0xf7e0a190>
 800b320:	043f0084 	movi	r16,-1022
 800b324:	8521c83a 	sub	r16,r16,r20
 800b328:	00800e04 	movi	r2,56
 800b32c:	1401200e 	bge	r2,r16,800b7b0 <__divdf3+0x778>
 800b330:	9180004c 	andi	r6,r18,1
 800b334:	0009883a 	mov	r4,zero
 800b338:	000b883a 	mov	r5,zero
 800b33c:	0027883a 	mov	r19,zero
 800b340:	003f9b06 	br	800b1b0 <__flash_exceptions_start+0xf7e0a190>
 800b344:	8880022c 	andhi	r2,r17,8
 800b348:	1000c726 	beq	r2,zero,800b668 <__divdf3+0x630>
 800b34c:	8080022c 	andhi	r2,r16,8
 800b350:	1000c51e 	bne	r2,zero,800b668 <__divdf3+0x630>
 800b354:	00800434 	movhi	r2,16
 800b358:	81400234 	orhi	r5,r16,8
 800b35c:	10bfffc4 	addi	r2,r2,-1
 800b360:	b80d883a 	mov	r6,r23
 800b364:	288a703a 	and	r5,r5,r2
 800b368:	a827883a 	mov	r19,r21
 800b36c:	003fea06 	br	800b318 <__flash_exceptions_start+0xf7e0a2f8>
 800b370:	8440ea36 	bltu	r16,r17,800b71c <__divdf3+0x6e4>
 800b374:	8c00e826 	beq	r17,r16,800b718 <__divdf3+0x6e0>
 800b378:	a53fffc4 	addi	r20,r20,-1
 800b37c:	882d883a 	mov	r22,r17
 800b380:	000d883a 	mov	r6,zero
 800b384:	a804d63a 	srli	r2,r21,24
 800b388:	8020923a 	slli	r16,r16,8
 800b38c:	b009883a 	mov	r4,r22
 800b390:	d9800315 	stw	r6,12(sp)
 800b394:	1420b03a 	or	r16,r2,r16
 800b398:	802ed43a 	srli	r23,r16,16
 800b39c:	873fffcc 	andi	fp,r16,65535
 800b3a0:	a82a923a 	slli	r21,r21,8
 800b3a4:	b80b883a 	mov	r5,r23
 800b3a8:	800a78c0 	call	800a78c <__udivsi3>
 800b3ac:	b009883a 	mov	r4,r22
 800b3b0:	b80b883a 	mov	r5,r23
 800b3b4:	1023883a 	mov	r17,r2
 800b3b8:	800a7940 	call	800a794 <__umodsi3>
 800b3bc:	1004943a 	slli	r2,r2,16
 800b3c0:	9808d43a 	srli	r4,r19,16
 800b3c4:	8f2d383a 	mul	r22,r17,fp
 800b3c8:	d9800317 	ldw	r6,12(sp)
 800b3cc:	1106b03a 	or	r3,r2,r4
 800b3d0:	1d80062e 	bgeu	r3,r22,800b3ec <__divdf3+0x3b4>
 800b3d4:	1c07883a 	add	r3,r3,r16
 800b3d8:	88bfffc4 	addi	r2,r17,-1
 800b3dc:	1c00dc36 	bltu	r3,r16,800b750 <__divdf3+0x718>
 800b3e0:	1d80db2e 	bgeu	r3,r22,800b750 <__divdf3+0x718>
 800b3e4:	8c7fff84 	addi	r17,r17,-2
 800b3e8:	1c07883a 	add	r3,r3,r16
 800b3ec:	1dadc83a 	sub	r22,r3,r22
 800b3f0:	b009883a 	mov	r4,r22
 800b3f4:	b80b883a 	mov	r5,r23
 800b3f8:	d9800315 	stw	r6,12(sp)
 800b3fc:	800a78c0 	call	800a78c <__udivsi3>
 800b400:	b009883a 	mov	r4,r22
 800b404:	b80b883a 	mov	r5,r23
 800b408:	d8800015 	stw	r2,0(sp)
 800b40c:	800a7940 	call	800a794 <__umodsi3>
 800b410:	da400017 	ldw	r9,0(sp)
 800b414:	1004943a 	slli	r2,r2,16
 800b418:	9cffffcc 	andi	r19,r19,65535
 800b41c:	4f07383a 	mul	r3,r9,fp
 800b420:	14c8b03a 	or	r4,r2,r19
 800b424:	d9800317 	ldw	r6,12(sp)
 800b428:	20c0062e 	bgeu	r4,r3,800b444 <__divdf3+0x40c>
 800b42c:	2409883a 	add	r4,r4,r16
 800b430:	48bfffc4 	addi	r2,r9,-1
 800b434:	2400c436 	bltu	r4,r16,800b748 <__divdf3+0x710>
 800b438:	20c0c32e 	bgeu	r4,r3,800b748 <__divdf3+0x710>
 800b43c:	4a7fff84 	addi	r9,r9,-2
 800b440:	2409883a 	add	r4,r4,r16
 800b444:	8822943a 	slli	r17,r17,16
 800b448:	a80ed43a 	srli	r7,r21,16
 800b44c:	aa3fffcc 	andi	r8,r21,65535
 800b450:	4c62b03a 	or	r17,r9,r17
 800b454:	8816d43a 	srli	r11,r17,16
 800b458:	897fffcc 	andi	r5,r17,65535
 800b45c:	2a15383a 	mul	r10,r5,r8
 800b460:	5a19383a 	mul	r12,r11,r8
 800b464:	29cb383a 	mul	r5,r5,r7
 800b468:	5012d43a 	srli	r9,r10,16
 800b46c:	20c5c83a 	sub	r2,r4,r3
 800b470:	614b883a 	add	r5,r12,r5
 800b474:	2a4b883a 	add	r5,r5,r9
 800b478:	59c7383a 	mul	r3,r11,r7
 800b47c:	2b00022e 	bgeu	r5,r12,800b488 <__divdf3+0x450>
 800b480:	01000074 	movhi	r4,1
 800b484:	1907883a 	add	r3,r3,r4
 800b488:	2808d43a 	srli	r4,r5,16
 800b48c:	280a943a 	slli	r5,r5,16
 800b490:	54ffffcc 	andi	r19,r10,65535
 800b494:	1907883a 	add	r3,r3,r4
 800b498:	2ccb883a 	add	r5,r5,r19
 800b49c:	10c09336 	bltu	r2,r3,800b6ec <__divdf3+0x6b4>
 800b4a0:	10c0ad26 	beq	r2,r3,800b758 <__divdf3+0x720>
 800b4a4:	10c7c83a 	sub	r3,r2,r3
 800b4a8:	3167c83a 	sub	r19,r6,r5
 800b4ac:	34ed803a 	cmpltu	r22,r6,r19
 800b4b0:	1dadc83a 	sub	r22,r3,r22
 800b4b4:	b400b226 	beq	r22,r16,800b780 <__divdf3+0x748>
 800b4b8:	b009883a 	mov	r4,r22
 800b4bc:	b80b883a 	mov	r5,r23
 800b4c0:	d9c00115 	stw	r7,4(sp)
 800b4c4:	da000215 	stw	r8,8(sp)
 800b4c8:	800a78c0 	call	800a78c <__udivsi3>
 800b4cc:	b009883a 	mov	r4,r22
 800b4d0:	b80b883a 	mov	r5,r23
 800b4d4:	d8800315 	stw	r2,12(sp)
 800b4d8:	800a7940 	call	800a794 <__umodsi3>
 800b4dc:	d9800317 	ldw	r6,12(sp)
 800b4e0:	1004943a 	slli	r2,r2,16
 800b4e4:	9808d43a 	srli	r4,r19,16
 800b4e8:	372d383a 	mul	r22,r6,fp
 800b4ec:	d9c00117 	ldw	r7,4(sp)
 800b4f0:	1106b03a 	or	r3,r2,r4
 800b4f4:	da000217 	ldw	r8,8(sp)
 800b4f8:	1d80062e 	bgeu	r3,r22,800b514 <__divdf3+0x4dc>
 800b4fc:	1c07883a 	add	r3,r3,r16
 800b500:	30bfffc4 	addi	r2,r6,-1
 800b504:	1c00a036 	bltu	r3,r16,800b788 <__divdf3+0x750>
 800b508:	1d809f2e 	bgeu	r3,r22,800b788 <__divdf3+0x750>
 800b50c:	31bfff84 	addi	r6,r6,-2
 800b510:	1c07883a 	add	r3,r3,r16
 800b514:	1dadc83a 	sub	r22,r3,r22
 800b518:	b009883a 	mov	r4,r22
 800b51c:	b80b883a 	mov	r5,r23
 800b520:	d9800315 	stw	r6,12(sp)
 800b524:	d9c00115 	stw	r7,4(sp)
 800b528:	da000215 	stw	r8,8(sp)
 800b52c:	800a78c0 	call	800a78c <__udivsi3>
 800b530:	b009883a 	mov	r4,r22
 800b534:	b80b883a 	mov	r5,r23
 800b538:	d8800015 	stw	r2,0(sp)
 800b53c:	800a7940 	call	800a794 <__umodsi3>
 800b540:	da400017 	ldw	r9,0(sp)
 800b544:	1004943a 	slli	r2,r2,16
 800b548:	993fffcc 	andi	r4,r19,65535
 800b54c:	4f39383a 	mul	fp,r9,fp
 800b550:	1106b03a 	or	r3,r2,r4
 800b554:	d9800317 	ldw	r6,12(sp)
 800b558:	d9c00117 	ldw	r7,4(sp)
 800b55c:	da000217 	ldw	r8,8(sp)
 800b560:	1f00062e 	bgeu	r3,fp,800b57c <__divdf3+0x544>
 800b564:	1c07883a 	add	r3,r3,r16
 800b568:	48bfffc4 	addi	r2,r9,-1
 800b56c:	1c008836 	bltu	r3,r16,800b790 <__divdf3+0x758>
 800b570:	1f00872e 	bgeu	r3,fp,800b790 <__divdf3+0x758>
 800b574:	4a7fff84 	addi	r9,r9,-2
 800b578:	1c07883a 	add	r3,r3,r16
 800b57c:	3008943a 	slli	r4,r6,16
 800b580:	1f07c83a 	sub	r3,r3,fp
 800b584:	4926b03a 	or	r19,r9,r4
 800b588:	993fffcc 	andi	r4,r19,65535
 800b58c:	980cd43a 	srli	r6,r19,16
 800b590:	220b383a 	mul	r5,r4,r8
 800b594:	21c5383a 	mul	r2,r4,r7
 800b598:	3211383a 	mul	r8,r6,r8
 800b59c:	2808d43a 	srli	r4,r5,16
 800b5a0:	31cf383a 	mul	r7,r6,r7
 800b5a4:	4085883a 	add	r2,r8,r2
 800b5a8:	1105883a 	add	r2,r2,r4
 800b5ac:	1200022e 	bgeu	r2,r8,800b5b8 <__divdf3+0x580>
 800b5b0:	01000074 	movhi	r4,1
 800b5b4:	390f883a 	add	r7,r7,r4
 800b5b8:	1008d43a 	srli	r4,r2,16
 800b5bc:	1004943a 	slli	r2,r2,16
 800b5c0:	297fffcc 	andi	r5,r5,65535
 800b5c4:	390f883a 	add	r7,r7,r4
 800b5c8:	1145883a 	add	r2,r2,r5
 800b5cc:	19c06536 	bltu	r3,r7,800b764 <__divdf3+0x72c>
 800b5d0:	19c09f26 	beq	r3,r7,800b850 <__divdf3+0x818>
 800b5d4:	9cc00054 	ori	r19,r19,1
 800b5d8:	a100ffc4 	addi	r4,r20,1023
 800b5dc:	013f500e 	bge	zero,r4,800b320 <__flash_exceptions_start+0xf7e0a300>
 800b5e0:	988001cc 	andi	r2,r19,7
 800b5e4:	10000726 	beq	r2,zero,800b604 <__divdf3+0x5cc>
 800b5e8:	98c003cc 	andi	r3,r19,15
 800b5ec:	00800104 	movi	r2,4
 800b5f0:	18800426 	beq	r3,r2,800b604 <__divdf3+0x5cc>
 800b5f4:	9885883a 	add	r2,r19,r2
 800b5f8:	14e1803a 	cmpltu	r16,r2,r19
 800b5fc:	8c23883a 	add	r17,r17,r16
 800b600:	1027883a 	mov	r19,r2
 800b604:	8880402c 	andhi	r2,r17,256
 800b608:	10000426 	beq	r2,zero,800b61c <__divdf3+0x5e4>
 800b60c:	00bfc034 	movhi	r2,65280
 800b610:	10bfffc4 	addi	r2,r2,-1
 800b614:	a1010004 	addi	r4,r20,1024
 800b618:	88a2703a 	and	r17,r17,r2
 800b61c:	0081ff84 	movi	r2,2046
 800b620:	113edf16 	blt	r2,r4,800b1a0 <__flash_exceptions_start+0xf7e0a180>
 800b624:	9826d0fa 	srli	r19,r19,3
 800b628:	8804977a 	slli	r2,r17,29
 800b62c:	8820927a 	slli	r16,r17,9
 800b630:	2101ffcc 	andi	r4,r4,2047
 800b634:	14e6b03a 	or	r19,r2,r19
 800b638:	800ad33a 	srli	r5,r16,12
 800b63c:	9180004c 	andi	r6,r18,1
 800b640:	003edb06 	br	800b1b0 <__flash_exceptions_start+0xf7e0a190>
 800b644:	008000c4 	movi	r2,3
 800b648:	4080a826 	beq	r8,r2,800b8ec <__divdf3+0x8b4>
 800b64c:	00800044 	movi	r2,1
 800b650:	4080551e 	bne	r8,r2,800b7a8 <__divdf3+0x770>
 800b654:	e00d883a 	mov	r6,fp
 800b658:	0009883a 	mov	r4,zero
 800b65c:	000b883a 	mov	r5,zero
 800b660:	0027883a 	mov	r19,zero
 800b664:	003ed206 	br	800b1b0 <__flash_exceptions_start+0xf7e0a190>
 800b668:	00800434 	movhi	r2,16
 800b66c:	89400234 	orhi	r5,r17,8
 800b670:	10bfffc4 	addi	r2,r2,-1
 800b674:	b00d883a 	mov	r6,r22
 800b678:	288a703a 	and	r5,r5,r2
 800b67c:	003f2606 	br	800b318 <__flash_exceptions_start+0xf7e0a2f8>
 800b680:	d9800315 	stw	r6,12(sp)
 800b684:	d9c00115 	stw	r7,4(sp)
 800b688:	800cd380 	call	800cd38 <__clzsi2>
 800b68c:	10c00804 	addi	r3,r2,32
 800b690:	010009c4 	movi	r4,39
 800b694:	d9800317 	ldw	r6,12(sp)
 800b698:	d9c00117 	ldw	r7,4(sp)
 800b69c:	20fee30e 	bge	r4,r3,800b22c <__flash_exceptions_start+0xf7e0a20c>
 800b6a0:	117ffe04 	addi	r5,r2,-8
 800b6a4:	9162983a 	sll	r17,r18,r5
 800b6a8:	0027883a 	mov	r19,zero
 800b6ac:	003ee606 	br	800b248 <__flash_exceptions_start+0xf7e0a228>
 800b6b0:	3009883a 	mov	r4,r6
 800b6b4:	d9800315 	stw	r6,12(sp)
 800b6b8:	da000215 	stw	r8,8(sp)
 800b6bc:	da400015 	stw	r9,0(sp)
 800b6c0:	800cd380 	call	800cd38 <__clzsi2>
 800b6c4:	10c00804 	addi	r3,r2,32
 800b6c8:	010009c4 	movi	r4,39
 800b6cc:	d9800317 	ldw	r6,12(sp)
 800b6d0:	da000217 	ldw	r8,8(sp)
 800b6d4:	da400017 	ldw	r9,0(sp)
 800b6d8:	20fef20e 	bge	r4,r3,800b2a4 <__flash_exceptions_start+0xf7e0a284>
 800b6dc:	10bffe04 	addi	r2,r2,-8
 800b6e0:	a8a0983a 	sll	r16,r21,r2
 800b6e4:	002b883a 	mov	r21,zero
 800b6e8:	003ef506 	br	800b2c0 <__flash_exceptions_start+0xf7e0a2a0>
 800b6ec:	354d883a 	add	r6,r6,r21
 800b6f0:	3549803a 	cmpltu	r4,r6,r21
 800b6f4:	2409883a 	add	r4,r4,r16
 800b6f8:	2089883a 	add	r4,r4,r2
 800b6fc:	88bfffc4 	addi	r2,r17,-1
 800b700:	81000c2e 	bgeu	r16,r4,800b734 <__divdf3+0x6fc>
 800b704:	20c04436 	bltu	r4,r3,800b818 <__divdf3+0x7e0>
 800b708:	19006f26 	beq	r3,r4,800b8c8 <__divdf3+0x890>
 800b70c:	20c7c83a 	sub	r3,r4,r3
 800b710:	1023883a 	mov	r17,r2
 800b714:	003f6406 	br	800b4a8 <__flash_exceptions_start+0xf7e0a488>
 800b718:	9d7f1736 	bltu	r19,r21,800b378 <__flash_exceptions_start+0xf7e0a358>
 800b71c:	9806d07a 	srli	r3,r19,1
 800b720:	880497fa 	slli	r2,r17,31
 800b724:	980c97fa 	slli	r6,r19,31
 800b728:	882cd07a 	srli	r22,r17,1
 800b72c:	18a6b03a 	or	r19,r3,r2
 800b730:	003f1406 	br	800b384 <__flash_exceptions_start+0xf7e0a364>
 800b734:	243ff51e 	bne	r4,r16,800b70c <__flash_exceptions_start+0xf7e0a6ec>
 800b738:	357ff22e 	bgeu	r6,r21,800b704 <__flash_exceptions_start+0xf7e0a6e4>
 800b73c:	80c7c83a 	sub	r3,r16,r3
 800b740:	1023883a 	mov	r17,r2
 800b744:	003f5806 	br	800b4a8 <__flash_exceptions_start+0xf7e0a488>
 800b748:	1013883a 	mov	r9,r2
 800b74c:	003f3d06 	br	800b444 <__flash_exceptions_start+0xf7e0a424>
 800b750:	1023883a 	mov	r17,r2
 800b754:	003f2506 	br	800b3ec <__flash_exceptions_start+0xf7e0a3cc>
 800b758:	317fe436 	bltu	r6,r5,800b6ec <__flash_exceptions_start+0xf7e0a6cc>
 800b75c:	0007883a 	mov	r3,zero
 800b760:	003f5106 	br	800b4a8 <__flash_exceptions_start+0xf7e0a488>
 800b764:	1c07883a 	add	r3,r3,r16
 800b768:	993fffc4 	addi	r4,r19,-1
 800b76c:	1c000a2e 	bgeu	r3,r16,800b798 <__divdf3+0x760>
 800b770:	2027883a 	mov	r19,r4
 800b774:	19ff971e 	bne	r3,r7,800b5d4 <__flash_exceptions_start+0xf7e0a5b4>
 800b778:	a8bf961e 	bne	r21,r2,800b5d4 <__flash_exceptions_start+0xf7e0a5b4>
 800b77c:	003f9606 	br	800b5d8 <__flash_exceptions_start+0xf7e0a5b8>
 800b780:	04ffffc4 	movi	r19,-1
 800b784:	003f9406 	br	800b5d8 <__flash_exceptions_start+0xf7e0a5b8>
 800b788:	100d883a 	mov	r6,r2
 800b78c:	003f6106 	br	800b514 <__flash_exceptions_start+0xf7e0a4f4>
 800b790:	1013883a 	mov	r9,r2
 800b794:	003f7906 	br	800b57c <__flash_exceptions_start+0xf7e0a55c>
 800b798:	19c02636 	bltu	r3,r7,800b834 <__divdf3+0x7fc>
 800b79c:	38c04d26 	beq	r7,r3,800b8d4 <__divdf3+0x89c>
 800b7a0:	2027883a 	mov	r19,r4
 800b7a4:	003f8b06 	br	800b5d4 <__flash_exceptions_start+0xf7e0a5b4>
 800b7a8:	e025883a 	mov	r18,fp
 800b7ac:	003f8a06 	br	800b5d8 <__flash_exceptions_start+0xf7e0a5b8>
 800b7b0:	008007c4 	movi	r2,31
 800b7b4:	14002a16 	blt	r2,r16,800b860 <__divdf3+0x828>
 800b7b8:	a5010784 	addi	r20,r20,1054
 800b7bc:	8d04983a 	sll	r2,r17,r20
 800b7c0:	9c06d83a 	srl	r3,r19,r16
 800b7c4:	9d28983a 	sll	r20,r19,r20
 800b7c8:	8c20d83a 	srl	r16,r17,r16
 800b7cc:	1886b03a 	or	r3,r3,r2
 800b7d0:	a004c03a 	cmpne	r2,r20,zero
 800b7d4:	1884b03a 	or	r2,r3,r2
 800b7d8:	10c001cc 	andi	r3,r2,7
 800b7dc:	18000726 	beq	r3,zero,800b7fc <__divdf3+0x7c4>
 800b7e0:	110003cc 	andi	r4,r2,15
 800b7e4:	00c00104 	movi	r3,4
 800b7e8:	20c00426 	beq	r4,r3,800b7fc <__divdf3+0x7c4>
 800b7ec:	10c00104 	addi	r3,r2,4
 800b7f0:	1885803a 	cmpltu	r2,r3,r2
 800b7f4:	80a1883a 	add	r16,r16,r2
 800b7f8:	1805883a 	mov	r2,r3
 800b7fc:	80c0202c 	andhi	r3,r16,128
 800b800:	18002d26 	beq	r3,zero,800b8b8 <__divdf3+0x880>
 800b804:	9180004c 	andi	r6,r18,1
 800b808:	01000044 	movi	r4,1
 800b80c:	000b883a 	mov	r5,zero
 800b810:	0027883a 	mov	r19,zero
 800b814:	003e6606 	br	800b1b0 <__flash_exceptions_start+0xf7e0a190>
 800b818:	354d883a 	add	r6,r6,r21
 800b81c:	356d803a 	cmpltu	r22,r6,r21
 800b820:	b42d883a 	add	r22,r22,r16
 800b824:	b12d883a 	add	r22,r22,r4
 800b828:	8c7fff84 	addi	r17,r17,-2
 800b82c:	b0c7c83a 	sub	r3,r22,r3
 800b830:	003f1d06 	br	800b4a8 <__flash_exceptions_start+0xf7e0a488>
 800b834:	ad4b883a 	add	r5,r21,r21
 800b838:	2d6b803a 	cmpltu	r21,r5,r21
 800b83c:	ac2b883a 	add	r21,r21,r16
 800b840:	1d47883a 	add	r3,r3,r21
 800b844:	993fff84 	addi	r4,r19,-2
 800b848:	282b883a 	mov	r21,r5
 800b84c:	003fc806 	br	800b770 <__flash_exceptions_start+0xf7e0a750>
 800b850:	103fc41e 	bne	r2,zero,800b764 <__flash_exceptions_start+0xf7e0a744>
 800b854:	002b883a 	mov	r21,zero
 800b858:	a8bf5e1e 	bne	r21,r2,800b5d4 <__flash_exceptions_start+0xf7e0a5b4>
 800b85c:	003f5e06 	br	800b5d8 <__flash_exceptions_start+0xf7e0a5b8>
 800b860:	00bef884 	movi	r2,-1054
 800b864:	1505c83a 	sub	r2,r2,r20
 800b868:	00c00804 	movi	r3,32
 800b86c:	8884d83a 	srl	r2,r17,r2
 800b870:	80c01c26 	beq	r16,r3,800b8e4 <__divdf3+0x8ac>
 800b874:	a0c10f84 	addi	r3,r20,1086
 800b878:	88c6983a 	sll	r3,r17,r3
 800b87c:	1cc6b03a 	or	r3,r3,r19
 800b880:	1806c03a 	cmpne	r3,r3,zero
 800b884:	1884b03a 	or	r2,r3,r2
 800b888:	140001cc 	andi	r16,r2,7
 800b88c:	8000061e 	bne	r16,zero,800b8a8 <__divdf3+0x870>
 800b890:	000b883a 	mov	r5,zero
 800b894:	1004d0fa 	srli	r2,r2,3
 800b898:	9180004c 	andi	r6,r18,1
 800b89c:	0009883a 	mov	r4,zero
 800b8a0:	1426b03a 	or	r19,r2,r16
 800b8a4:	003e4206 	br	800b1b0 <__flash_exceptions_start+0xf7e0a190>
 800b8a8:	110003cc 	andi	r4,r2,15
 800b8ac:	00c00104 	movi	r3,4
 800b8b0:	0021883a 	mov	r16,zero
 800b8b4:	20ffcd1e 	bne	r4,r3,800b7ec <__flash_exceptions_start+0xf7e0a7cc>
 800b8b8:	800a927a 	slli	r5,r16,9
 800b8bc:	8020977a 	slli	r16,r16,29
 800b8c0:	280ad33a 	srli	r5,r5,12
 800b8c4:	003ff306 	br	800b894 <__flash_exceptions_start+0xf7e0a874>
 800b8c8:	317fd336 	bltu	r6,r5,800b818 <__flash_exceptions_start+0xf7e0a7f8>
 800b8cc:	1023883a 	mov	r17,r2
 800b8d0:	003fa206 	br	800b75c <__flash_exceptions_start+0xf7e0a73c>
 800b8d4:	a8bfd736 	bltu	r21,r2,800b834 <__flash_exceptions_start+0xf7e0a814>
 800b8d8:	2027883a 	mov	r19,r4
 800b8dc:	a8bf3d1e 	bne	r21,r2,800b5d4 <__flash_exceptions_start+0xf7e0a5b4>
 800b8e0:	003f3d06 	br	800b5d8 <__flash_exceptions_start+0xf7e0a5b8>
 800b8e4:	0007883a 	mov	r3,zero
 800b8e8:	003fe406 	br	800b87c <__flash_exceptions_start+0xf7e0a85c>
 800b8ec:	00800434 	movhi	r2,16
 800b8f0:	89400234 	orhi	r5,r17,8
 800b8f4:	10bfffc4 	addi	r2,r2,-1
 800b8f8:	e00d883a 	mov	r6,fp
 800b8fc:	288a703a 	and	r5,r5,r2
 800b900:	003e8506 	br	800b318 <__flash_exceptions_start+0xf7e0a2f8>

0800b904 <__eqdf2>:
 800b904:	2804d53a 	srli	r2,r5,20
 800b908:	3806d53a 	srli	r3,r7,20
 800b90c:	02000434 	movhi	r8,16
 800b910:	423fffc4 	addi	r8,r8,-1
 800b914:	1081ffcc 	andi	r2,r2,2047
 800b918:	0241ffc4 	movi	r9,2047
 800b91c:	2a14703a 	and	r10,r5,r8
 800b920:	18c1ffcc 	andi	r3,r3,2047
 800b924:	3a10703a 	and	r8,r7,r8
 800b928:	280ad7fa 	srli	r5,r5,31
 800b92c:	380ed7fa 	srli	r7,r7,31
 800b930:	12400f26 	beq	r2,r9,800b970 <__eqdf2+0x6c>
 800b934:	0241ffc4 	movi	r9,2047
 800b938:	1a400326 	beq	r3,r9,800b948 <__eqdf2+0x44>
 800b93c:	10c00526 	beq	r2,r3,800b954 <__eqdf2+0x50>
 800b940:	00800044 	movi	r2,1
 800b944:	f800283a 	ret
 800b948:	4192b03a 	or	r9,r8,r6
 800b94c:	483ffc1e 	bne	r9,zero,800b940 <__flash_exceptions_start+0xf7e0a920>
 800b950:	10fffb1e 	bne	r2,r3,800b940 <__flash_exceptions_start+0xf7e0a920>
 800b954:	523ffa1e 	bne	r10,r8,800b940 <__flash_exceptions_start+0xf7e0a920>
 800b958:	21bff91e 	bne	r4,r6,800b940 <__flash_exceptions_start+0xf7e0a920>
 800b95c:	29c00826 	beq	r5,r7,800b980 <__eqdf2+0x7c>
 800b960:	103ff71e 	bne	r2,zero,800b940 <__flash_exceptions_start+0xf7e0a920>
 800b964:	5104b03a 	or	r2,r10,r4
 800b968:	1004c03a 	cmpne	r2,r2,zero
 800b96c:	f800283a 	ret
 800b970:	5112b03a 	or	r9,r10,r4
 800b974:	483fef26 	beq	r9,zero,800b934 <__flash_exceptions_start+0xf7e0a914>
 800b978:	00800044 	movi	r2,1
 800b97c:	f800283a 	ret
 800b980:	0005883a 	mov	r2,zero
 800b984:	f800283a 	ret

0800b988 <__gedf2>:
 800b988:	2804d53a 	srli	r2,r5,20
 800b98c:	3806d53a 	srli	r3,r7,20
 800b990:	02000434 	movhi	r8,16
 800b994:	423fffc4 	addi	r8,r8,-1
 800b998:	0241ffc4 	movi	r9,2047
 800b99c:	1081ffcc 	andi	r2,r2,2047
 800b9a0:	2a14703a 	and	r10,r5,r8
 800b9a4:	1a46703a 	and	r3,r3,r9
 800b9a8:	3a10703a 	and	r8,r7,r8
 800b9ac:	280ad7fa 	srli	r5,r5,31
 800b9b0:	380ed7fa 	srli	r7,r7,31
 800b9b4:	12400b26 	beq	r2,r9,800b9e4 <__gedf2+0x5c>
 800b9b8:	1a401626 	beq	r3,r9,800ba14 <__gedf2+0x8c>
 800b9bc:	10000c1e 	bne	r2,zero,800b9f0 <__gedf2+0x68>
 800b9c0:	5112b03a 	or	r9,r10,r4
 800b9c4:	4813003a 	cmpeq	r9,r9,zero
 800b9c8:	4817883a 	mov	r11,r9
 800b9cc:	18000c1e 	bne	r3,zero,800ba00 <__gedf2+0x78>
 800b9d0:	4198b03a 	or	r12,r8,r6
 800b9d4:	60000a1e 	bne	r12,zero,800ba00 <__gedf2+0x78>
 800b9d8:	48001326 	beq	r9,zero,800ba28 <__gedf2+0xa0>
 800b9dc:	0005883a 	mov	r2,zero
 800b9e0:	f800283a 	ret
 800b9e4:	5112b03a 	or	r9,r10,r4
 800b9e8:	4800191e 	bne	r9,zero,800ba50 <__gedf2+0xc8>
 800b9ec:	18800926 	beq	r3,r2,800ba14 <__gedf2+0x8c>
 800b9f0:	18000b1e 	bne	r3,zero,800ba20 <__gedf2+0x98>
 800b9f4:	4192b03a 	or	r9,r8,r6
 800b9f8:	0017883a 	mov	r11,zero
 800b9fc:	48000a26 	beq	r9,zero,800ba28 <__gedf2+0xa0>
 800ba00:	39c03fcc 	andi	r7,r7,255
 800ba04:	58000726 	beq	r11,zero,800ba24 <__gedf2+0x9c>
 800ba08:	3800081e 	bne	r7,zero,800ba2c <__gedf2+0xa4>
 800ba0c:	00bfffc4 	movi	r2,-1
 800ba10:	f800283a 	ret
 800ba14:	4192b03a 	or	r9,r8,r6
 800ba18:	48000d1e 	bne	r9,zero,800ba50 <__gedf2+0xc8>
 800ba1c:	103fe826 	beq	r2,zero,800b9c0 <__flash_exceptions_start+0xf7e0a9a0>
 800ba20:	39c03fcc 	andi	r7,r7,255
 800ba24:	29c00326 	beq	r5,r7,800ba34 <__gedf2+0xac>
 800ba28:	283ff81e 	bne	r5,zero,800ba0c <__flash_exceptions_start+0xf7e0a9ec>
 800ba2c:	00800044 	movi	r2,1
 800ba30:	f800283a 	ret
 800ba34:	18bffc16 	blt	r3,r2,800ba28 <__flash_exceptions_start+0xf7e0aa08>
 800ba38:	10c00316 	blt	r2,r3,800ba48 <__gedf2+0xc0>
 800ba3c:	42bffa36 	bltu	r8,r10,800ba28 <__flash_exceptions_start+0xf7e0aa08>
 800ba40:	52000526 	beq	r10,r8,800ba58 <__gedf2+0xd0>
 800ba44:	523fe52e 	bgeu	r10,r8,800b9dc <__flash_exceptions_start+0xf7e0a9bc>
 800ba48:	283ff026 	beq	r5,zero,800ba0c <__flash_exceptions_start+0xf7e0a9ec>
 800ba4c:	003ff706 	br	800ba2c <__flash_exceptions_start+0xf7e0aa0c>
 800ba50:	00bfff84 	movi	r2,-2
 800ba54:	f800283a 	ret
 800ba58:	313ff336 	bltu	r6,r4,800ba28 <__flash_exceptions_start+0xf7e0aa08>
 800ba5c:	21bfdf2e 	bgeu	r4,r6,800b9dc <__flash_exceptions_start+0xf7e0a9bc>
 800ba60:	283fea26 	beq	r5,zero,800ba0c <__flash_exceptions_start+0xf7e0a9ec>
 800ba64:	003ff106 	br	800ba2c <__flash_exceptions_start+0xf7e0aa0c>

0800ba68 <__ledf2>:
 800ba68:	2804d53a 	srli	r2,r5,20
 800ba6c:	3810d53a 	srli	r8,r7,20
 800ba70:	00c00434 	movhi	r3,16
 800ba74:	18ffffc4 	addi	r3,r3,-1
 800ba78:	0241ffc4 	movi	r9,2047
 800ba7c:	1081ffcc 	andi	r2,r2,2047
 800ba80:	28d4703a 	and	r10,r5,r3
 800ba84:	4250703a 	and	r8,r8,r9
 800ba88:	38c6703a 	and	r3,r7,r3
 800ba8c:	280ad7fa 	srli	r5,r5,31
 800ba90:	380ed7fa 	srli	r7,r7,31
 800ba94:	12400b26 	beq	r2,r9,800bac4 <__ledf2+0x5c>
 800ba98:	42401926 	beq	r8,r9,800bb00 <__ledf2+0x98>
 800ba9c:	10000c1e 	bne	r2,zero,800bad0 <__ledf2+0x68>
 800baa0:	5112b03a 	or	r9,r10,r4
 800baa4:	4813003a 	cmpeq	r9,r9,zero
 800baa8:	4817883a 	mov	r11,r9
 800baac:	40000f26 	beq	r8,zero,800baec <__ledf2+0x84>
 800bab0:	39c03fcc 	andi	r7,r7,255
 800bab4:	58001826 	beq	r11,zero,800bb18 <__ledf2+0xb0>
 800bab8:	38000a1e 	bne	r7,zero,800bae4 <__ledf2+0x7c>
 800babc:	00bfffc4 	movi	r2,-1
 800bac0:	f800283a 	ret
 800bac4:	5112b03a 	or	r9,r10,r4
 800bac8:	48000f1e 	bne	r9,zero,800bb08 <__ledf2+0xa0>
 800bacc:	40800c26 	beq	r8,r2,800bb00 <__ledf2+0x98>
 800bad0:	4000101e 	bne	r8,zero,800bb14 <__ledf2+0xac>
 800bad4:	1992b03a 	or	r9,r3,r6
 800bad8:	0017883a 	mov	r11,zero
 800badc:	483ff41e 	bne	r9,zero,800bab0 <__flash_exceptions_start+0xf7e0aa90>
 800bae0:	283ff61e 	bne	r5,zero,800babc <__flash_exceptions_start+0xf7e0aa9c>
 800bae4:	00800044 	movi	r2,1
 800bae8:	f800283a 	ret
 800baec:	1998b03a 	or	r12,r3,r6
 800baf0:	603fef1e 	bne	r12,zero,800bab0 <__flash_exceptions_start+0xf7e0aa90>
 800baf4:	483ffa26 	beq	r9,zero,800bae0 <__flash_exceptions_start+0xf7e0aac0>
 800baf8:	0005883a 	mov	r2,zero
 800bafc:	f800283a 	ret
 800bb00:	1992b03a 	or	r9,r3,r6
 800bb04:	48000226 	beq	r9,zero,800bb10 <__ledf2+0xa8>
 800bb08:	00800084 	movi	r2,2
 800bb0c:	f800283a 	ret
 800bb10:	103fe326 	beq	r2,zero,800baa0 <__flash_exceptions_start+0xf7e0aa80>
 800bb14:	39c03fcc 	andi	r7,r7,255
 800bb18:	29fff11e 	bne	r5,r7,800bae0 <__flash_exceptions_start+0xf7e0aac0>
 800bb1c:	40bff016 	blt	r8,r2,800bae0 <__flash_exceptions_start+0xf7e0aac0>
 800bb20:	12000316 	blt	r2,r8,800bb30 <__ledf2+0xc8>
 800bb24:	1abfee36 	bltu	r3,r10,800bae0 <__flash_exceptions_start+0xf7e0aac0>
 800bb28:	50c00326 	beq	r10,r3,800bb38 <__ledf2+0xd0>
 800bb2c:	50fff22e 	bgeu	r10,r3,800baf8 <__flash_exceptions_start+0xf7e0aad8>
 800bb30:	283fe226 	beq	r5,zero,800babc <__flash_exceptions_start+0xf7e0aa9c>
 800bb34:	003feb06 	br	800bae4 <__flash_exceptions_start+0xf7e0aac4>
 800bb38:	313fe936 	bltu	r6,r4,800bae0 <__flash_exceptions_start+0xf7e0aac0>
 800bb3c:	21bfee2e 	bgeu	r4,r6,800baf8 <__flash_exceptions_start+0xf7e0aad8>
 800bb40:	283fde26 	beq	r5,zero,800babc <__flash_exceptions_start+0xf7e0aa9c>
 800bb44:	003fe706 	br	800bae4 <__flash_exceptions_start+0xf7e0aac4>

0800bb48 <__muldf3>:
 800bb48:	defff204 	addi	sp,sp,-56
 800bb4c:	2804d53a 	srli	r2,r5,20
 800bb50:	dd800a15 	stw	r22,40(sp)
 800bb54:	282cd7fa 	srli	r22,r5,31
 800bb58:	dc000415 	stw	r16,16(sp)
 800bb5c:	04000434 	movhi	r16,16
 800bb60:	df000c15 	stw	fp,48(sp)
 800bb64:	dd000815 	stw	r20,32(sp)
 800bb68:	dcc00715 	stw	r19,28(sp)
 800bb6c:	dc800615 	stw	r18,24(sp)
 800bb70:	dc400515 	stw	r17,20(sp)
 800bb74:	843fffc4 	addi	r16,r16,-1
 800bb78:	dfc00d15 	stw	ra,52(sp)
 800bb7c:	ddc00b15 	stw	r23,44(sp)
 800bb80:	dd400915 	stw	r21,36(sp)
 800bb84:	1501ffcc 	andi	r20,r2,2047
 800bb88:	2023883a 	mov	r17,r4
 800bb8c:	2025883a 	mov	r18,r4
 800bb90:	2c20703a 	and	r16,r5,r16
 800bb94:	b027883a 	mov	r19,r22
 800bb98:	b7003fcc 	andi	fp,r22,255
 800bb9c:	a0005926 	beq	r20,zero,800bd04 <__muldf3+0x1bc>
 800bba0:	0081ffc4 	movi	r2,2047
 800bba4:	a0803426 	beq	r20,r2,800bc78 <__muldf3+0x130>
 800bba8:	84000434 	orhi	r16,r16,16
 800bbac:	2004d77a 	srli	r2,r4,29
 800bbb0:	802090fa 	slli	r16,r16,3
 800bbb4:	202490fa 	slli	r18,r4,3
 800bbb8:	a53f0044 	addi	r20,r20,-1023
 800bbbc:	80a0b03a 	or	r16,r16,r2
 800bbc0:	002b883a 	mov	r21,zero
 800bbc4:	0015883a 	mov	r10,zero
 800bbc8:	3812d53a 	srli	r9,r7,20
 800bbcc:	3806d7fa 	srli	r3,r7,31
 800bbd0:	02000434 	movhi	r8,16
 800bbd4:	423fffc4 	addi	r8,r8,-1
 800bbd8:	4941ffcc 	andi	r5,r9,2047
 800bbdc:	302f883a 	mov	r23,r6
 800bbe0:	3a22703a 	and	r17,r7,r8
 800bbe4:	1ac03fcc 	andi	r11,r3,255
 800bbe8:	28006226 	beq	r5,zero,800bd74 <__muldf3+0x22c>
 800bbec:	0081ffc4 	movi	r2,2047
 800bbf0:	28805a26 	beq	r5,r2,800bd5c <__muldf3+0x214>
 800bbf4:	8a000434 	orhi	r8,r17,16
 800bbf8:	3004d77a 	srli	r2,r6,29
 800bbfc:	401090fa 	slli	r8,r8,3
 800bc00:	302e90fa 	slli	r23,r6,3
 800bc04:	297f0044 	addi	r5,r5,-1023
 800bc08:	40a2b03a 	or	r17,r8,r2
 800bc0c:	0013883a 	mov	r9,zero
 800bc10:	4d4cb03a 	or	r6,r9,r21
 800bc14:	300c90ba 	slli	r6,r6,2
 800bc18:	02020074 	movhi	r8,2049
 800bc1c:	422f0e04 	addi	r8,r8,-17352
 800bc20:	320d883a 	add	r6,r6,r8
 800bc24:	31800017 	ldw	r6,0(r6)
 800bc28:	a14b883a 	add	r5,r20,r5
 800bc2c:	1dacf03a 	xor	r22,r3,r22
 800bc30:	2b000044 	addi	r12,r5,1
 800bc34:	3000683a 	jmp	r6
 800bc38:	0800be74 	orhi	zero,at,761
 800bc3c:	0800be60 	cmpeqi	zero,at,761
 800bc40:	0800be60 	cmpeqi	zero,at,761
 800bc44:	0800be4c 	andi	zero,at,761
 800bc48:	0800bc94 	ori	zero,at,754
 800bc4c:	0800bc94 	ori	zero,at,754
 800bc50:	0800be34 	orhi	zero,at,760
 800bc54:	0800be4c 	andi	zero,at,761
 800bc58:	0800bc94 	ori	zero,at,754
 800bc5c:	0800be34 	orhi	zero,at,760
 800bc60:	0800bc94 	ori	zero,at,754
 800bc64:	0800be4c 	andi	zero,at,761
 800bc68:	0800bc98 	cmpnei	zero,at,754
 800bc6c:	0800bc98 	cmpnei	zero,at,754
 800bc70:	0800bc98 	cmpnei	zero,at,754
 800bc74:	0800c070 	cmpltui	zero,at,769
 800bc78:	8104b03a 	or	r2,r16,r4
 800bc7c:	10006a1e 	bne	r2,zero,800be28 <__muldf3+0x2e0>
 800bc80:	05400204 	movi	r21,8
 800bc84:	0021883a 	mov	r16,zero
 800bc88:	0025883a 	mov	r18,zero
 800bc8c:	02800084 	movi	r10,2
 800bc90:	003fcd06 	br	800bbc8 <__flash_exceptions_start+0xf7e0aba8>
 800bc94:	b039883a 	mov	fp,r22
 800bc98:	00800084 	movi	r2,2
 800bc9c:	50804e1e 	bne	r10,r2,800bdd8 <__muldf3+0x290>
 800bca0:	e4c0004c 	andi	r19,fp,1
 800bca4:	0101ffc4 	movi	r4,2047
 800bca8:	0021883a 	mov	r16,zero
 800bcac:	0025883a 	mov	r18,zero
 800bcb0:	2008953a 	slli	r4,r4,20
 800bcb4:	98c03fcc 	andi	r3,r19,255
 800bcb8:	01400434 	movhi	r5,16
 800bcbc:	297fffc4 	addi	r5,r5,-1
 800bcc0:	180697fa 	slli	r3,r3,31
 800bcc4:	8160703a 	and	r16,r16,r5
 800bcc8:	8120b03a 	or	r16,r16,r4
 800bccc:	80c6b03a 	or	r3,r16,r3
 800bcd0:	9005883a 	mov	r2,r18
 800bcd4:	dfc00d17 	ldw	ra,52(sp)
 800bcd8:	df000c17 	ldw	fp,48(sp)
 800bcdc:	ddc00b17 	ldw	r23,44(sp)
 800bce0:	dd800a17 	ldw	r22,40(sp)
 800bce4:	dd400917 	ldw	r21,36(sp)
 800bce8:	dd000817 	ldw	r20,32(sp)
 800bcec:	dcc00717 	ldw	r19,28(sp)
 800bcf0:	dc800617 	ldw	r18,24(sp)
 800bcf4:	dc400517 	ldw	r17,20(sp)
 800bcf8:	dc000417 	ldw	r16,16(sp)
 800bcfc:	dec00e04 	addi	sp,sp,56
 800bd00:	f800283a 	ret
 800bd04:	8104b03a 	or	r2,r16,r4
 800bd08:	10004226 	beq	r2,zero,800be14 <__muldf3+0x2cc>
 800bd0c:	8000f926 	beq	r16,zero,800c0f4 <__muldf3+0x5ac>
 800bd10:	8009883a 	mov	r4,r16
 800bd14:	d9800315 	stw	r6,12(sp)
 800bd18:	d9c00015 	stw	r7,0(sp)
 800bd1c:	800cd380 	call	800cd38 <__clzsi2>
 800bd20:	d9800317 	ldw	r6,12(sp)
 800bd24:	d9c00017 	ldw	r7,0(sp)
 800bd28:	1007883a 	mov	r3,r2
 800bd2c:	01000a04 	movi	r4,40
 800bd30:	18bffe04 	addi	r2,r3,-8
 800bd34:	20c9c83a 	sub	r4,r4,r3
 800bd38:	80a0983a 	sll	r16,r16,r2
 800bd3c:	8908d83a 	srl	r4,r17,r4
 800bd40:	88a4983a 	sll	r18,r17,r2
 800bd44:	2420b03a 	or	r16,r4,r16
 800bd48:	017f0344 	movi	r5,-1011
 800bd4c:	28e9c83a 	sub	r20,r5,r3
 800bd50:	002b883a 	mov	r21,zero
 800bd54:	0015883a 	mov	r10,zero
 800bd58:	003f9b06 	br	800bbc8 <__flash_exceptions_start+0xf7e0aba8>
 800bd5c:	8984b03a 	or	r2,r17,r6
 800bd60:	10002a1e 	bne	r2,zero,800be0c <__muldf3+0x2c4>
 800bd64:	0023883a 	mov	r17,zero
 800bd68:	002f883a 	mov	r23,zero
 800bd6c:	02400084 	movi	r9,2
 800bd70:	003fa706 	br	800bc10 <__flash_exceptions_start+0xf7e0abf0>
 800bd74:	8984b03a 	or	r2,r17,r6
 800bd78:	10002026 	beq	r2,zero,800bdfc <__muldf3+0x2b4>
 800bd7c:	8800cc26 	beq	r17,zero,800c0b0 <__muldf3+0x568>
 800bd80:	8809883a 	mov	r4,r17
 800bd84:	d8c00215 	stw	r3,8(sp)
 800bd88:	d9800315 	stw	r6,12(sp)
 800bd8c:	da800015 	stw	r10,0(sp)
 800bd90:	dac00115 	stw	r11,4(sp)
 800bd94:	800cd380 	call	800cd38 <__clzsi2>
 800bd98:	d8c00217 	ldw	r3,8(sp)
 800bd9c:	d9800317 	ldw	r6,12(sp)
 800bda0:	da800017 	ldw	r10,0(sp)
 800bda4:	dac00117 	ldw	r11,4(sp)
 800bda8:	1009883a 	mov	r4,r2
 800bdac:	01400a04 	movi	r5,40
 800bdb0:	25fffe04 	addi	r23,r4,-8
 800bdb4:	290bc83a 	sub	r5,r5,r4
 800bdb8:	8dd0983a 	sll	r8,r17,r23
 800bdbc:	314ad83a 	srl	r5,r6,r5
 800bdc0:	35ee983a 	sll	r23,r6,r23
 800bdc4:	2a22b03a 	or	r17,r5,r8
 800bdc8:	017f0344 	movi	r5,-1011
 800bdcc:	290bc83a 	sub	r5,r5,r4
 800bdd0:	0013883a 	mov	r9,zero
 800bdd4:	003f8e06 	br	800bc10 <__flash_exceptions_start+0xf7e0abf0>
 800bdd8:	008000c4 	movi	r2,3
 800bddc:	50811d26 	beq	r10,r2,800c254 <__muldf3+0x70c>
 800bde0:	00800044 	movi	r2,1
 800bde4:	5080e01e 	bne	r10,r2,800c168 <__muldf3+0x620>
 800bde8:	e0a6703a 	and	r19,fp,r2
 800bdec:	0009883a 	mov	r4,zero
 800bdf0:	0021883a 	mov	r16,zero
 800bdf4:	0025883a 	mov	r18,zero
 800bdf8:	003fad06 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800bdfc:	0023883a 	mov	r17,zero
 800be00:	002f883a 	mov	r23,zero
 800be04:	02400044 	movi	r9,1
 800be08:	003f8106 	br	800bc10 <__flash_exceptions_start+0xf7e0abf0>
 800be0c:	024000c4 	movi	r9,3
 800be10:	003f7f06 	br	800bc10 <__flash_exceptions_start+0xf7e0abf0>
 800be14:	05400104 	movi	r21,4
 800be18:	0021883a 	mov	r16,zero
 800be1c:	0025883a 	mov	r18,zero
 800be20:	02800044 	movi	r10,1
 800be24:	003f6806 	br	800bbc8 <__flash_exceptions_start+0xf7e0aba8>
 800be28:	05400304 	movi	r21,12
 800be2c:	028000c4 	movi	r10,3
 800be30:	003f6506 	br	800bbc8 <__flash_exceptions_start+0xf7e0aba8>
 800be34:	04000434 	movhi	r16,16
 800be38:	0027883a 	mov	r19,zero
 800be3c:	843fffc4 	addi	r16,r16,-1
 800be40:	04bfffc4 	movi	r18,-1
 800be44:	0101ffc4 	movi	r4,2047
 800be48:	003f9906 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800be4c:	8821883a 	mov	r16,r17
 800be50:	b825883a 	mov	r18,r23
 800be54:	5839883a 	mov	fp,r11
 800be58:	4815883a 	mov	r10,r9
 800be5c:	003f8e06 	br	800bc98 <__flash_exceptions_start+0xf7e0ac78>
 800be60:	8821883a 	mov	r16,r17
 800be64:	b825883a 	mov	r18,r23
 800be68:	b039883a 	mov	fp,r22
 800be6c:	4815883a 	mov	r10,r9
 800be70:	003f8906 	br	800bc98 <__flash_exceptions_start+0xf7e0ac78>
 800be74:	b80cd43a 	srli	r6,r23,16
 800be78:	9006d43a 	srli	r3,r18,16
 800be7c:	90bfffcc 	andi	r2,r18,65535
 800be80:	bdffffcc 	andi	r23,r23,65535
 800be84:	b891383a 	mul	r8,r23,r2
 800be88:	b8c9383a 	mul	r4,r23,r3
 800be8c:	309b383a 	mul	r13,r6,r2
 800be90:	400ed43a 	srli	r7,r8,16
 800be94:	30df383a 	mul	r15,r6,r3
 800be98:	235b883a 	add	r13,r4,r13
 800be9c:	69db883a 	add	r13,r13,r7
 800bea0:	6900022e 	bgeu	r13,r4,800beac <__muldf3+0x364>
 800bea4:	01000074 	movhi	r4,1
 800bea8:	791f883a 	add	r15,r15,r4
 800beac:	8828d43a 	srli	r20,r17,16
 800beb0:	8c7fffcc 	andi	r17,r17,65535
 800beb4:	888f383a 	mul	r7,r17,r2
 800beb8:	88d3383a 	mul	r9,r17,r3
 800bebc:	a0a5383a 	mul	r18,r20,r2
 800bec0:	3816d43a 	srli	r11,r7,16
 800bec4:	6814943a 	slli	r10,r13,16
 800bec8:	4ca5883a 	add	r18,r9,r18
 800becc:	423fffcc 	andi	r8,r8,65535
 800bed0:	92e5883a 	add	r18,r18,r11
 800bed4:	6808d43a 	srli	r4,r13,16
 800bed8:	5215883a 	add	r10,r10,r8
 800bedc:	a0c7383a 	mul	r3,r20,r3
 800bee0:	9240022e 	bgeu	r18,r9,800beec <__muldf3+0x3a4>
 800bee4:	00800074 	movhi	r2,1
 800bee8:	1887883a 	add	r3,r3,r2
 800beec:	802ad43a 	srli	r21,r16,16
 800bef0:	80bfffcc 	andi	r2,r16,65535
 800bef4:	b893383a 	mul	r9,r23,r2
 800bef8:	3091383a 	mul	r8,r6,r2
 800befc:	bd6f383a 	mul	r23,r23,r21
 800bf00:	9026943a 	slli	r19,r18,16
 800bf04:	481ad43a 	srli	r13,r9,16
 800bf08:	9024d43a 	srli	r18,r18,16
 800bf0c:	39ffffcc 	andi	r7,r7,65535
 800bf10:	ba11883a 	add	r8,r23,r8
 800bf14:	99e7883a 	add	r19,r19,r7
 800bf18:	4351883a 	add	r8,r8,r13
 800bf1c:	1c97883a 	add	r11,r3,r18
 800bf20:	354d383a 	mul	r6,r6,r21
 800bf24:	9925883a 	add	r18,r19,r4
 800bf28:	45c0022e 	bgeu	r8,r23,800bf34 <__muldf3+0x3ec>
 800bf2c:	00c00074 	movhi	r3,1
 800bf30:	30cd883a 	add	r6,r6,r3
 800bf34:	8889383a 	mul	r4,r17,r2
 800bf38:	8d63383a 	mul	r17,r17,r21
 800bf3c:	a085383a 	mul	r2,r20,r2
 800bf40:	200ed43a 	srli	r7,r4,16
 800bf44:	401cd43a 	srli	r14,r8,16
 800bf48:	401a943a 	slli	r13,r8,16
 800bf4c:	8885883a 	add	r2,r17,r2
 800bf50:	4a3fffcc 	andi	r8,r9,65535
 800bf54:	11c5883a 	add	r2,r2,r7
 800bf58:	339d883a 	add	r14,r6,r14
 800bf5c:	6a11883a 	add	r8,r13,r8
 800bf60:	a561383a 	mul	r16,r20,r21
 800bf64:	1440022e 	bgeu	r2,r17,800bf70 <__muldf3+0x428>
 800bf68:	00c00074 	movhi	r3,1
 800bf6c:	80e1883a 	add	r16,r16,r3
 800bf70:	1006943a 	slli	r3,r2,16
 800bf74:	213fffcc 	andi	r4,r4,65535
 800bf78:	93db883a 	add	r13,r18,r15
 800bf7c:	1909883a 	add	r4,r3,r4
 800bf80:	22c7883a 	add	r3,r4,r11
 800bf84:	6cd3803a 	cmpltu	r9,r13,r19
 800bf88:	6a09883a 	add	r4,r13,r8
 800bf8c:	1a5b883a 	add	r13,r3,r9
 800bf90:	2211803a 	cmpltu	r8,r4,r8
 800bf94:	734d883a 	add	r6,r14,r13
 800bf98:	100ed43a 	srli	r7,r2,16
 800bf9c:	6a53803a 	cmpltu	r9,r13,r9
 800bfa0:	3205883a 	add	r2,r6,r8
 800bfa4:	1ac7803a 	cmpltu	r3,r3,r11
 800bfa8:	1211803a 	cmpltu	r8,r2,r8
 800bfac:	48c6b03a 	or	r3,r9,r3
 800bfb0:	338d803a 	cmpltu	r6,r6,r14
 800bfb4:	19c7883a 	add	r3,r3,r7
 800bfb8:	418cb03a 	or	r6,r8,r6
 800bfbc:	1987883a 	add	r3,r3,r6
 800bfc0:	2024927a 	slli	r18,r4,9
 800bfc4:	1c07883a 	add	r3,r3,r16
 800bfc8:	1806927a 	slli	r3,r3,9
 800bfcc:	1020d5fa 	srli	r16,r2,23
 800bfd0:	2008d5fa 	srli	r4,r4,23
 800bfd4:	9294b03a 	or	r10,r18,r10
 800bfd8:	1004927a 	slli	r2,r2,9
 800bfdc:	5024c03a 	cmpne	r18,r10,zero
 800bfe0:	1c20b03a 	or	r16,r3,r16
 800bfe4:	9108b03a 	or	r4,r18,r4
 800bfe8:	80c0402c 	andhi	r3,r16,256
 800bfec:	20a4b03a 	or	r18,r4,r2
 800bff0:	18000726 	beq	r3,zero,800c010 <__muldf3+0x4c8>
 800bff4:	9006d07a 	srli	r3,r18,1
 800bff8:	800897fa 	slli	r4,r16,31
 800bffc:	9080004c 	andi	r2,r18,1
 800c000:	8020d07a 	srli	r16,r16,1
 800c004:	10c4b03a 	or	r2,r2,r3
 800c008:	1124b03a 	or	r18,r2,r4
 800c00c:	600b883a 	mov	r5,r12
 800c010:	2900ffc4 	addi	r4,r5,1023
 800c014:	01004b0e 	bge	zero,r4,800c144 <__muldf3+0x5fc>
 800c018:	908001cc 	andi	r2,r18,7
 800c01c:	10000726 	beq	r2,zero,800c03c <__muldf3+0x4f4>
 800c020:	90c003cc 	andi	r3,r18,15
 800c024:	00800104 	movi	r2,4
 800c028:	18800426 	beq	r3,r2,800c03c <__muldf3+0x4f4>
 800c02c:	9087883a 	add	r3,r18,r2
 800c030:	1c85803a 	cmpltu	r2,r3,r18
 800c034:	80a1883a 	add	r16,r16,r2
 800c038:	1825883a 	mov	r18,r3
 800c03c:	8080402c 	andhi	r2,r16,256
 800c040:	10000426 	beq	r2,zero,800c054 <__muldf3+0x50c>
 800c044:	00bfc034 	movhi	r2,65280
 800c048:	10bfffc4 	addi	r2,r2,-1
 800c04c:	29010004 	addi	r4,r5,1024
 800c050:	80a0703a 	and	r16,r16,r2
 800c054:	0081ff84 	movi	r2,2046
 800c058:	1100320e 	bge	r2,r4,800c124 <__muldf3+0x5dc>
 800c05c:	b4c0004c 	andi	r19,r22,1
 800c060:	0101ffc4 	movi	r4,2047
 800c064:	0021883a 	mov	r16,zero
 800c068:	0025883a 	mov	r18,zero
 800c06c:	003f1006 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800c070:	8080022c 	andhi	r2,r16,8
 800c074:	10000926 	beq	r2,zero,800c09c <__muldf3+0x554>
 800c078:	8880022c 	andhi	r2,r17,8
 800c07c:	1000071e 	bne	r2,zero,800c09c <__muldf3+0x554>
 800c080:	00800434 	movhi	r2,16
 800c084:	8c000234 	orhi	r16,r17,8
 800c088:	10bfffc4 	addi	r2,r2,-1
 800c08c:	1827883a 	mov	r19,r3
 800c090:	80a0703a 	and	r16,r16,r2
 800c094:	b825883a 	mov	r18,r23
 800c098:	003f6a06 	br	800be44 <__flash_exceptions_start+0xf7e0ae24>
 800c09c:	00800434 	movhi	r2,16
 800c0a0:	84000234 	orhi	r16,r16,8
 800c0a4:	10bfffc4 	addi	r2,r2,-1
 800c0a8:	80a0703a 	and	r16,r16,r2
 800c0ac:	003f6506 	br	800be44 <__flash_exceptions_start+0xf7e0ae24>
 800c0b0:	3009883a 	mov	r4,r6
 800c0b4:	d8c00215 	stw	r3,8(sp)
 800c0b8:	d9800315 	stw	r6,12(sp)
 800c0bc:	da800015 	stw	r10,0(sp)
 800c0c0:	dac00115 	stw	r11,4(sp)
 800c0c4:	800cd380 	call	800cd38 <__clzsi2>
 800c0c8:	11000804 	addi	r4,r2,32
 800c0cc:	014009c4 	movi	r5,39
 800c0d0:	d8c00217 	ldw	r3,8(sp)
 800c0d4:	d9800317 	ldw	r6,12(sp)
 800c0d8:	da800017 	ldw	r10,0(sp)
 800c0dc:	dac00117 	ldw	r11,4(sp)
 800c0e0:	293f320e 	bge	r5,r4,800bdac <__flash_exceptions_start+0xf7e0ad8c>
 800c0e4:	10bffe04 	addi	r2,r2,-8
 800c0e8:	b8a2983a 	sll	r17,r23,r2
 800c0ec:	002f883a 	mov	r23,zero
 800c0f0:	003f3506 	br	800bdc8 <__flash_exceptions_start+0xf7e0ada8>
 800c0f4:	d9800315 	stw	r6,12(sp)
 800c0f8:	d9c00015 	stw	r7,0(sp)
 800c0fc:	800cd380 	call	800cd38 <__clzsi2>
 800c100:	10c00804 	addi	r3,r2,32
 800c104:	010009c4 	movi	r4,39
 800c108:	d9800317 	ldw	r6,12(sp)
 800c10c:	d9c00017 	ldw	r7,0(sp)
 800c110:	20ff060e 	bge	r4,r3,800bd2c <__flash_exceptions_start+0xf7e0ad0c>
 800c114:	10bffe04 	addi	r2,r2,-8
 800c118:	88a0983a 	sll	r16,r17,r2
 800c11c:	0025883a 	mov	r18,zero
 800c120:	003f0906 	br	800bd48 <__flash_exceptions_start+0xf7e0ad28>
 800c124:	9004d0fa 	srli	r2,r18,3
 800c128:	8024977a 	slli	r18,r16,29
 800c12c:	8020927a 	slli	r16,r16,9
 800c130:	2101ffcc 	andi	r4,r4,2047
 800c134:	90a4b03a 	or	r18,r18,r2
 800c138:	8020d33a 	srli	r16,r16,12
 800c13c:	b4c0004c 	andi	r19,r22,1
 800c140:	003edb06 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800c144:	00ff0084 	movi	r3,-1022
 800c148:	1947c83a 	sub	r3,r3,r5
 800c14c:	00800e04 	movi	r2,56
 800c150:	10c0080e 	bge	r2,r3,800c174 <__muldf3+0x62c>
 800c154:	b4c0004c 	andi	r19,r22,1
 800c158:	0009883a 	mov	r4,zero
 800c15c:	0021883a 	mov	r16,zero
 800c160:	0025883a 	mov	r18,zero
 800c164:	003ed206 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800c168:	600b883a 	mov	r5,r12
 800c16c:	e02d883a 	mov	r22,fp
 800c170:	003fa706 	br	800c010 <__flash_exceptions_start+0xf7e0aff0>
 800c174:	008007c4 	movi	r2,31
 800c178:	10c01816 	blt	r2,r3,800c1dc <__muldf3+0x694>
 800c17c:	29410784 	addi	r5,r5,1054
 800c180:	8144983a 	sll	r2,r16,r5
 800c184:	90c8d83a 	srl	r4,r18,r3
 800c188:	914a983a 	sll	r5,r18,r5
 800c18c:	80c6d83a 	srl	r3,r16,r3
 800c190:	2088b03a 	or	r4,r4,r2
 800c194:	2804c03a 	cmpne	r2,r5,zero
 800c198:	2084b03a 	or	r2,r4,r2
 800c19c:	110001cc 	andi	r4,r2,7
 800c1a0:	20000726 	beq	r4,zero,800c1c0 <__muldf3+0x678>
 800c1a4:	114003cc 	andi	r5,r2,15
 800c1a8:	01000104 	movi	r4,4
 800c1ac:	29000426 	beq	r5,r4,800c1c0 <__muldf3+0x678>
 800c1b0:	11000104 	addi	r4,r2,4
 800c1b4:	2085803a 	cmpltu	r2,r4,r2
 800c1b8:	1887883a 	add	r3,r3,r2
 800c1bc:	2005883a 	mov	r2,r4
 800c1c0:	1900202c 	andhi	r4,r3,128
 800c1c4:	20001826 	beq	r4,zero,800c228 <__muldf3+0x6e0>
 800c1c8:	b4c0004c 	andi	r19,r22,1
 800c1cc:	01000044 	movi	r4,1
 800c1d0:	0021883a 	mov	r16,zero
 800c1d4:	0025883a 	mov	r18,zero
 800c1d8:	003eb506 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800c1dc:	00bef884 	movi	r2,-1054
 800c1e0:	1145c83a 	sub	r2,r2,r5
 800c1e4:	8088d83a 	srl	r4,r16,r2
 800c1e8:	00800804 	movi	r2,32
 800c1ec:	18801726 	beq	r3,r2,800c24c <__muldf3+0x704>
 800c1f0:	28810f84 	addi	r2,r5,1086
 800c1f4:	8084983a 	sll	r2,r16,r2
 800c1f8:	1484b03a 	or	r2,r2,r18
 800c1fc:	1004c03a 	cmpne	r2,r2,zero
 800c200:	1104b03a 	or	r2,r2,r4
 800c204:	10c001cc 	andi	r3,r2,7
 800c208:	18000b1e 	bne	r3,zero,800c238 <__muldf3+0x6f0>
 800c20c:	0021883a 	mov	r16,zero
 800c210:	1004d0fa 	srli	r2,r2,3
 800c214:	b4c0004c 	andi	r19,r22,1
 800c218:	0009883a 	mov	r4,zero
 800c21c:	10e4b03a 	or	r18,r2,r3
 800c220:	003ea306 	br	800bcb0 <__flash_exceptions_start+0xf7e0ac90>
 800c224:	0007883a 	mov	r3,zero
 800c228:	1820927a 	slli	r16,r3,9
 800c22c:	1806977a 	slli	r3,r3,29
 800c230:	8020d33a 	srli	r16,r16,12
 800c234:	003ff606 	br	800c210 <__flash_exceptions_start+0xf7e0b1f0>
 800c238:	110003cc 	andi	r4,r2,15
 800c23c:	00c00104 	movi	r3,4
 800c240:	20fff826 	beq	r4,r3,800c224 <__flash_exceptions_start+0xf7e0b204>
 800c244:	0007883a 	mov	r3,zero
 800c248:	003fd906 	br	800c1b0 <__flash_exceptions_start+0xf7e0b190>
 800c24c:	0005883a 	mov	r2,zero
 800c250:	003fe906 	br	800c1f8 <__flash_exceptions_start+0xf7e0b1d8>
 800c254:	00800434 	movhi	r2,16
 800c258:	84000234 	orhi	r16,r16,8
 800c25c:	10bfffc4 	addi	r2,r2,-1
 800c260:	e4c0004c 	andi	r19,fp,1
 800c264:	80a0703a 	and	r16,r16,r2
 800c268:	003ef606 	br	800be44 <__flash_exceptions_start+0xf7e0ae24>

0800c26c <__subdf3>:
 800c26c:	00c00434 	movhi	r3,16
 800c270:	18ffffc4 	addi	r3,r3,-1
 800c274:	defffb04 	addi	sp,sp,-20
 800c278:	28d2703a 	and	r9,r5,r3
 800c27c:	3814d53a 	srli	r10,r7,20
 800c280:	38c6703a 	and	r3,r7,r3
 800c284:	3004d77a 	srli	r2,r6,29
 800c288:	dc800215 	stw	r18,8(sp)
 800c28c:	dc000015 	stw	r16,0(sp)
 800c290:	2824d7fa 	srli	r18,r5,31
 800c294:	2820d53a 	srli	r16,r5,20
 800c298:	481290fa 	slli	r9,r9,3
 800c29c:	200ad77a 	srli	r5,r4,29
 800c2a0:	180690fa 	slli	r3,r3,3
 800c2a4:	dc400115 	stw	r17,4(sp)
 800c2a8:	dfc00415 	stw	ra,16(sp)
 800c2ac:	202290fa 	slli	r17,r4,3
 800c2b0:	dcc00315 	stw	r19,12(sp)
 800c2b4:	5281ffcc 	andi	r10,r10,2047
 800c2b8:	0101ffc4 	movi	r4,2047
 800c2bc:	9011883a 	mov	r8,r18
 800c2c0:	8401ffcc 	andi	r16,r16,2047
 800c2c4:	94803fcc 	andi	r18,r18,255
 800c2c8:	494ab03a 	or	r5,r9,r5
 800c2cc:	380ed7fa 	srli	r7,r7,31
 800c2d0:	1886b03a 	or	r3,r3,r2
 800c2d4:	300c90fa 	slli	r6,r6,3
 800c2d8:	51009026 	beq	r10,r4,800c51c <__subdf3+0x2b0>
 800c2dc:	39c0005c 	xori	r7,r7,1
 800c2e0:	8285c83a 	sub	r2,r16,r10
 800c2e4:	91c06f26 	beq	r18,r7,800c4a4 <__subdf3+0x238>
 800c2e8:	0080b10e 	bge	zero,r2,800c5b0 <__subdf3+0x344>
 800c2ec:	50002a1e 	bne	r10,zero,800c398 <__subdf3+0x12c>
 800c2f0:	1988b03a 	or	r4,r3,r6
 800c2f4:	2000941e 	bne	r4,zero,800c548 <__subdf3+0x2dc>
 800c2f8:	888001cc 	andi	r2,r17,7
 800c2fc:	10005b26 	beq	r2,zero,800c46c <__subdf3+0x200>
 800c300:	88c003cc 	andi	r3,r17,15
 800c304:	00800104 	movi	r2,4
 800c308:	18805826 	beq	r3,r2,800c46c <__subdf3+0x200>
 800c30c:	88c00104 	addi	r3,r17,4
 800c310:	1c63803a 	cmpltu	r17,r3,r17
 800c314:	2c4b883a 	add	r5,r5,r17
 800c318:	2880202c 	andhi	r2,r5,128
 800c31c:	9200004c 	andi	r8,r18,1
 800c320:	1823883a 	mov	r17,r3
 800c324:	10005426 	beq	r2,zero,800c478 <__subdf3+0x20c>
 800c328:	84000044 	addi	r16,r16,1
 800c32c:	0081ffc4 	movi	r2,2047
 800c330:	8080bf26 	beq	r16,r2,800c630 <__subdf3+0x3c4>
 800c334:	013fe034 	movhi	r4,65408
 800c338:	213fffc4 	addi	r4,r4,-1
 800c33c:	290a703a 	and	r5,r5,r4
 800c340:	2804977a 	slli	r2,r5,29
 800c344:	280a927a 	slli	r5,r5,9
 800c348:	8822d0fa 	srli	r17,r17,3
 800c34c:	8401ffcc 	andi	r16,r16,2047
 800c350:	2808d33a 	srli	r4,r5,12
 800c354:	1444b03a 	or	r2,r2,r17
 800c358:	8401ffcc 	andi	r16,r16,2047
 800c35c:	800a953a 	slli	r5,r16,20
 800c360:	40c03fcc 	andi	r3,r8,255
 800c364:	04000434 	movhi	r16,16
 800c368:	180697fa 	slli	r3,r3,31
 800c36c:	843fffc4 	addi	r16,r16,-1
 800c370:	2420703a 	and	r16,r4,r16
 800c374:	8160b03a 	or	r16,r16,r5
 800c378:	80c6b03a 	or	r3,r16,r3
 800c37c:	dfc00417 	ldw	ra,16(sp)
 800c380:	dcc00317 	ldw	r19,12(sp)
 800c384:	dc800217 	ldw	r18,8(sp)
 800c388:	dc400117 	ldw	r17,4(sp)
 800c38c:	dc000017 	ldw	r16,0(sp)
 800c390:	dec00504 	addi	sp,sp,20
 800c394:	f800283a 	ret
 800c398:	0101ffc4 	movi	r4,2047
 800c39c:	813fd626 	beq	r16,r4,800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c3a0:	18c02034 	orhi	r3,r3,128
 800c3a4:	01000e04 	movi	r4,56
 800c3a8:	2080a416 	blt	r4,r2,800c63c <__subdf3+0x3d0>
 800c3ac:	010007c4 	movi	r4,31
 800c3b0:	2080c716 	blt	r4,r2,800c6d0 <__subdf3+0x464>
 800c3b4:	01000804 	movi	r4,32
 800c3b8:	2089c83a 	sub	r4,r4,r2
 800c3bc:	1910983a 	sll	r8,r3,r4
 800c3c0:	308ed83a 	srl	r7,r6,r2
 800c3c4:	3108983a 	sll	r4,r6,r4
 800c3c8:	1884d83a 	srl	r2,r3,r2
 800c3cc:	41ccb03a 	or	r6,r8,r7
 800c3d0:	2008c03a 	cmpne	r4,r4,zero
 800c3d4:	310cb03a 	or	r6,r6,r4
 800c3d8:	898dc83a 	sub	r6,r17,r6
 800c3dc:	89a3803a 	cmpltu	r17,r17,r6
 800c3e0:	288bc83a 	sub	r5,r5,r2
 800c3e4:	2c4bc83a 	sub	r5,r5,r17
 800c3e8:	3023883a 	mov	r17,r6
 800c3ec:	2880202c 	andhi	r2,r5,128
 800c3f0:	10006b26 	beq	r2,zero,800c5a0 <__subdf3+0x334>
 800c3f4:	04c02034 	movhi	r19,128
 800c3f8:	9cffffc4 	addi	r19,r19,-1
 800c3fc:	2ce6703a 	and	r19,r5,r19
 800c400:	98007c26 	beq	r19,zero,800c5f4 <__subdf3+0x388>
 800c404:	9809883a 	mov	r4,r19
 800c408:	800cd380 	call	800cd38 <__clzsi2>
 800c40c:	10fffe04 	addi	r3,r2,-8
 800c410:	010007c4 	movi	r4,31
 800c414:	20c07d16 	blt	r4,r3,800c60c <__subdf3+0x3a0>
 800c418:	01400a04 	movi	r5,40
 800c41c:	2885c83a 	sub	r2,r5,r2
 800c420:	888ad83a 	srl	r5,r17,r2
 800c424:	98e6983a 	sll	r19,r19,r3
 800c428:	88e2983a 	sll	r17,r17,r3
 800c42c:	2ce6b03a 	or	r19,r5,r19
 800c430:	1c007a16 	blt	r3,r16,800c61c <__subdf3+0x3b0>
 800c434:	1c21c83a 	sub	r16,r3,r16
 800c438:	81400044 	addi	r5,r16,1
 800c43c:	00c007c4 	movi	r3,31
 800c440:	19409616 	blt	r3,r5,800c69c <__subdf3+0x430>
 800c444:	1c21c83a 	sub	r16,r3,r16
 800c448:	8c08983a 	sll	r4,r17,r16
 800c44c:	8946d83a 	srl	r3,r17,r5
 800c450:	9c20983a 	sll	r16,r19,r16
 800c454:	2008c03a 	cmpne	r4,r4,zero
 800c458:	994ad83a 	srl	r5,r19,r5
 800c45c:	1c06b03a 	or	r3,r3,r16
 800c460:	1922b03a 	or	r17,r3,r4
 800c464:	0021883a 	mov	r16,zero
 800c468:	003fa306 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c46c:	2880202c 	andhi	r2,r5,128
 800c470:	9200004c 	andi	r8,r18,1
 800c474:	103fac1e 	bne	r2,zero,800c328 <__flash_exceptions_start+0xf7e0b308>
 800c478:	2804977a 	slli	r2,r5,29
 800c47c:	8822d0fa 	srli	r17,r17,3
 800c480:	00c1ffc4 	movi	r3,2047
 800c484:	280ad0fa 	srli	r5,r5,3
 800c488:	1444b03a 	or	r2,r2,r17
 800c48c:	80c02726 	beq	r16,r3,800c52c <__subdf3+0x2c0>
 800c490:	01000434 	movhi	r4,16
 800c494:	213fffc4 	addi	r4,r4,-1
 800c498:	80e0703a 	and	r16,r16,r3
 800c49c:	2908703a 	and	r4,r5,r4
 800c4a0:	003fad06 	br	800c358 <__flash_exceptions_start+0xf7e0b338>
 800c4a4:	0080690e 	bge	zero,r2,800c64c <__subdf3+0x3e0>
 800c4a8:	50002f26 	beq	r10,zero,800c568 <__subdf3+0x2fc>
 800c4ac:	0101ffc4 	movi	r4,2047
 800c4b0:	813f9126 	beq	r16,r4,800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c4b4:	18c02034 	orhi	r3,r3,128
 800c4b8:	01000e04 	movi	r4,56
 800c4bc:	2080b00e 	bge	r4,r2,800c780 <__subdf3+0x514>
 800c4c0:	198cb03a 	or	r6,r3,r6
 800c4c4:	300ec03a 	cmpne	r7,r6,zero
 800c4c8:	0005883a 	mov	r2,zero
 800c4cc:	3c4f883a 	add	r7,r7,r17
 800c4d0:	3c63803a 	cmpltu	r17,r7,r17
 800c4d4:	114b883a 	add	r5,r2,r5
 800c4d8:	2c4b883a 	add	r5,r5,r17
 800c4dc:	3823883a 	mov	r17,r7
 800c4e0:	2880202c 	andhi	r2,r5,128
 800c4e4:	10002e26 	beq	r2,zero,800c5a0 <__subdf3+0x334>
 800c4e8:	84000044 	addi	r16,r16,1
 800c4ec:	0081ffc4 	movi	r2,2047
 800c4f0:	8080de26 	beq	r16,r2,800c86c <__subdf3+0x600>
 800c4f4:	00bfe034 	movhi	r2,65408
 800c4f8:	10bfffc4 	addi	r2,r2,-1
 800c4fc:	288a703a 	and	r5,r5,r2
 800c500:	880cd07a 	srli	r6,r17,1
 800c504:	280897fa 	slli	r4,r5,31
 800c508:	88c0004c 	andi	r3,r17,1
 800c50c:	30e2b03a 	or	r17,r6,r3
 800c510:	280ad07a 	srli	r5,r5,1
 800c514:	8922b03a 	or	r17,r17,r4
 800c518:	003f7706 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c51c:	1984b03a 	or	r2,r3,r6
 800c520:	103f6e26 	beq	r2,zero,800c2dc <__flash_exceptions_start+0xf7e0b2bc>
 800c524:	39c03fcc 	andi	r7,r7,255
 800c528:	003f6d06 	br	800c2e0 <__flash_exceptions_start+0xf7e0b2c0>
 800c52c:	1146b03a 	or	r3,r2,r5
 800c530:	18003f26 	beq	r3,zero,800c630 <__subdf3+0x3c4>
 800c534:	00c00434 	movhi	r3,16
 800c538:	29000234 	orhi	r4,r5,8
 800c53c:	18ffffc4 	addi	r3,r3,-1
 800c540:	20c8703a 	and	r4,r4,r3
 800c544:	003f8406 	br	800c358 <__flash_exceptions_start+0xf7e0b338>
 800c548:	10bfffc4 	addi	r2,r2,-1
 800c54c:	1000501e 	bne	r2,zero,800c690 <__subdf3+0x424>
 800c550:	898fc83a 	sub	r7,r17,r6
 800c554:	89e3803a 	cmpltu	r17,r17,r7
 800c558:	28cbc83a 	sub	r5,r5,r3
 800c55c:	2c4bc83a 	sub	r5,r5,r17
 800c560:	3823883a 	mov	r17,r7
 800c564:	003fa106 	br	800c3ec <__flash_exceptions_start+0xf7e0b3cc>
 800c568:	1988b03a 	or	r4,r3,r6
 800c56c:	203f6226 	beq	r4,zero,800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c570:	10bfffc4 	addi	r2,r2,-1
 800c574:	10009b1e 	bne	r2,zero,800c7e4 <__subdf3+0x578>
 800c578:	344d883a 	add	r6,r6,r17
 800c57c:	3463803a 	cmpltu	r17,r6,r17
 800c580:	194b883a 	add	r5,r3,r5
 800c584:	2c4b883a 	add	r5,r5,r17
 800c588:	3023883a 	mov	r17,r6
 800c58c:	003fd406 	br	800c4e0 <__flash_exceptions_start+0xf7e0b4c0>
 800c590:	1106b03a 	or	r3,r2,r4
 800c594:	1800b426 	beq	r3,zero,800c868 <__subdf3+0x5fc>
 800c598:	100b883a 	mov	r5,r2
 800c59c:	2023883a 	mov	r17,r4
 800c5a0:	888001cc 	andi	r2,r17,7
 800c5a4:	103f561e 	bne	r2,zero,800c300 <__flash_exceptions_start+0xf7e0b2e0>
 800c5a8:	9200004c 	andi	r8,r18,1
 800c5ac:	003fb206 	br	800c478 <__flash_exceptions_start+0xf7e0b458>
 800c5b0:	1000531e 	bne	r2,zero,800c700 <__subdf3+0x494>
 800c5b4:	80800044 	addi	r2,r16,1
 800c5b8:	1081ffcc 	andi	r2,r2,2047
 800c5bc:	01000044 	movi	r4,1
 800c5c0:	2080a00e 	bge	r4,r2,800c844 <__subdf3+0x5d8>
 800c5c4:	8985c83a 	sub	r2,r17,r6
 800c5c8:	8889803a 	cmpltu	r4,r17,r2
 800c5cc:	28e7c83a 	sub	r19,r5,r3
 800c5d0:	9927c83a 	sub	r19,r19,r4
 800c5d4:	9900202c 	andhi	r4,r19,128
 800c5d8:	20006226 	beq	r4,zero,800c764 <__subdf3+0x4f8>
 800c5dc:	3463c83a 	sub	r17,r6,r17
 800c5e0:	194bc83a 	sub	r5,r3,r5
 800c5e4:	344d803a 	cmpltu	r6,r6,r17
 800c5e8:	29a7c83a 	sub	r19,r5,r6
 800c5ec:	3825883a 	mov	r18,r7
 800c5f0:	983f841e 	bne	r19,zero,800c404 <__flash_exceptions_start+0xf7e0b3e4>
 800c5f4:	8809883a 	mov	r4,r17
 800c5f8:	800cd380 	call	800cd38 <__clzsi2>
 800c5fc:	10800804 	addi	r2,r2,32
 800c600:	10fffe04 	addi	r3,r2,-8
 800c604:	010007c4 	movi	r4,31
 800c608:	20ff830e 	bge	r4,r3,800c418 <__flash_exceptions_start+0xf7e0b3f8>
 800c60c:	14fff604 	addi	r19,r2,-40
 800c610:	8ce6983a 	sll	r19,r17,r19
 800c614:	0023883a 	mov	r17,zero
 800c618:	1c3f860e 	bge	r3,r16,800c434 <__flash_exceptions_start+0xf7e0b414>
 800c61c:	017fe034 	movhi	r5,65408
 800c620:	297fffc4 	addi	r5,r5,-1
 800c624:	80e1c83a 	sub	r16,r16,r3
 800c628:	994a703a 	and	r5,r19,r5
 800c62c:	003f3206 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c630:	0009883a 	mov	r4,zero
 800c634:	0005883a 	mov	r2,zero
 800c638:	003f4706 	br	800c358 <__flash_exceptions_start+0xf7e0b338>
 800c63c:	198cb03a 	or	r6,r3,r6
 800c640:	300cc03a 	cmpne	r6,r6,zero
 800c644:	0005883a 	mov	r2,zero
 800c648:	003f6306 	br	800c3d8 <__flash_exceptions_start+0xf7e0b3b8>
 800c64c:	10009d1e 	bne	r2,zero,800c8c4 <__subdf3+0x658>
 800c650:	81c00044 	addi	r7,r16,1
 800c654:	3881ffcc 	andi	r2,r7,2047
 800c658:	02400044 	movi	r9,1
 800c65c:	4880680e 	bge	r9,r2,800c800 <__subdf3+0x594>
 800c660:	0081ffc4 	movi	r2,2047
 800c664:	3880ae26 	beq	r7,r2,800c920 <__subdf3+0x6b4>
 800c668:	344d883a 	add	r6,r6,r17
 800c66c:	3463803a 	cmpltu	r17,r6,r17
 800c670:	194b883a 	add	r5,r3,r5
 800c674:	2c4b883a 	add	r5,r5,r17
 800c678:	282297fa 	slli	r17,r5,31
 800c67c:	300cd07a 	srli	r6,r6,1
 800c680:	280ad07a 	srli	r5,r5,1
 800c684:	3821883a 	mov	r16,r7
 800c688:	89a2b03a 	or	r17,r17,r6
 800c68c:	003f1a06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c690:	0101ffc4 	movi	r4,2047
 800c694:	813f431e 	bne	r16,r4,800c3a4 <__flash_exceptions_start+0xf7e0b384>
 800c698:	003f1706 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c69c:	80bff844 	addi	r2,r16,-31
 800c6a0:	00c00804 	movi	r3,32
 800c6a4:	9884d83a 	srl	r2,r19,r2
 800c6a8:	28c05126 	beq	r5,r3,800c7f0 <__subdf3+0x584>
 800c6ac:	00c00fc4 	movi	r3,63
 800c6b0:	1c21c83a 	sub	r16,r3,r16
 800c6b4:	9c26983a 	sll	r19,r19,r16
 800c6b8:	9c62b03a 	or	r17,r19,r17
 800c6bc:	8822c03a 	cmpne	r17,r17,zero
 800c6c0:	88a2b03a 	or	r17,r17,r2
 800c6c4:	000b883a 	mov	r5,zero
 800c6c8:	0021883a 	mov	r16,zero
 800c6cc:	003fb406 	br	800c5a0 <__flash_exceptions_start+0xf7e0b580>
 800c6d0:	113ff804 	addi	r4,r2,-32
 800c6d4:	01c00804 	movi	r7,32
 800c6d8:	1908d83a 	srl	r4,r3,r4
 800c6dc:	11c04626 	beq	r2,r7,800c7f8 <__subdf3+0x58c>
 800c6e0:	01c01004 	movi	r7,64
 800c6e4:	3885c83a 	sub	r2,r7,r2
 800c6e8:	1884983a 	sll	r2,r3,r2
 800c6ec:	118cb03a 	or	r6,r2,r6
 800c6f0:	300cc03a 	cmpne	r6,r6,zero
 800c6f4:	310cb03a 	or	r6,r6,r4
 800c6f8:	0005883a 	mov	r2,zero
 800c6fc:	003f3606 	br	800c3d8 <__flash_exceptions_start+0xf7e0b3b8>
 800c700:	80002b26 	beq	r16,zero,800c7b0 <__subdf3+0x544>
 800c704:	0101ffc4 	movi	r4,2047
 800c708:	51006926 	beq	r10,r4,800c8b0 <__subdf3+0x644>
 800c70c:	0085c83a 	sub	r2,zero,r2
 800c710:	29402034 	orhi	r5,r5,128
 800c714:	01000e04 	movi	r4,56
 800c718:	20807d16 	blt	r4,r2,800c910 <__subdf3+0x6a4>
 800c71c:	010007c4 	movi	r4,31
 800c720:	2080d916 	blt	r4,r2,800ca88 <__subdf3+0x81c>
 800c724:	01000804 	movi	r4,32
 800c728:	2089c83a 	sub	r4,r4,r2
 800c72c:	2912983a 	sll	r9,r5,r4
 800c730:	8890d83a 	srl	r8,r17,r2
 800c734:	8908983a 	sll	r4,r17,r4
 800c738:	2884d83a 	srl	r2,r5,r2
 800c73c:	4a22b03a 	or	r17,r9,r8
 800c740:	2008c03a 	cmpne	r4,r4,zero
 800c744:	8922b03a 	or	r17,r17,r4
 800c748:	3463c83a 	sub	r17,r6,r17
 800c74c:	1885c83a 	sub	r2,r3,r2
 800c750:	344d803a 	cmpltu	r6,r6,r17
 800c754:	118bc83a 	sub	r5,r2,r6
 800c758:	5021883a 	mov	r16,r10
 800c75c:	3825883a 	mov	r18,r7
 800c760:	003f2206 	br	800c3ec <__flash_exceptions_start+0xf7e0b3cc>
 800c764:	9886b03a 	or	r3,r19,r2
 800c768:	18001c1e 	bne	r3,zero,800c7dc <__subdf3+0x570>
 800c76c:	0011883a 	mov	r8,zero
 800c770:	000b883a 	mov	r5,zero
 800c774:	0023883a 	mov	r17,zero
 800c778:	0021883a 	mov	r16,zero
 800c77c:	003f3e06 	br	800c478 <__flash_exceptions_start+0xf7e0b458>
 800c780:	010007c4 	movi	r4,31
 800c784:	20803c16 	blt	r4,r2,800c878 <__subdf3+0x60c>
 800c788:	01000804 	movi	r4,32
 800c78c:	2089c83a 	sub	r4,r4,r2
 800c790:	1912983a 	sll	r9,r3,r4
 800c794:	308ed83a 	srl	r7,r6,r2
 800c798:	3108983a 	sll	r4,r6,r4
 800c79c:	1884d83a 	srl	r2,r3,r2
 800c7a0:	49ceb03a 	or	r7,r9,r7
 800c7a4:	2008c03a 	cmpne	r4,r4,zero
 800c7a8:	390eb03a 	or	r7,r7,r4
 800c7ac:	003f4706 	br	800c4cc <__flash_exceptions_start+0xf7e0b4ac>
 800c7b0:	2c48b03a 	or	r4,r5,r17
 800c7b4:	20003e26 	beq	r4,zero,800c8b0 <__subdf3+0x644>
 800c7b8:	0084303a 	nor	r2,zero,r2
 800c7bc:	10003a1e 	bne	r2,zero,800c8a8 <__subdf3+0x63c>
 800c7c0:	3463c83a 	sub	r17,r6,r17
 800c7c4:	194bc83a 	sub	r5,r3,r5
 800c7c8:	344d803a 	cmpltu	r6,r6,r17
 800c7cc:	298bc83a 	sub	r5,r5,r6
 800c7d0:	5021883a 	mov	r16,r10
 800c7d4:	3825883a 	mov	r18,r7
 800c7d8:	003f0406 	br	800c3ec <__flash_exceptions_start+0xf7e0b3cc>
 800c7dc:	1023883a 	mov	r17,r2
 800c7e0:	003f0706 	br	800c400 <__flash_exceptions_start+0xf7e0b3e0>
 800c7e4:	0101ffc4 	movi	r4,2047
 800c7e8:	813f331e 	bne	r16,r4,800c4b8 <__flash_exceptions_start+0xf7e0b498>
 800c7ec:	003ec206 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c7f0:	0027883a 	mov	r19,zero
 800c7f4:	003fb006 	br	800c6b8 <__flash_exceptions_start+0xf7e0b698>
 800c7f8:	0005883a 	mov	r2,zero
 800c7fc:	003fbb06 	br	800c6ec <__flash_exceptions_start+0xf7e0b6cc>
 800c800:	2c44b03a 	or	r2,r5,r17
 800c804:	80008b1e 	bne	r16,zero,800ca34 <__subdf3+0x7c8>
 800c808:	1000b526 	beq	r2,zero,800cae0 <__subdf3+0x874>
 800c80c:	1984b03a 	or	r2,r3,r6
 800c810:	103eb926 	beq	r2,zero,800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c814:	3449883a 	add	r4,r6,r17
 800c818:	2463803a 	cmpltu	r17,r4,r17
 800c81c:	194b883a 	add	r5,r3,r5
 800c820:	2c4b883a 	add	r5,r5,r17
 800c824:	2880202c 	andhi	r2,r5,128
 800c828:	2023883a 	mov	r17,r4
 800c82c:	103f5c26 	beq	r2,zero,800c5a0 <__flash_exceptions_start+0xf7e0b580>
 800c830:	00bfe034 	movhi	r2,65408
 800c834:	10bfffc4 	addi	r2,r2,-1
 800c838:	4821883a 	mov	r16,r9
 800c83c:	288a703a 	and	r5,r5,r2
 800c840:	003ead06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c844:	2c44b03a 	or	r2,r5,r17
 800c848:	8000291e 	bne	r16,zero,800c8f0 <__subdf3+0x684>
 800c84c:	10004f1e 	bne	r2,zero,800c98c <__subdf3+0x720>
 800c850:	1984b03a 	or	r2,r3,r6
 800c854:	10000426 	beq	r2,zero,800c868 <__subdf3+0x5fc>
 800c858:	180b883a 	mov	r5,r3
 800c85c:	3023883a 	mov	r17,r6
 800c860:	3825883a 	mov	r18,r7
 800c864:	003ea406 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c868:	0011883a 	mov	r8,zero
 800c86c:	000b883a 	mov	r5,zero
 800c870:	0023883a 	mov	r17,zero
 800c874:	003f0006 	br	800c478 <__flash_exceptions_start+0xf7e0b458>
 800c878:	11fff804 	addi	r7,r2,-32
 800c87c:	19c8d83a 	srl	r4,r3,r7
 800c880:	01c00804 	movi	r7,32
 800c884:	11c07e26 	beq	r2,r7,800ca80 <__subdf3+0x814>
 800c888:	01c01004 	movi	r7,64
 800c88c:	3885c83a 	sub	r2,r7,r2
 800c890:	1884983a 	sll	r2,r3,r2
 800c894:	118cb03a 	or	r6,r2,r6
 800c898:	300ec03a 	cmpne	r7,r6,zero
 800c89c:	390eb03a 	or	r7,r7,r4
 800c8a0:	0005883a 	mov	r2,zero
 800c8a4:	003f0906 	br	800c4cc <__flash_exceptions_start+0xf7e0b4ac>
 800c8a8:	0101ffc4 	movi	r4,2047
 800c8ac:	513f991e 	bne	r10,r4,800c714 <__flash_exceptions_start+0xf7e0b6f4>
 800c8b0:	180b883a 	mov	r5,r3
 800c8b4:	3023883a 	mov	r17,r6
 800c8b8:	5021883a 	mov	r16,r10
 800c8bc:	3825883a 	mov	r18,r7
 800c8c0:	003e8d06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c8c4:	80001a1e 	bne	r16,zero,800c930 <__subdf3+0x6c4>
 800c8c8:	2c48b03a 	or	r4,r5,r17
 800c8cc:	20005526 	beq	r4,zero,800ca24 <__subdf3+0x7b8>
 800c8d0:	0084303a 	nor	r2,zero,r2
 800c8d4:	1000511e 	bne	r2,zero,800ca1c <__subdf3+0x7b0>
 800c8d8:	89a3883a 	add	r17,r17,r6
 800c8dc:	194b883a 	add	r5,r3,r5
 800c8e0:	898d803a 	cmpltu	r6,r17,r6
 800c8e4:	298b883a 	add	r5,r5,r6
 800c8e8:	5021883a 	mov	r16,r10
 800c8ec:	003efc06 	br	800c4e0 <__flash_exceptions_start+0xf7e0b4c0>
 800c8f0:	1000341e 	bne	r2,zero,800c9c4 <__subdf3+0x758>
 800c8f4:	1984b03a 	or	r2,r3,r6
 800c8f8:	10006f26 	beq	r2,zero,800cab8 <__subdf3+0x84c>
 800c8fc:	180b883a 	mov	r5,r3
 800c900:	3023883a 	mov	r17,r6
 800c904:	3825883a 	mov	r18,r7
 800c908:	0401ffc4 	movi	r16,2047
 800c90c:	003e7a06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c910:	2c62b03a 	or	r17,r5,r17
 800c914:	8822c03a 	cmpne	r17,r17,zero
 800c918:	0005883a 	mov	r2,zero
 800c91c:	003f8a06 	br	800c748 <__flash_exceptions_start+0xf7e0b728>
 800c920:	3821883a 	mov	r16,r7
 800c924:	000b883a 	mov	r5,zero
 800c928:	0023883a 	mov	r17,zero
 800c92c:	003ed206 	br	800c478 <__flash_exceptions_start+0xf7e0b458>
 800c930:	0101ffc4 	movi	r4,2047
 800c934:	51003b26 	beq	r10,r4,800ca24 <__subdf3+0x7b8>
 800c938:	0085c83a 	sub	r2,zero,r2
 800c93c:	29402034 	orhi	r5,r5,128
 800c940:	01000e04 	movi	r4,56
 800c944:	20806216 	blt	r4,r2,800cad0 <__subdf3+0x864>
 800c948:	010007c4 	movi	r4,31
 800c94c:	20806b16 	blt	r4,r2,800cafc <__subdf3+0x890>
 800c950:	01000804 	movi	r4,32
 800c954:	2089c83a 	sub	r4,r4,r2
 800c958:	2912983a 	sll	r9,r5,r4
 800c95c:	888ed83a 	srl	r7,r17,r2
 800c960:	8908983a 	sll	r4,r17,r4
 800c964:	2884d83a 	srl	r2,r5,r2
 800c968:	49e2b03a 	or	r17,r9,r7
 800c96c:	2008c03a 	cmpne	r4,r4,zero
 800c970:	8922b03a 	or	r17,r17,r4
 800c974:	89a3883a 	add	r17,r17,r6
 800c978:	10c5883a 	add	r2,r2,r3
 800c97c:	898d803a 	cmpltu	r6,r17,r6
 800c980:	118b883a 	add	r5,r2,r6
 800c984:	5021883a 	mov	r16,r10
 800c988:	003ed506 	br	800c4e0 <__flash_exceptions_start+0xf7e0b4c0>
 800c98c:	1984b03a 	or	r2,r3,r6
 800c990:	103e5926 	beq	r2,zero,800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c994:	8989c83a 	sub	r4,r17,r6
 800c998:	8911803a 	cmpltu	r8,r17,r4
 800c99c:	28c5c83a 	sub	r2,r5,r3
 800c9a0:	1205c83a 	sub	r2,r2,r8
 800c9a4:	1200202c 	andhi	r8,r2,128
 800c9a8:	403ef926 	beq	r8,zero,800c590 <__flash_exceptions_start+0xf7e0b570>
 800c9ac:	3463c83a 	sub	r17,r6,r17
 800c9b0:	194bc83a 	sub	r5,r3,r5
 800c9b4:	344d803a 	cmpltu	r6,r6,r17
 800c9b8:	298bc83a 	sub	r5,r5,r6
 800c9bc:	3825883a 	mov	r18,r7
 800c9c0:	003e4d06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800c9c4:	1984b03a 	or	r2,r3,r6
 800c9c8:	10002b26 	beq	r2,zero,800ca78 <__subdf3+0x80c>
 800c9cc:	2808d0fa 	srli	r4,r5,3
 800c9d0:	8822d0fa 	srli	r17,r17,3
 800c9d4:	280a977a 	slli	r5,r5,29
 800c9d8:	2080022c 	andhi	r2,r4,8
 800c9dc:	2c62b03a 	or	r17,r5,r17
 800c9e0:	10000826 	beq	r2,zero,800ca04 <__subdf3+0x798>
 800c9e4:	1810d0fa 	srli	r8,r3,3
 800c9e8:	4080022c 	andhi	r2,r8,8
 800c9ec:	1000051e 	bne	r2,zero,800ca04 <__subdf3+0x798>
 800c9f0:	300cd0fa 	srli	r6,r6,3
 800c9f4:	1804977a 	slli	r2,r3,29
 800c9f8:	4009883a 	mov	r4,r8
 800c9fc:	3825883a 	mov	r18,r7
 800ca00:	11a2b03a 	or	r17,r2,r6
 800ca04:	880ad77a 	srli	r5,r17,29
 800ca08:	200890fa 	slli	r4,r4,3
 800ca0c:	882290fa 	slli	r17,r17,3
 800ca10:	0401ffc4 	movi	r16,2047
 800ca14:	290ab03a 	or	r5,r5,r4
 800ca18:	003e3706 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800ca1c:	0101ffc4 	movi	r4,2047
 800ca20:	513fc71e 	bne	r10,r4,800c940 <__flash_exceptions_start+0xf7e0b920>
 800ca24:	180b883a 	mov	r5,r3
 800ca28:	3023883a 	mov	r17,r6
 800ca2c:	5021883a 	mov	r16,r10
 800ca30:	003e3106 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800ca34:	10002d26 	beq	r2,zero,800caec <__subdf3+0x880>
 800ca38:	1984b03a 	or	r2,r3,r6
 800ca3c:	10000e26 	beq	r2,zero,800ca78 <__subdf3+0x80c>
 800ca40:	2808d0fa 	srli	r4,r5,3
 800ca44:	8822d0fa 	srli	r17,r17,3
 800ca48:	280a977a 	slli	r5,r5,29
 800ca4c:	2080022c 	andhi	r2,r4,8
 800ca50:	2c62b03a 	or	r17,r5,r17
 800ca54:	103feb26 	beq	r2,zero,800ca04 <__flash_exceptions_start+0xf7e0b9e4>
 800ca58:	180ed0fa 	srli	r7,r3,3
 800ca5c:	3880022c 	andhi	r2,r7,8
 800ca60:	103fe81e 	bne	r2,zero,800ca04 <__flash_exceptions_start+0xf7e0b9e4>
 800ca64:	300cd0fa 	srli	r6,r6,3
 800ca68:	1804977a 	slli	r2,r3,29
 800ca6c:	3809883a 	mov	r4,r7
 800ca70:	11a2b03a 	or	r17,r2,r6
 800ca74:	003fe306 	br	800ca04 <__flash_exceptions_start+0xf7e0b9e4>
 800ca78:	0401ffc4 	movi	r16,2047
 800ca7c:	003e1e06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800ca80:	0005883a 	mov	r2,zero
 800ca84:	003f8306 	br	800c894 <__flash_exceptions_start+0xf7e0b874>
 800ca88:	113ff804 	addi	r4,r2,-32
 800ca8c:	02000804 	movi	r8,32
 800ca90:	2908d83a 	srl	r4,r5,r4
 800ca94:	12002526 	beq	r2,r8,800cb2c <__subdf3+0x8c0>
 800ca98:	02001004 	movi	r8,64
 800ca9c:	4085c83a 	sub	r2,r8,r2
 800caa0:	288a983a 	sll	r5,r5,r2
 800caa4:	2c62b03a 	or	r17,r5,r17
 800caa8:	8822c03a 	cmpne	r17,r17,zero
 800caac:	8922b03a 	or	r17,r17,r4
 800cab0:	0005883a 	mov	r2,zero
 800cab4:	003f2406 	br	800c748 <__flash_exceptions_start+0xf7e0b728>
 800cab8:	01402034 	movhi	r5,128
 800cabc:	0011883a 	mov	r8,zero
 800cac0:	297fffc4 	addi	r5,r5,-1
 800cac4:	047ffe04 	movi	r17,-8
 800cac8:	0401ffc4 	movi	r16,2047
 800cacc:	003e6a06 	br	800c478 <__flash_exceptions_start+0xf7e0b458>
 800cad0:	2c62b03a 	or	r17,r5,r17
 800cad4:	8822c03a 	cmpne	r17,r17,zero
 800cad8:	0005883a 	mov	r2,zero
 800cadc:	003fa506 	br	800c974 <__flash_exceptions_start+0xf7e0b954>
 800cae0:	180b883a 	mov	r5,r3
 800cae4:	3023883a 	mov	r17,r6
 800cae8:	003e0306 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800caec:	180b883a 	mov	r5,r3
 800caf0:	3023883a 	mov	r17,r6
 800caf4:	0401ffc4 	movi	r16,2047
 800caf8:	003dff06 	br	800c2f8 <__flash_exceptions_start+0xf7e0b2d8>
 800cafc:	113ff804 	addi	r4,r2,-32
 800cb00:	01c00804 	movi	r7,32
 800cb04:	2908d83a 	srl	r4,r5,r4
 800cb08:	11c00a26 	beq	r2,r7,800cb34 <__subdf3+0x8c8>
 800cb0c:	01c01004 	movi	r7,64
 800cb10:	3885c83a 	sub	r2,r7,r2
 800cb14:	288a983a 	sll	r5,r5,r2
 800cb18:	2c62b03a 	or	r17,r5,r17
 800cb1c:	8822c03a 	cmpne	r17,r17,zero
 800cb20:	8922b03a 	or	r17,r17,r4
 800cb24:	0005883a 	mov	r2,zero
 800cb28:	003f9206 	br	800c974 <__flash_exceptions_start+0xf7e0b954>
 800cb2c:	000b883a 	mov	r5,zero
 800cb30:	003fdc06 	br	800caa4 <__flash_exceptions_start+0xf7e0ba84>
 800cb34:	000b883a 	mov	r5,zero
 800cb38:	003ff706 	br	800cb18 <__flash_exceptions_start+0xf7e0baf8>

0800cb3c <__fixdfsi>:
 800cb3c:	2806d53a 	srli	r3,r5,20
 800cb40:	00800434 	movhi	r2,16
 800cb44:	10bfffc4 	addi	r2,r2,-1
 800cb48:	18c1ffcc 	andi	r3,r3,2047
 800cb4c:	0180ff84 	movi	r6,1022
 800cb50:	2884703a 	and	r2,r5,r2
 800cb54:	280ad7fa 	srli	r5,r5,31
 800cb58:	30c0130e 	bge	r6,r3,800cba8 <__fixdfsi+0x6c>
 800cb5c:	01810744 	movi	r6,1053
 800cb60:	30c00d16 	blt	r6,r3,800cb98 <__fixdfsi+0x5c>
 800cb64:	01810cc4 	movi	r6,1075
 800cb68:	30cdc83a 	sub	r6,r6,r3
 800cb6c:	01c007c4 	movi	r7,31
 800cb70:	10800434 	orhi	r2,r2,16
 800cb74:	39800e0e 	bge	r7,r6,800cbb0 <__fixdfsi+0x74>
 800cb78:	010104c4 	movi	r4,1043
 800cb7c:	20c7c83a 	sub	r3,r4,r3
 800cb80:	10c6d83a 	srl	r3,r2,r3
 800cb84:	29403fcc 	andi	r5,r5,255
 800cb88:	0145c83a 	sub	r2,zero,r5
 800cb8c:	1884f03a 	xor	r2,r3,r2
 800cb90:	1145883a 	add	r2,r2,r5
 800cb94:	f800283a 	ret
 800cb98:	00a00034 	movhi	r2,32768
 800cb9c:	10bfffc4 	addi	r2,r2,-1
 800cba0:	2885883a 	add	r2,r5,r2
 800cba4:	f800283a 	ret
 800cba8:	0005883a 	mov	r2,zero
 800cbac:	f800283a 	ret
 800cbb0:	18fefb44 	addi	r3,r3,-1043
 800cbb4:	2188d83a 	srl	r4,r4,r6
 800cbb8:	10c6983a 	sll	r3,r2,r3
 800cbbc:	20c6b03a 	or	r3,r4,r3
 800cbc0:	003ff006 	br	800cb84 <__flash_exceptions_start+0xf7e0bb64>

0800cbc4 <__floatsidf>:
 800cbc4:	defffd04 	addi	sp,sp,-12
 800cbc8:	dc400115 	stw	r17,4(sp)
 800cbcc:	dfc00215 	stw	ra,8(sp)
 800cbd0:	dc000015 	stw	r16,0(sp)
 800cbd4:	2023883a 	mov	r17,r4
 800cbd8:	20001426 	beq	r4,zero,800cc2c <__floatsidf+0x68>
 800cbdc:	2020d7fa 	srli	r16,r4,31
 800cbe0:	80000126 	beq	r16,zero,800cbe8 <__floatsidf+0x24>
 800cbe4:	0123c83a 	sub	r17,zero,r4
 800cbe8:	8809883a 	mov	r4,r17
 800cbec:	800cd380 	call	800cd38 <__clzsi2>
 800cbf0:	01410784 	movi	r5,1054
 800cbf4:	00c00284 	movi	r3,10
 800cbf8:	288bc83a 	sub	r5,r5,r2
 800cbfc:	18801c16 	blt	r3,r2,800cc70 <__floatsidf+0xac>
 800cc00:	00c002c4 	movi	r3,11
 800cc04:	1887c83a 	sub	r3,r3,r2
 800cc08:	88c8d83a 	srl	r4,r17,r3
 800cc0c:	00c00434 	movhi	r3,16
 800cc10:	18ffffc4 	addi	r3,r3,-1
 800cc14:	10800544 	addi	r2,r2,21
 800cc18:	20c8703a 	and	r4,r4,r3
 800cc1c:	8884983a 	sll	r2,r17,r2
 800cc20:	28c1ffcc 	andi	r3,r5,2047
 800cc24:	800d883a 	mov	r6,r16
 800cc28:	00000406 	br	800cc3c <__floatsidf+0x78>
 800cc2c:	000d883a 	mov	r6,zero
 800cc30:	0007883a 	mov	r3,zero
 800cc34:	0009883a 	mov	r4,zero
 800cc38:	0005883a 	mov	r2,zero
 800cc3c:	180a953a 	slli	r5,r3,20
 800cc40:	31803fcc 	andi	r6,r6,255
 800cc44:	00c00434 	movhi	r3,16
 800cc48:	300c97fa 	slli	r6,r6,31
 800cc4c:	18ffffc4 	addi	r3,r3,-1
 800cc50:	20c6703a 	and	r3,r4,r3
 800cc54:	1946b03a 	or	r3,r3,r5
 800cc58:	1986b03a 	or	r3,r3,r6
 800cc5c:	dfc00217 	ldw	ra,8(sp)
 800cc60:	dc400117 	ldw	r17,4(sp)
 800cc64:	dc000017 	ldw	r16,0(sp)
 800cc68:	dec00304 	addi	sp,sp,12
 800cc6c:	f800283a 	ret
 800cc70:	10fffd44 	addi	r3,r2,-11
 800cc74:	88c8983a 	sll	r4,r17,r3
 800cc78:	00800434 	movhi	r2,16
 800cc7c:	10bfffc4 	addi	r2,r2,-1
 800cc80:	2088703a 	and	r4,r4,r2
 800cc84:	28c1ffcc 	andi	r3,r5,2047
 800cc88:	800d883a 	mov	r6,r16
 800cc8c:	0005883a 	mov	r2,zero
 800cc90:	003fea06 	br	800cc3c <__flash_exceptions_start+0xf7e0bc1c>

0800cc94 <__floatunsidf>:
 800cc94:	defffe04 	addi	sp,sp,-8
 800cc98:	dc000015 	stw	r16,0(sp)
 800cc9c:	dfc00115 	stw	ra,4(sp)
 800cca0:	2021883a 	mov	r16,r4
 800cca4:	20001026 	beq	r4,zero,800cce8 <__floatunsidf+0x54>
 800cca8:	800cd380 	call	800cd38 <__clzsi2>
 800ccac:	01410784 	movi	r5,1054
 800ccb0:	100d883a 	mov	r6,r2
 800ccb4:	288bc83a 	sub	r5,r5,r2
 800ccb8:	00800284 	movi	r2,10
 800ccbc:	11801616 	blt	r2,r6,800cd18 <__floatunsidf+0x84>
 800ccc0:	008002c4 	movi	r2,11
 800ccc4:	1185c83a 	sub	r2,r2,r6
 800ccc8:	8084d83a 	srl	r2,r16,r2
 800cccc:	00c00434 	movhi	r3,16
 800ccd0:	31c00544 	addi	r7,r6,21
 800ccd4:	18ffffc4 	addi	r3,r3,-1
 800ccd8:	81e0983a 	sll	r16,r16,r7
 800ccdc:	10cc703a 	and	r6,r2,r3
 800cce0:	2941ffcc 	andi	r5,r5,2047
 800cce4:	00000206 	br	800ccf0 <__floatunsidf+0x5c>
 800cce8:	000b883a 	mov	r5,zero
 800ccec:	000d883a 	mov	r6,zero
 800ccf0:	280a953a 	slli	r5,r5,20
 800ccf4:	00c00434 	movhi	r3,16
 800ccf8:	18ffffc4 	addi	r3,r3,-1
 800ccfc:	30c6703a 	and	r3,r6,r3
 800cd00:	8005883a 	mov	r2,r16
 800cd04:	1946b03a 	or	r3,r3,r5
 800cd08:	dfc00117 	ldw	ra,4(sp)
 800cd0c:	dc000017 	ldw	r16,0(sp)
 800cd10:	dec00204 	addi	sp,sp,8
 800cd14:	f800283a 	ret
 800cd18:	31bffd44 	addi	r6,r6,-11
 800cd1c:	818c983a 	sll	r6,r16,r6
 800cd20:	00800434 	movhi	r2,16
 800cd24:	10bfffc4 	addi	r2,r2,-1
 800cd28:	2941ffcc 	andi	r5,r5,2047
 800cd2c:	0021883a 	mov	r16,zero
 800cd30:	308c703a 	and	r6,r6,r2
 800cd34:	003fee06 	br	800ccf0 <__flash_exceptions_start+0xf7e0bcd0>

0800cd38 <__clzsi2>:
 800cd38:	00bfffd4 	movui	r2,65535
 800cd3c:	11000b36 	bltu	r2,r4,800cd6c <__clzsi2+0x34>
 800cd40:	00803fc4 	movi	r2,255
 800cd44:	1100122e 	bgeu	r2,r4,800cd90 <__clzsi2+0x58>
 800cd48:	00c00204 	movi	r3,8
 800cd4c:	01400604 	movi	r5,24
 800cd50:	20c8d83a 	srl	r4,r4,r3
 800cd54:	00820074 	movhi	r2,2049
 800cd58:	10ba9604 	addi	r2,r2,-5544
 800cd5c:	1109883a 	add	r4,r2,r4
 800cd60:	20800003 	ldbu	r2,0(r4)
 800cd64:	2885c83a 	sub	r2,r5,r2
 800cd68:	f800283a 	ret
 800cd6c:	00804034 	movhi	r2,256
 800cd70:	10bfffc4 	addi	r2,r2,-1
 800cd74:	11000336 	bltu	r2,r4,800cd84 <__clzsi2+0x4c>
 800cd78:	00c00404 	movi	r3,16
 800cd7c:	180b883a 	mov	r5,r3
 800cd80:	003ff306 	br	800cd50 <__flash_exceptions_start+0xf7e0bd30>
 800cd84:	00c00604 	movi	r3,24
 800cd88:	01400204 	movi	r5,8
 800cd8c:	003ff006 	br	800cd50 <__flash_exceptions_start+0xf7e0bd30>
 800cd90:	0007883a 	mov	r3,zero
 800cd94:	01400804 	movi	r5,32
 800cd98:	003fed06 	br	800cd50 <__flash_exceptions_start+0xf7e0bd30>

0800cd9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800cd9c:	defffe04 	addi	sp,sp,-8
 800cda0:	dfc00115 	stw	ra,4(sp)
 800cda4:	df000015 	stw	fp,0(sp)
 800cda8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800cdac:	00820074 	movhi	r2,2049
 800cdb0:	10bdba04 	addi	r2,r2,-2328
 800cdb4:	10800017 	ldw	r2,0(r2)
 800cdb8:	10000526 	beq	r2,zero,800cdd0 <alt_get_errno+0x34>
 800cdbc:	00820074 	movhi	r2,2049
 800cdc0:	10bdba04 	addi	r2,r2,-2328
 800cdc4:	10800017 	ldw	r2,0(r2)
 800cdc8:	103ee83a 	callr	r2
 800cdcc:	00000206 	br	800cdd8 <alt_get_errno+0x3c>
 800cdd0:	00820074 	movhi	r2,2049
 800cdd4:	10809504 	addi	r2,r2,596
}
 800cdd8:	e037883a 	mov	sp,fp
 800cddc:	dfc00117 	ldw	ra,4(sp)
 800cde0:	df000017 	ldw	fp,0(sp)
 800cde4:	dec00204 	addi	sp,sp,8
 800cde8:	f800283a 	ret

0800cdec <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 800cdec:	defffb04 	addi	sp,sp,-20
 800cdf0:	dfc00415 	stw	ra,16(sp)
 800cdf4:	df000315 	stw	fp,12(sp)
 800cdf8:	df000304 	addi	fp,sp,12
 800cdfc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 800ce00:	e0bfff17 	ldw	r2,-4(fp)
 800ce04:	10000616 	blt	r2,zero,800ce20 <close+0x34>
 800ce08:	e0bfff17 	ldw	r2,-4(fp)
 800ce0c:	10c00324 	muli	r3,r2,12
 800ce10:	00820074 	movhi	r2,2049
 800ce14:	10bd1e04 	addi	r2,r2,-2952
 800ce18:	1885883a 	add	r2,r3,r2
 800ce1c:	00000106 	br	800ce24 <close+0x38>
 800ce20:	0005883a 	mov	r2,zero
 800ce24:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 800ce28:	e0bffd17 	ldw	r2,-12(fp)
 800ce2c:	10001926 	beq	r2,zero,800ce94 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 800ce30:	e0bffd17 	ldw	r2,-12(fp)
 800ce34:	10800017 	ldw	r2,0(r2)
 800ce38:	10800417 	ldw	r2,16(r2)
 800ce3c:	10000626 	beq	r2,zero,800ce58 <close+0x6c>
 800ce40:	e0bffd17 	ldw	r2,-12(fp)
 800ce44:	10800017 	ldw	r2,0(r2)
 800ce48:	10800417 	ldw	r2,16(r2)
 800ce4c:	e13ffd17 	ldw	r4,-12(fp)
 800ce50:	103ee83a 	callr	r2
 800ce54:	00000106 	br	800ce5c <close+0x70>
 800ce58:	0005883a 	mov	r2,zero
 800ce5c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 800ce60:	e13fff17 	ldw	r4,-4(fp)
 800ce64:	800d4e80 	call	800d4e8 <alt_release_fd>
    if (rval < 0)
 800ce68:	e0bffe17 	ldw	r2,-8(fp)
 800ce6c:	1000070e 	bge	r2,zero,800ce8c <close+0xa0>
    {
      ALT_ERRNO = -rval;
 800ce70:	800cd9c0 	call	800cd9c <alt_get_errno>
 800ce74:	1007883a 	mov	r3,r2
 800ce78:	e0bffe17 	ldw	r2,-8(fp)
 800ce7c:	0085c83a 	sub	r2,zero,r2
 800ce80:	18800015 	stw	r2,0(r3)
      return -1;
 800ce84:	00bfffc4 	movi	r2,-1
 800ce88:	00000706 	br	800cea8 <close+0xbc>
    }
    return 0;
 800ce8c:	0005883a 	mov	r2,zero
 800ce90:	00000506 	br	800cea8 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 800ce94:	800cd9c0 	call	800cd9c <alt_get_errno>
 800ce98:	1007883a 	mov	r3,r2
 800ce9c:	00801444 	movi	r2,81
 800cea0:	18800015 	stw	r2,0(r3)
    return -1;
 800cea4:	00bfffc4 	movi	r2,-1
  }
}
 800cea8:	e037883a 	mov	sp,fp
 800ceac:	dfc00117 	ldw	ra,4(sp)
 800ceb0:	df000017 	ldw	fp,0(sp)
 800ceb4:	dec00204 	addi	sp,sp,8
 800ceb8:	f800283a 	ret

0800cebc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 800cebc:	defffc04 	addi	sp,sp,-16
 800cec0:	df000315 	stw	fp,12(sp)
 800cec4:	df000304 	addi	fp,sp,12
 800cec8:	e13ffd15 	stw	r4,-12(fp)
 800cecc:	e17ffe15 	stw	r5,-8(fp)
 800ced0:	e1bfff15 	stw	r6,-4(fp)
  return len;
 800ced4:	e0bfff17 	ldw	r2,-4(fp)
}
 800ced8:	e037883a 	mov	sp,fp
 800cedc:	df000017 	ldw	fp,0(sp)
 800cee0:	dec00104 	addi	sp,sp,4
 800cee4:	f800283a 	ret

0800cee8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800cee8:	defffe04 	addi	sp,sp,-8
 800ceec:	dfc00115 	stw	ra,4(sp)
 800cef0:	df000015 	stw	fp,0(sp)
 800cef4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800cef8:	00820074 	movhi	r2,2049
 800cefc:	10bdba04 	addi	r2,r2,-2328
 800cf00:	10800017 	ldw	r2,0(r2)
 800cf04:	10000526 	beq	r2,zero,800cf1c <alt_get_errno+0x34>
 800cf08:	00820074 	movhi	r2,2049
 800cf0c:	10bdba04 	addi	r2,r2,-2328
 800cf10:	10800017 	ldw	r2,0(r2)
 800cf14:	103ee83a 	callr	r2
 800cf18:	00000206 	br	800cf24 <alt_get_errno+0x3c>
 800cf1c:	00820074 	movhi	r2,2049
 800cf20:	10809504 	addi	r2,r2,596
}
 800cf24:	e037883a 	mov	sp,fp
 800cf28:	dfc00117 	ldw	ra,4(sp)
 800cf2c:	df000017 	ldw	fp,0(sp)
 800cf30:	dec00204 	addi	sp,sp,8
 800cf34:	f800283a 	ret

0800cf38 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 800cf38:	defffb04 	addi	sp,sp,-20
 800cf3c:	dfc00415 	stw	ra,16(sp)
 800cf40:	df000315 	stw	fp,12(sp)
 800cf44:	df000304 	addi	fp,sp,12
 800cf48:	e13ffe15 	stw	r4,-8(fp)
 800cf4c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800cf50:	e0bffe17 	ldw	r2,-8(fp)
 800cf54:	10000616 	blt	r2,zero,800cf70 <fstat+0x38>
 800cf58:	e0bffe17 	ldw	r2,-8(fp)
 800cf5c:	10c00324 	muli	r3,r2,12
 800cf60:	00820074 	movhi	r2,2049
 800cf64:	10bd1e04 	addi	r2,r2,-2952
 800cf68:	1885883a 	add	r2,r3,r2
 800cf6c:	00000106 	br	800cf74 <fstat+0x3c>
 800cf70:	0005883a 	mov	r2,zero
 800cf74:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 800cf78:	e0bffd17 	ldw	r2,-12(fp)
 800cf7c:	10001026 	beq	r2,zero,800cfc0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 800cf80:	e0bffd17 	ldw	r2,-12(fp)
 800cf84:	10800017 	ldw	r2,0(r2)
 800cf88:	10800817 	ldw	r2,32(r2)
 800cf8c:	10000726 	beq	r2,zero,800cfac <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 800cf90:	e0bffd17 	ldw	r2,-12(fp)
 800cf94:	10800017 	ldw	r2,0(r2)
 800cf98:	10800817 	ldw	r2,32(r2)
 800cf9c:	e13ffd17 	ldw	r4,-12(fp)
 800cfa0:	e17fff17 	ldw	r5,-4(fp)
 800cfa4:	103ee83a 	callr	r2
 800cfa8:	00000a06 	br	800cfd4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 800cfac:	e0bfff17 	ldw	r2,-4(fp)
 800cfb0:	00c80004 	movi	r3,8192
 800cfb4:	10c00115 	stw	r3,4(r2)
      return 0;
 800cfb8:	0005883a 	mov	r2,zero
 800cfbc:	00000506 	br	800cfd4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 800cfc0:	800cee80 	call	800cee8 <alt_get_errno>
 800cfc4:	1007883a 	mov	r3,r2
 800cfc8:	00801444 	movi	r2,81
 800cfcc:	18800015 	stw	r2,0(r3)
    return -1;
 800cfd0:	00bfffc4 	movi	r2,-1
  }
}
 800cfd4:	e037883a 	mov	sp,fp
 800cfd8:	dfc00117 	ldw	ra,4(sp)
 800cfdc:	df000017 	ldw	fp,0(sp)
 800cfe0:	dec00204 	addi	sp,sp,8
 800cfe4:	f800283a 	ret

0800cfe8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800cfe8:	defffe04 	addi	sp,sp,-8
 800cfec:	dfc00115 	stw	ra,4(sp)
 800cff0:	df000015 	stw	fp,0(sp)
 800cff4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800cff8:	00820074 	movhi	r2,2049
 800cffc:	10bdba04 	addi	r2,r2,-2328
 800d000:	10800017 	ldw	r2,0(r2)
 800d004:	10000526 	beq	r2,zero,800d01c <alt_get_errno+0x34>
 800d008:	00820074 	movhi	r2,2049
 800d00c:	10bdba04 	addi	r2,r2,-2328
 800d010:	10800017 	ldw	r2,0(r2)
 800d014:	103ee83a 	callr	r2
 800d018:	00000206 	br	800d024 <alt_get_errno+0x3c>
 800d01c:	00820074 	movhi	r2,2049
 800d020:	10809504 	addi	r2,r2,596
}
 800d024:	e037883a 	mov	sp,fp
 800d028:	dfc00117 	ldw	ra,4(sp)
 800d02c:	df000017 	ldw	fp,0(sp)
 800d030:	dec00204 	addi	sp,sp,8
 800d034:	f800283a 	ret

0800d038 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 800d038:	deffed04 	addi	sp,sp,-76
 800d03c:	dfc01215 	stw	ra,72(sp)
 800d040:	df001115 	stw	fp,68(sp)
 800d044:	df001104 	addi	fp,sp,68
 800d048:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800d04c:	e0bfff17 	ldw	r2,-4(fp)
 800d050:	10000616 	blt	r2,zero,800d06c <isatty+0x34>
 800d054:	e0bfff17 	ldw	r2,-4(fp)
 800d058:	10c00324 	muli	r3,r2,12
 800d05c:	00820074 	movhi	r2,2049
 800d060:	10bd1e04 	addi	r2,r2,-2952
 800d064:	1885883a 	add	r2,r3,r2
 800d068:	00000106 	br	800d070 <isatty+0x38>
 800d06c:	0005883a 	mov	r2,zero
 800d070:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 800d074:	e0bfef17 	ldw	r2,-68(fp)
 800d078:	10000e26 	beq	r2,zero,800d0b4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 800d07c:	e0bfef17 	ldw	r2,-68(fp)
 800d080:	10800017 	ldw	r2,0(r2)
 800d084:	10800817 	ldw	r2,32(r2)
 800d088:	1000021e 	bne	r2,zero,800d094 <isatty+0x5c>
    {
      return 1;
 800d08c:	00800044 	movi	r2,1
 800d090:	00000d06 	br	800d0c8 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 800d094:	e0bff004 	addi	r2,fp,-64
 800d098:	e13fff17 	ldw	r4,-4(fp)
 800d09c:	100b883a 	mov	r5,r2
 800d0a0:	800cf380 	call	800cf38 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 800d0a4:	e0bff117 	ldw	r2,-60(fp)
 800d0a8:	10880020 	cmpeqi	r2,r2,8192
 800d0ac:	10803fcc 	andi	r2,r2,255
 800d0b0:	00000506 	br	800d0c8 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 800d0b4:	800cfe80 	call	800cfe8 <alt_get_errno>
 800d0b8:	1007883a 	mov	r3,r2
 800d0bc:	00801444 	movi	r2,81
 800d0c0:	18800015 	stw	r2,0(r3)
    return 0;
 800d0c4:	0005883a 	mov	r2,zero
  }
}
 800d0c8:	e037883a 	mov	sp,fp
 800d0cc:	dfc00117 	ldw	ra,4(sp)
 800d0d0:	df000017 	ldw	fp,0(sp)
 800d0d4:	dec00204 	addi	sp,sp,8
 800d0d8:	f800283a 	ret

0800d0dc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 800d0dc:	defffc04 	addi	sp,sp,-16
 800d0e0:	df000315 	stw	fp,12(sp)
 800d0e4:	df000304 	addi	fp,sp,12
 800d0e8:	e13ffd15 	stw	r4,-12(fp)
 800d0ec:	e17ffe15 	stw	r5,-8(fp)
 800d0f0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 800d0f4:	e0fffe17 	ldw	r3,-8(fp)
 800d0f8:	e0bffd17 	ldw	r2,-12(fp)
 800d0fc:	18800c26 	beq	r3,r2,800d130 <alt_load_section+0x54>
  {
    while( to != end )
 800d100:	00000806 	br	800d124 <alt_load_section+0x48>
    {
      *to++ = *from++;
 800d104:	e0bffe17 	ldw	r2,-8(fp)
 800d108:	10c00104 	addi	r3,r2,4
 800d10c:	e0fffe15 	stw	r3,-8(fp)
 800d110:	e0fffd17 	ldw	r3,-12(fp)
 800d114:	19000104 	addi	r4,r3,4
 800d118:	e13ffd15 	stw	r4,-12(fp)
 800d11c:	18c00017 	ldw	r3,0(r3)
 800d120:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 800d124:	e0fffe17 	ldw	r3,-8(fp)
 800d128:	e0bfff17 	ldw	r2,-4(fp)
 800d12c:	18bff51e 	bne	r3,r2,800d104 <__flash_exceptions_start+0xf7e0c0e4>
    {
      *to++ = *from++;
    }
  }
}
 800d130:	e037883a 	mov	sp,fp
 800d134:	df000017 	ldw	fp,0(sp)
 800d138:	dec00104 	addi	sp,sp,4
 800d13c:	f800283a 	ret

0800d140 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 800d140:	defffe04 	addi	sp,sp,-8
 800d144:	dfc00115 	stw	ra,4(sp)
 800d148:	df000015 	stw	fp,0(sp)
 800d14c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 800d150:	01020074 	movhi	r4,2049
 800d154:	213dbc04 	addi	r4,r4,-2320
 800d158:	01420074 	movhi	r5,2049
 800d15c:	297aeb04 	addi	r5,r5,-5204
 800d160:	01820074 	movhi	r6,2049
 800d164:	31bdbc04 	addi	r6,r6,-2320
 800d168:	800d0dc0 	call	800d0dc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 800d16c:	01040834 	movhi	r4,4128
 800d170:	21040804 	addi	r4,r4,4128
 800d174:	01440834 	movhi	r5,4128
 800d178:	29440804 	addi	r5,r5,4128
 800d17c:	01840834 	movhi	r6,4128
 800d180:	31840804 	addi	r6,r6,4128
 800d184:	800d0dc0 	call	800d0dc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 800d188:	01020074 	movhi	r4,2049
 800d18c:	213a1c04 	addi	r4,r4,-6032
 800d190:	01420074 	movhi	r5,2049
 800d194:	297a1c04 	addi	r5,r5,-6032
 800d198:	01820074 	movhi	r6,2049
 800d19c:	31baeb04 	addi	r6,r6,-5204
 800d1a0:	800d0dc0 	call	800d0dc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 800d1a4:	800dbfc0 	call	800dbfc <alt_dcache_flush_all>
  alt_icache_flush_all();
 800d1a8:	800ddec0 	call	800ddec <alt_icache_flush_all>
}
 800d1ac:	e037883a 	mov	sp,fp
 800d1b0:	dfc00117 	ldw	ra,4(sp)
 800d1b4:	df000017 	ldw	fp,0(sp)
 800d1b8:	dec00204 	addi	sp,sp,8
 800d1bc:	f800283a 	ret

0800d1c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800d1c0:	defffe04 	addi	sp,sp,-8
 800d1c4:	dfc00115 	stw	ra,4(sp)
 800d1c8:	df000015 	stw	fp,0(sp)
 800d1cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800d1d0:	00820074 	movhi	r2,2049
 800d1d4:	10bdba04 	addi	r2,r2,-2328
 800d1d8:	10800017 	ldw	r2,0(r2)
 800d1dc:	10000526 	beq	r2,zero,800d1f4 <alt_get_errno+0x34>
 800d1e0:	00820074 	movhi	r2,2049
 800d1e4:	10bdba04 	addi	r2,r2,-2328
 800d1e8:	10800017 	ldw	r2,0(r2)
 800d1ec:	103ee83a 	callr	r2
 800d1f0:	00000206 	br	800d1fc <alt_get_errno+0x3c>
 800d1f4:	00820074 	movhi	r2,2049
 800d1f8:	10809504 	addi	r2,r2,596
}
 800d1fc:	e037883a 	mov	sp,fp
 800d200:	dfc00117 	ldw	ra,4(sp)
 800d204:	df000017 	ldw	fp,0(sp)
 800d208:	dec00204 	addi	sp,sp,8
 800d20c:	f800283a 	ret

0800d210 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 800d210:	defff904 	addi	sp,sp,-28
 800d214:	dfc00615 	stw	ra,24(sp)
 800d218:	df000515 	stw	fp,20(sp)
 800d21c:	df000504 	addi	fp,sp,20
 800d220:	e13ffd15 	stw	r4,-12(fp)
 800d224:	e17ffe15 	stw	r5,-8(fp)
 800d228:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 800d22c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800d230:	e0bffd17 	ldw	r2,-12(fp)
 800d234:	10000616 	blt	r2,zero,800d250 <lseek+0x40>
 800d238:	e0bffd17 	ldw	r2,-12(fp)
 800d23c:	10c00324 	muli	r3,r2,12
 800d240:	00820074 	movhi	r2,2049
 800d244:	10bd1e04 	addi	r2,r2,-2952
 800d248:	1885883a 	add	r2,r3,r2
 800d24c:	00000106 	br	800d254 <lseek+0x44>
 800d250:	0005883a 	mov	r2,zero
 800d254:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 800d258:	e0bffc17 	ldw	r2,-16(fp)
 800d25c:	10001026 	beq	r2,zero,800d2a0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 800d260:	e0bffc17 	ldw	r2,-16(fp)
 800d264:	10800017 	ldw	r2,0(r2)
 800d268:	10800717 	ldw	r2,28(r2)
 800d26c:	10000926 	beq	r2,zero,800d294 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 800d270:	e0bffc17 	ldw	r2,-16(fp)
 800d274:	10800017 	ldw	r2,0(r2)
 800d278:	10800717 	ldw	r2,28(r2)
 800d27c:	e13ffc17 	ldw	r4,-16(fp)
 800d280:	e17ffe17 	ldw	r5,-8(fp)
 800d284:	e1bfff17 	ldw	r6,-4(fp)
 800d288:	103ee83a 	callr	r2
 800d28c:	e0bffb15 	stw	r2,-20(fp)
 800d290:	00000506 	br	800d2a8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 800d294:	00bfde84 	movi	r2,-134
 800d298:	e0bffb15 	stw	r2,-20(fp)
 800d29c:	00000206 	br	800d2a8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 800d2a0:	00bfebc4 	movi	r2,-81
 800d2a4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 800d2a8:	e0bffb17 	ldw	r2,-20(fp)
 800d2ac:	1000070e 	bge	r2,zero,800d2cc <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 800d2b0:	800d1c00 	call	800d1c0 <alt_get_errno>
 800d2b4:	1007883a 	mov	r3,r2
 800d2b8:	e0bffb17 	ldw	r2,-20(fp)
 800d2bc:	0085c83a 	sub	r2,zero,r2
 800d2c0:	18800015 	stw	r2,0(r3)
    rc = -1;
 800d2c4:	00bfffc4 	movi	r2,-1
 800d2c8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 800d2cc:	e0bffb17 	ldw	r2,-20(fp)
}
 800d2d0:	e037883a 	mov	sp,fp
 800d2d4:	dfc00117 	ldw	ra,4(sp)
 800d2d8:	df000017 	ldw	fp,0(sp)
 800d2dc:	dec00204 	addi	sp,sp,8
 800d2e0:	f800283a 	ret

0800d2e4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 800d2e4:	defffd04 	addi	sp,sp,-12
 800d2e8:	dfc00215 	stw	ra,8(sp)
 800d2ec:	df000115 	stw	fp,4(sp)
 800d2f0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 800d2f4:	0009883a 	mov	r4,zero
 800d2f8:	800d7780 	call	800d778 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 800d2fc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 800d300:	800d7ac0 	call	800d7ac <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 800d304:	01020074 	movhi	r4,2049
 800d308:	213ad904 	addi	r4,r4,-5276
 800d30c:	01420074 	movhi	r5,2049
 800d310:	297ad904 	addi	r5,r5,-5276
 800d314:	01820074 	movhi	r6,2049
 800d318:	31bad904 	addi	r6,r6,-5276
 800d31c:	800dedc0 	call	800dedc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 800d320:	800dd340 	call	800dd34 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 800d324:	01020074 	movhi	r4,2049
 800d328:	21376404 	addi	r4,r4,-8816
 800d32c:	800e4cc0 	call	800e4cc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 800d330:	d122ed17 	ldw	r4,-29772(gp)
 800d334:	d0e2ee17 	ldw	r3,-29768(gp)
 800d338:	d0a2ef17 	ldw	r2,-29764(gp)
 800d33c:	180b883a 	mov	r5,r3
 800d340:	100d883a 	mov	r6,r2
 800d344:	800008c0 	call	800008c <main>
 800d348:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 800d34c:	01000044 	movi	r4,1
 800d350:	800cdec0 	call	800cdec <close>
  exit (result);
 800d354:	e13fff17 	ldw	r4,-4(fp)
 800d358:	800e4e00 	call	800e4e0 <exit>

0800d35c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 800d35c:	defffe04 	addi	sp,sp,-8
 800d360:	df000115 	stw	fp,4(sp)
 800d364:	df000104 	addi	fp,sp,4
 800d368:	e13fff15 	stw	r4,-4(fp)
}
 800d36c:	e037883a 	mov	sp,fp
 800d370:	df000017 	ldw	fp,0(sp)
 800d374:	dec00104 	addi	sp,sp,4
 800d378:	f800283a 	ret

0800d37c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 800d37c:	defffe04 	addi	sp,sp,-8
 800d380:	df000115 	stw	fp,4(sp)
 800d384:	df000104 	addi	fp,sp,4
 800d388:	e13fff15 	stw	r4,-4(fp)
}
 800d38c:	e037883a 	mov	sp,fp
 800d390:	df000017 	ldw	fp,0(sp)
 800d394:	dec00104 	addi	sp,sp,4
 800d398:	f800283a 	ret

0800d39c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800d39c:	defffe04 	addi	sp,sp,-8
 800d3a0:	dfc00115 	stw	ra,4(sp)
 800d3a4:	df000015 	stw	fp,0(sp)
 800d3a8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800d3ac:	00820074 	movhi	r2,2049
 800d3b0:	10bdba04 	addi	r2,r2,-2328
 800d3b4:	10800017 	ldw	r2,0(r2)
 800d3b8:	10000526 	beq	r2,zero,800d3d0 <alt_get_errno+0x34>
 800d3bc:	00820074 	movhi	r2,2049
 800d3c0:	10bdba04 	addi	r2,r2,-2328
 800d3c4:	10800017 	ldw	r2,0(r2)
 800d3c8:	103ee83a 	callr	r2
 800d3cc:	00000206 	br	800d3d8 <alt_get_errno+0x3c>
 800d3d0:	00820074 	movhi	r2,2049
 800d3d4:	10809504 	addi	r2,r2,596
}
 800d3d8:	e037883a 	mov	sp,fp
 800d3dc:	dfc00117 	ldw	ra,4(sp)
 800d3e0:	df000017 	ldw	fp,0(sp)
 800d3e4:	dec00204 	addi	sp,sp,8
 800d3e8:	f800283a 	ret

0800d3ec <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 800d3ec:	defff904 	addi	sp,sp,-28
 800d3f0:	dfc00615 	stw	ra,24(sp)
 800d3f4:	df000515 	stw	fp,20(sp)
 800d3f8:	df000504 	addi	fp,sp,20
 800d3fc:	e13ffd15 	stw	r4,-12(fp)
 800d400:	e17ffe15 	stw	r5,-8(fp)
 800d404:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800d408:	e0bffd17 	ldw	r2,-12(fp)
 800d40c:	10000616 	blt	r2,zero,800d428 <read+0x3c>
 800d410:	e0bffd17 	ldw	r2,-12(fp)
 800d414:	10c00324 	muli	r3,r2,12
 800d418:	00820074 	movhi	r2,2049
 800d41c:	10bd1e04 	addi	r2,r2,-2952
 800d420:	1885883a 	add	r2,r3,r2
 800d424:	00000106 	br	800d42c <read+0x40>
 800d428:	0005883a 	mov	r2,zero
 800d42c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 800d430:	e0bffb17 	ldw	r2,-20(fp)
 800d434:	10002226 	beq	r2,zero,800d4c0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 800d438:	e0bffb17 	ldw	r2,-20(fp)
 800d43c:	10800217 	ldw	r2,8(r2)
 800d440:	108000cc 	andi	r2,r2,3
 800d444:	10800060 	cmpeqi	r2,r2,1
 800d448:	1000181e 	bne	r2,zero,800d4ac <read+0xc0>
        (fd->dev->read))
 800d44c:	e0bffb17 	ldw	r2,-20(fp)
 800d450:	10800017 	ldw	r2,0(r2)
 800d454:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 800d458:	10001426 	beq	r2,zero,800d4ac <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 800d45c:	e0bffb17 	ldw	r2,-20(fp)
 800d460:	10800017 	ldw	r2,0(r2)
 800d464:	10800517 	ldw	r2,20(r2)
 800d468:	e0ffff17 	ldw	r3,-4(fp)
 800d46c:	e13ffb17 	ldw	r4,-20(fp)
 800d470:	e17ffe17 	ldw	r5,-8(fp)
 800d474:	180d883a 	mov	r6,r3
 800d478:	103ee83a 	callr	r2
 800d47c:	e0bffc15 	stw	r2,-16(fp)
 800d480:	e0bffc17 	ldw	r2,-16(fp)
 800d484:	1000070e 	bge	r2,zero,800d4a4 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 800d488:	800d39c0 	call	800d39c <alt_get_errno>
 800d48c:	1007883a 	mov	r3,r2
 800d490:	e0bffc17 	ldw	r2,-16(fp)
 800d494:	0085c83a 	sub	r2,zero,r2
 800d498:	18800015 	stw	r2,0(r3)
          return -1;
 800d49c:	00bfffc4 	movi	r2,-1
 800d4a0:	00000c06 	br	800d4d4 <read+0xe8>
        }
        return rval;
 800d4a4:	e0bffc17 	ldw	r2,-16(fp)
 800d4a8:	00000a06 	br	800d4d4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 800d4ac:	800d39c0 	call	800d39c <alt_get_errno>
 800d4b0:	1007883a 	mov	r3,r2
 800d4b4:	00800344 	movi	r2,13
 800d4b8:	18800015 	stw	r2,0(r3)
 800d4bc:	00000406 	br	800d4d0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 800d4c0:	800d39c0 	call	800d39c <alt_get_errno>
 800d4c4:	1007883a 	mov	r3,r2
 800d4c8:	00801444 	movi	r2,81
 800d4cc:	18800015 	stw	r2,0(r3)
  }
  return -1;
 800d4d0:	00bfffc4 	movi	r2,-1
}
 800d4d4:	e037883a 	mov	sp,fp
 800d4d8:	dfc00117 	ldw	ra,4(sp)
 800d4dc:	df000017 	ldw	fp,0(sp)
 800d4e0:	dec00204 	addi	sp,sp,8
 800d4e4:	f800283a 	ret

0800d4e8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 800d4e8:	defffe04 	addi	sp,sp,-8
 800d4ec:	df000115 	stw	fp,4(sp)
 800d4f0:	df000104 	addi	fp,sp,4
 800d4f4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 800d4f8:	e0bfff17 	ldw	r2,-4(fp)
 800d4fc:	108000d0 	cmplti	r2,r2,3
 800d500:	10000d1e 	bne	r2,zero,800d538 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 800d504:	00820074 	movhi	r2,2049
 800d508:	10bd1e04 	addi	r2,r2,-2952
 800d50c:	e0ffff17 	ldw	r3,-4(fp)
 800d510:	18c00324 	muli	r3,r3,12
 800d514:	18c00204 	addi	r3,r3,8
 800d518:	10c5883a 	add	r2,r2,r3
 800d51c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 800d520:	00820074 	movhi	r2,2049
 800d524:	10bd1e04 	addi	r2,r2,-2952
 800d528:	e0ffff17 	ldw	r3,-4(fp)
 800d52c:	18c00324 	muli	r3,r3,12
 800d530:	10c5883a 	add	r2,r2,r3
 800d534:	10000015 	stw	zero,0(r2)
  }
}
 800d538:	e037883a 	mov	sp,fp
 800d53c:	df000017 	ldw	fp,0(sp)
 800d540:	dec00104 	addi	sp,sp,4
 800d544:	f800283a 	ret

0800d548 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 800d548:	defff904 	addi	sp,sp,-28
 800d54c:	df000615 	stw	fp,24(sp)
 800d550:	df000604 	addi	fp,sp,24
 800d554:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 800d558:	0005303a 	rdctl	r2,status
 800d55c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 800d560:	e0fffc17 	ldw	r3,-16(fp)
 800d564:	00bfff84 	movi	r2,-2
 800d568:	1884703a 	and	r2,r3,r2
 800d56c:	1001703a 	wrctl	status,r2
  
  return context;
 800d570:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 800d574:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 800d578:	d0a01217 	ldw	r2,-32696(gp)
 800d57c:	10c000c4 	addi	r3,r2,3
 800d580:	00bfff04 	movi	r2,-4
 800d584:	1884703a 	and	r2,r3,r2
 800d588:	d0a01215 	stw	r2,-32696(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 800d58c:	d0e01217 	ldw	r3,-32696(gp)
 800d590:	e0bfff17 	ldw	r2,-4(fp)
 800d594:	1887883a 	add	r3,r3,r2
 800d598:	00840034 	movhi	r2,4096
 800d59c:	10800004 	addi	r2,r2,0
 800d5a0:	10c0062e 	bgeu	r2,r3,800d5bc <sbrk+0x74>
 800d5a4:	e0bffa17 	ldw	r2,-24(fp)
 800d5a8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 800d5ac:	e0bffd17 	ldw	r2,-12(fp)
 800d5b0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 800d5b4:	00bfffc4 	movi	r2,-1
 800d5b8:	00000b06 	br	800d5e8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 800d5bc:	d0a01217 	ldw	r2,-32696(gp)
 800d5c0:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 800d5c4:	d0e01217 	ldw	r3,-32696(gp)
 800d5c8:	e0bfff17 	ldw	r2,-4(fp)
 800d5cc:	1885883a 	add	r2,r3,r2
 800d5d0:	d0a01215 	stw	r2,-32696(gp)
 800d5d4:	e0bffa17 	ldw	r2,-24(fp)
 800d5d8:	e0bffe15 	stw	r2,-8(fp)
 800d5dc:	e0bffe17 	ldw	r2,-8(fp)
 800d5e0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 800d5e4:	e0bffb17 	ldw	r2,-20(fp)
} 
 800d5e8:	e037883a 	mov	sp,fp
 800d5ec:	df000017 	ldw	fp,0(sp)
 800d5f0:	dec00104 	addi	sp,sp,4
 800d5f4:	f800283a 	ret

0800d5f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800d5f8:	defffe04 	addi	sp,sp,-8
 800d5fc:	dfc00115 	stw	ra,4(sp)
 800d600:	df000015 	stw	fp,0(sp)
 800d604:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800d608:	00820074 	movhi	r2,2049
 800d60c:	10bdba04 	addi	r2,r2,-2328
 800d610:	10800017 	ldw	r2,0(r2)
 800d614:	10000526 	beq	r2,zero,800d62c <alt_get_errno+0x34>
 800d618:	00820074 	movhi	r2,2049
 800d61c:	10bdba04 	addi	r2,r2,-2328
 800d620:	10800017 	ldw	r2,0(r2)
 800d624:	103ee83a 	callr	r2
 800d628:	00000206 	br	800d634 <alt_get_errno+0x3c>
 800d62c:	00820074 	movhi	r2,2049
 800d630:	10809504 	addi	r2,r2,596
}
 800d634:	e037883a 	mov	sp,fp
 800d638:	dfc00117 	ldw	ra,4(sp)
 800d63c:	df000017 	ldw	fp,0(sp)
 800d640:	dec00204 	addi	sp,sp,8
 800d644:	f800283a 	ret

0800d648 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 800d648:	defff904 	addi	sp,sp,-28
 800d64c:	dfc00615 	stw	ra,24(sp)
 800d650:	df000515 	stw	fp,20(sp)
 800d654:	df000504 	addi	fp,sp,20
 800d658:	e13ffd15 	stw	r4,-12(fp)
 800d65c:	e17ffe15 	stw	r5,-8(fp)
 800d660:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 800d664:	e0bffd17 	ldw	r2,-12(fp)
 800d668:	10000616 	blt	r2,zero,800d684 <write+0x3c>
 800d66c:	e0bffd17 	ldw	r2,-12(fp)
 800d670:	10c00324 	muli	r3,r2,12
 800d674:	00820074 	movhi	r2,2049
 800d678:	10bd1e04 	addi	r2,r2,-2952
 800d67c:	1885883a 	add	r2,r3,r2
 800d680:	00000106 	br	800d688 <write+0x40>
 800d684:	0005883a 	mov	r2,zero
 800d688:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 800d68c:	e0bffb17 	ldw	r2,-20(fp)
 800d690:	10002126 	beq	r2,zero,800d718 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 800d694:	e0bffb17 	ldw	r2,-20(fp)
 800d698:	10800217 	ldw	r2,8(r2)
 800d69c:	108000cc 	andi	r2,r2,3
 800d6a0:	10001826 	beq	r2,zero,800d704 <write+0xbc>
 800d6a4:	e0bffb17 	ldw	r2,-20(fp)
 800d6a8:	10800017 	ldw	r2,0(r2)
 800d6ac:	10800617 	ldw	r2,24(r2)
 800d6b0:	10001426 	beq	r2,zero,800d704 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 800d6b4:	e0bffb17 	ldw	r2,-20(fp)
 800d6b8:	10800017 	ldw	r2,0(r2)
 800d6bc:	10800617 	ldw	r2,24(r2)
 800d6c0:	e0ffff17 	ldw	r3,-4(fp)
 800d6c4:	e13ffb17 	ldw	r4,-20(fp)
 800d6c8:	e17ffe17 	ldw	r5,-8(fp)
 800d6cc:	180d883a 	mov	r6,r3
 800d6d0:	103ee83a 	callr	r2
 800d6d4:	e0bffc15 	stw	r2,-16(fp)
 800d6d8:	e0bffc17 	ldw	r2,-16(fp)
 800d6dc:	1000070e 	bge	r2,zero,800d6fc <write+0xb4>
      {
        ALT_ERRNO = -rval;
 800d6e0:	800d5f80 	call	800d5f8 <alt_get_errno>
 800d6e4:	1007883a 	mov	r3,r2
 800d6e8:	e0bffc17 	ldw	r2,-16(fp)
 800d6ec:	0085c83a 	sub	r2,zero,r2
 800d6f0:	18800015 	stw	r2,0(r3)
        return -1;
 800d6f4:	00bfffc4 	movi	r2,-1
 800d6f8:	00000c06 	br	800d72c <write+0xe4>
      }
      return rval;
 800d6fc:	e0bffc17 	ldw	r2,-16(fp)
 800d700:	00000a06 	br	800d72c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 800d704:	800d5f80 	call	800d5f8 <alt_get_errno>
 800d708:	1007883a 	mov	r3,r2
 800d70c:	00800344 	movi	r2,13
 800d710:	18800015 	stw	r2,0(r3)
 800d714:	00000406 	br	800d728 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 800d718:	800d5f80 	call	800d5f8 <alt_get_errno>
 800d71c:	1007883a 	mov	r3,r2
 800d720:	00801444 	movi	r2,81
 800d724:	18800015 	stw	r2,0(r3)
  }
  return -1;
 800d728:	00bfffc4 	movi	r2,-1
}
 800d72c:	e037883a 	mov	sp,fp
 800d730:	dfc00117 	ldw	ra,4(sp)
 800d734:	df000017 	ldw	fp,0(sp)
 800d738:	dec00204 	addi	sp,sp,8
 800d73c:	f800283a 	ret

0800d740 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 800d740:	defffd04 	addi	sp,sp,-12
 800d744:	dfc00215 	stw	ra,8(sp)
 800d748:	df000115 	stw	fp,4(sp)
 800d74c:	df000104 	addi	fp,sp,4
 800d750:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 800d754:	e13fff17 	ldw	r4,-4(fp)
 800d758:	01420074 	movhi	r5,2049
 800d75c:	297db704 	addi	r5,r5,-2340
 800d760:	800dc900 	call	800dc90 <alt_dev_llist_insert>
}
 800d764:	e037883a 	mov	sp,fp
 800d768:	dfc00117 	ldw	ra,4(sp)
 800d76c:	df000017 	ldw	fp,0(sp)
 800d770:	dec00204 	addi	sp,sp,8
 800d774:	f800283a 	ret

0800d778 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 800d778:	defffd04 	addi	sp,sp,-12
 800d77c:	dfc00215 	stw	ra,8(sp)
 800d780:	df000115 	stw	fp,4(sp)
 800d784:	df000104 	addi	fp,sp,4
 800d788:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 800d78c:	800e1c80 	call	800e1c8 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 800d790:	00800044 	movi	r2,1
 800d794:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 800d798:	e037883a 	mov	sp,fp
 800d79c:	dfc00117 	ldw	ra,4(sp)
 800d7a0:	df000017 	ldw	fp,0(sp)
 800d7a4:	dec00204 	addi	sp,sp,8
 800d7a8:	f800283a 	ret

0800d7ac <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 800d7ac:	defffd04 	addi	sp,sp,-12
 800d7b0:	dfc00215 	stw	ra,8(sp)
 800d7b4:	df000115 	stw	fp,4(sp)
 800d7b8:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 800d7bc:	01020074 	movhi	r4,2049
 800d7c0:	213d7e04 	addi	r4,r4,-2568
 800d7c4:	800d7400 	call	800d740 <alt_dev_reg>
    ALTERA_UP_AVALON_PARALLEL_PORT_INIT ( BUTTONS, buttons);
 800d7c8:	01020074 	movhi	r4,2049
 800d7cc:	213d8904 	addi	r4,r4,-2524
 800d7d0:	800d7400 	call	800d740 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_PIXEL_BUFFER_DMA_INIT ( PIXEL_BUFFER_DMA, pixel_buffer_dma);
 800d7d4:	00820074 	movhi	r2,2049
 800d7d8:	10bd9404 	addi	r2,r2,-2480
 800d7dc:	10800a17 	ldw	r2,40(r2)
 800d7e0:	10800017 	ldw	r2,0(r2)
 800d7e4:	1007883a 	mov	r3,r2
 800d7e8:	00820074 	movhi	r2,2049
 800d7ec:	10bd9404 	addi	r2,r2,-2480
 800d7f0:	10c00b15 	stw	r3,44(r2)
 800d7f4:	00820074 	movhi	r2,2049
 800d7f8:	10bd9404 	addi	r2,r2,-2480
 800d7fc:	10800a17 	ldw	r2,40(r2)
 800d800:	10800104 	addi	r2,r2,4
 800d804:	10800017 	ldw	r2,0(r2)
 800d808:	1007883a 	mov	r3,r2
 800d80c:	00820074 	movhi	r2,2049
 800d810:	10bd9404 	addi	r2,r2,-2480
 800d814:	10c00c15 	stw	r3,48(r2)
 800d818:	00820074 	movhi	r2,2049
 800d81c:	10bd9404 	addi	r2,r2,-2480
 800d820:	10800a17 	ldw	r2,40(r2)
 800d824:	10800204 	addi	r2,r2,8
 800d828:	10800017 	ldw	r2,0(r2)
 800d82c:	10ffffcc 	andi	r3,r2,65535
 800d830:	00820074 	movhi	r2,2049
 800d834:	10bd9404 	addi	r2,r2,-2480
 800d838:	10c00f15 	stw	r3,60(r2)
 800d83c:	00820074 	movhi	r2,2049
 800d840:	10bd9404 	addi	r2,r2,-2480
 800d844:	10800a17 	ldw	r2,40(r2)
 800d848:	10800204 	addi	r2,r2,8
 800d84c:	10800017 	ldw	r2,0(r2)
 800d850:	1006d43a 	srli	r3,r2,16
 800d854:	00820074 	movhi	r2,2049
 800d858:	10bd9404 	addi	r2,r2,-2480
 800d85c:	10c01015 	stw	r3,64(r2)
 800d860:	00820074 	movhi	r2,2049
 800d864:	10bd9404 	addi	r2,r2,-2480
 800d868:	10800a17 	ldw	r2,40(r2)
 800d86c:	10800304 	addi	r2,r2,12
 800d870:	10800017 	ldw	r2,0(r2)
 800d874:	1005d07a 	srai	r2,r2,1
 800d878:	10c0004c 	andi	r3,r2,1
 800d87c:	00820074 	movhi	r2,2049
 800d880:	10bd9404 	addi	r2,r2,-2480
 800d884:	10c00d15 	stw	r3,52(r2)
 800d888:	00820074 	movhi	r2,2049
 800d88c:	10bd9404 	addi	r2,r2,-2480
 800d890:	10800a17 	ldw	r2,40(r2)
 800d894:	10800304 	addi	r2,r2,12
 800d898:	10800017 	ldw	r2,0(r2)
 800d89c:	1005d13a 	srai	r2,r2,4
 800d8a0:	10c003cc 	andi	r3,r2,15
 800d8a4:	00820074 	movhi	r2,2049
 800d8a8:	10bd9404 	addi	r2,r2,-2480
 800d8ac:	10c00e15 	stw	r3,56(r2)
 800d8b0:	00820074 	movhi	r2,2049
 800d8b4:	10bd9404 	addi	r2,r2,-2480
 800d8b8:	10800a17 	ldw	r2,40(r2)
 800d8bc:	10800304 	addi	r2,r2,12
 800d8c0:	10800017 	ldw	r2,0(r2)
 800d8c4:	1005d43a 	srai	r2,r2,16
 800d8c8:	e0bfff05 	stb	r2,-4(fp)
 800d8cc:	00820074 	movhi	r2,2049
 800d8d0:	10bd9404 	addi	r2,r2,-2480
 800d8d4:	10800a17 	ldw	r2,40(r2)
 800d8d8:	10800304 	addi	r2,r2,12
 800d8dc:	10800017 	ldw	r2,0(r2)
 800d8e0:	1004d63a 	srli	r2,r2,24
 800d8e4:	e0bfff45 	stb	r2,-3(fp)
 800d8e8:	00820074 	movhi	r2,2049
 800d8ec:	10bd9404 	addi	r2,r2,-2480
 800d8f0:	10800e17 	ldw	r2,56(r2)
 800d8f4:	10800058 	cmpnei	r2,r2,1
 800d8f8:	1000041e 	bne	r2,zero,800d90c <alt_sys_init+0x160>
 800d8fc:	00820074 	movhi	r2,2049
 800d900:	10bd9404 	addi	r2,r2,-2480
 800d904:	10001115 	stw	zero,68(r2)
 800d908:	00000e06 	br	800d944 <alt_sys_init+0x198>
 800d90c:	00820074 	movhi	r2,2049
 800d910:	10bd9404 	addi	r2,r2,-2480
 800d914:	10800e17 	ldw	r2,56(r2)
 800d918:	10800098 	cmpnei	r2,r2,2
 800d91c:	1000051e 	bne	r2,zero,800d934 <alt_sys_init+0x188>
 800d920:	00820074 	movhi	r2,2049
 800d924:	10bd9404 	addi	r2,r2,-2480
 800d928:	00c00044 	movi	r3,1
 800d92c:	10c01115 	stw	r3,68(r2)
 800d930:	00000406 	br	800d944 <alt_sys_init+0x198>
 800d934:	00820074 	movhi	r2,2049
 800d938:	10bd9404 	addi	r2,r2,-2480
 800d93c:	00c00084 	movi	r3,2
 800d940:	10c01115 	stw	r3,68(r2)
 800d944:	e0bfff03 	ldbu	r2,-4(fp)
 800d948:	00c00804 	movi	r3,32
 800d94c:	1885c83a 	sub	r2,r3,r2
 800d950:	00ffffc4 	movi	r3,-1
 800d954:	1886d83a 	srl	r3,r3,r2
 800d958:	00820074 	movhi	r2,2049
 800d95c:	10bd9404 	addi	r2,r2,-2480
 800d960:	10c01215 	stw	r3,72(r2)
 800d964:	e0ffff03 	ldbu	r3,-4(fp)
 800d968:	00820074 	movhi	r2,2049
 800d96c:	10bd9404 	addi	r2,r2,-2480
 800d970:	10801117 	ldw	r2,68(r2)
 800d974:	1887883a 	add	r3,r3,r2
 800d978:	00820074 	movhi	r2,2049
 800d97c:	10bd9404 	addi	r2,r2,-2480
 800d980:	10c01315 	stw	r3,76(r2)
 800d984:	e0bfff43 	ldbu	r2,-3(fp)
 800d988:	00c00804 	movi	r3,32
 800d98c:	1885c83a 	sub	r2,r3,r2
 800d990:	00ffffc4 	movi	r3,-1
 800d994:	1886d83a 	srl	r3,r3,r2
 800d998:	00820074 	movhi	r2,2049
 800d99c:	10bd9404 	addi	r2,r2,-2480
 800d9a0:	10c01415 	stw	r3,80(r2)
 800d9a4:	01020074 	movhi	r4,2049
 800d9a8:	213d9404 	addi	r4,r4,-2480
 800d9ac:	800d7400 	call	800d740 <alt_dev_reg>
}
 800d9b0:	e037883a 	mov	sp,fp
 800d9b4:	dfc00117 	ldw	ra,4(sp)
 800d9b8:	df000017 	ldw	fp,0(sp)
 800d9bc:	dec00204 	addi	sp,sp,8
 800d9c0:	f800283a 	ret

0800d9c4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 800d9c4:	defffa04 	addi	sp,sp,-24
 800d9c8:	dfc00515 	stw	ra,20(sp)
 800d9cc:	df000415 	stw	fp,16(sp)
 800d9d0:	df000404 	addi	fp,sp,16
 800d9d4:	e13ffd15 	stw	r4,-12(fp)
 800d9d8:	e17ffe15 	stw	r5,-8(fp)
 800d9dc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 800d9e0:	e0bffd17 	ldw	r2,-12(fp)
 800d9e4:	10800017 	ldw	r2,0(r2)
 800d9e8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 800d9ec:	e0bffc17 	ldw	r2,-16(fp)
 800d9f0:	10c00a04 	addi	r3,r2,40
 800d9f4:	e0bffd17 	ldw	r2,-12(fp)
 800d9f8:	10800217 	ldw	r2,8(r2)
 800d9fc:	1809883a 	mov	r4,r3
 800da00:	e17ffe17 	ldw	r5,-8(fp)
 800da04:	e1bfff17 	ldw	r6,-4(fp)
 800da08:	100f883a 	mov	r7,r2
 800da0c:	800da840 	call	800da84 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 800da10:	e037883a 	mov	sp,fp
 800da14:	dfc00117 	ldw	ra,4(sp)
 800da18:	df000017 	ldw	fp,0(sp)
 800da1c:	dec00204 	addi	sp,sp,8
 800da20:	f800283a 	ret

0800da24 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 800da24:	defffa04 	addi	sp,sp,-24
 800da28:	dfc00515 	stw	ra,20(sp)
 800da2c:	df000415 	stw	fp,16(sp)
 800da30:	df000404 	addi	fp,sp,16
 800da34:	e13ffd15 	stw	r4,-12(fp)
 800da38:	e17ffe15 	stw	r5,-8(fp)
 800da3c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 800da40:	e0bffd17 	ldw	r2,-12(fp)
 800da44:	10800017 	ldw	r2,0(r2)
 800da48:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 800da4c:	e0bffc17 	ldw	r2,-16(fp)
 800da50:	10c00a04 	addi	r3,r2,40
 800da54:	e0bffd17 	ldw	r2,-12(fp)
 800da58:	10800217 	ldw	r2,8(r2)
 800da5c:	1809883a 	mov	r4,r3
 800da60:	e17ffe17 	ldw	r5,-8(fp)
 800da64:	e1bfff17 	ldw	r6,-4(fp)
 800da68:	100f883a 	mov	r7,r2
 800da6c:	800db680 	call	800db68 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 800da70:	e037883a 	mov	sp,fp
 800da74:	dfc00117 	ldw	ra,4(sp)
 800da78:	df000017 	ldw	fp,0(sp)
 800da7c:	dec00204 	addi	sp,sp,8
 800da80:	f800283a 	ret

0800da84 <altera_avalon_jtag_uart_read>:
 */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
 800da84:	defff704 	addi	sp,sp,-36
 800da88:	df000815 	stw	fp,32(sp)
 800da8c:	df000804 	addi	fp,sp,32
 800da90:	e13ffc15 	stw	r4,-16(fp)
 800da94:	e17ffd15 	stw	r5,-12(fp)
 800da98:	e1bffe15 	stw	r6,-8(fp)
 800da9c:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
 800daa0:	e0bffc17 	ldw	r2,-16(fp)
 800daa4:	10800017 	ldw	r2,0(r2)
 800daa8:	e0bff915 	stw	r2,-28(fp)

  char * ptr = buffer;
 800daac:	e0bffd17 	ldw	r2,-12(fp)
 800dab0:	e0bff815 	stw	r2,-32(fp)
  char * end = buffer + space;
 800dab4:	e0bffe17 	ldw	r2,-8(fp)
 800dab8:	e0fffd17 	ldw	r3,-12(fp)
 800dabc:	1885883a 	add	r2,r3,r2
 800dac0:	e0bffa15 	stw	r2,-24(fp)

  while (ptr < end)
 800dac4:	00001406 	br	800db18 <altera_avalon_jtag_uart_read+0x94>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 800dac8:	e0bff917 	ldw	r2,-28(fp)
 800dacc:	10800037 	ldwio	r2,0(r2)
 800dad0:	e0bffb15 	stw	r2,-20(fp)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
 800dad4:	e0bffb17 	ldw	r2,-20(fp)
 800dad8:	10a0000c 	andi	r2,r2,32768
 800dadc:	10000626 	beq	r2,zero,800daf8 <altera_avalon_jtag_uart_read+0x74>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 800dae0:	e0bff817 	ldw	r2,-32(fp)
 800dae4:	10c00044 	addi	r3,r2,1
 800dae8:	e0fff815 	stw	r3,-32(fp)
 800daec:	e0fffb17 	ldw	r3,-20(fp)
 800daf0:	10c00005 	stb	r3,0(r2)
 800daf4:	00000806 	br	800db18 <altera_avalon_jtag_uart_read+0x94>
    else if (ptr != buffer)
 800daf8:	e0fff817 	ldw	r3,-32(fp)
 800dafc:	e0bffd17 	ldw	r2,-12(fp)
 800db00:	18800126 	beq	r3,r2,800db08 <altera_avalon_jtag_uart_read+0x84>
      break;
 800db04:	00000706 	br	800db24 <altera_avalon_jtag_uart_read+0xa0>
    else if(flags & O_NONBLOCK)
 800db08:	e0bfff17 	ldw	r2,-4(fp)
 800db0c:	1090000c 	andi	r2,r2,16384
 800db10:	10000126 	beq	r2,zero,800db18 <altera_avalon_jtag_uart_read+0x94>
      break;   
 800db14:	00000306 	br	800db24 <altera_avalon_jtag_uart_read+0xa0>
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
 800db18:	e0fff817 	ldw	r3,-32(fp)
 800db1c:	e0bffa17 	ldw	r2,-24(fp)
 800db20:	18bfe936 	bltu	r3,r2,800dac8 <__flash_exceptions_start+0xf7e0caa8>
    else if(flags & O_NONBLOCK)
      break;   
    
  }

  if (ptr != buffer)
 800db24:	e0fff817 	ldw	r3,-32(fp)
 800db28:	e0bffd17 	ldw	r2,-12(fp)
 800db2c:	18800426 	beq	r3,r2,800db40 <altera_avalon_jtag_uart_read+0xbc>
    return ptr - buffer;
 800db30:	e0fff817 	ldw	r3,-32(fp)
 800db34:	e0bffd17 	ldw	r2,-12(fp)
 800db38:	1885c83a 	sub	r2,r3,r2
 800db3c:	00000606 	br	800db58 <altera_avalon_jtag_uart_read+0xd4>
  else if (flags & O_NONBLOCK)
 800db40:	e0bfff17 	ldw	r2,-4(fp)
 800db44:	1090000c 	andi	r2,r2,16384
 800db48:	10000226 	beq	r2,zero,800db54 <altera_avalon_jtag_uart_read+0xd0>
    return -EWOULDBLOCK;
 800db4c:	00bffd44 	movi	r2,-11
 800db50:	00000106 	br	800db58 <altera_avalon_jtag_uart_read+0xd4>
  else
    return -EIO;
 800db54:	00bffec4 	movi	r2,-5
}
 800db58:	e037883a 	mov	sp,fp
 800db5c:	df000017 	ldw	fp,0(sp)
 800db60:	dec00104 	addi	sp,sp,4
 800db64:	f800283a 	ret

0800db68 <altera_avalon_jtag_uart_write>:
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 800db68:	defff904 	addi	sp,sp,-28
 800db6c:	df000615 	stw	fp,24(sp)
 800db70:	df000604 	addi	fp,sp,24
 800db74:	e13ffc15 	stw	r4,-16(fp)
 800db78:	e17ffd15 	stw	r5,-12(fp)
 800db7c:	e1bffe15 	stw	r6,-8(fp)
 800db80:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
 800db84:	e0bffc17 	ldw	r2,-16(fp)
 800db88:	10800017 	ldw	r2,0(r2)
 800db8c:	e0bffa15 	stw	r2,-24(fp)

  const char * end = ptr + count;
 800db90:	e0bffe17 	ldw	r2,-8(fp)
 800db94:	e0fffd17 	ldw	r3,-12(fp)
 800db98:	1885883a 	add	r2,r3,r2
 800db9c:	e0bffb15 	stw	r2,-20(fp)

  while (ptr < end)
 800dba0:	00000e06 	br	800dbdc <altera_avalon_jtag_uart_write+0x74>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
 800dba4:	e0bffa17 	ldw	r2,-24(fp)
 800dba8:	10800104 	addi	r2,r2,4
 800dbac:	10800037 	ldwio	r2,0(r2)
 800dbb0:	10bfffec 	andhi	r2,r2,65535
 800dbb4:	10000926 	beq	r2,zero,800dbdc <altera_avalon_jtag_uart_write+0x74>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
 800dbb8:	e0fffa17 	ldw	r3,-24(fp)
 800dbbc:	e0bffd17 	ldw	r2,-12(fp)
 800dbc0:	11000044 	addi	r4,r2,1
 800dbc4:	e13ffd15 	stw	r4,-12(fp)
 800dbc8:	10800003 	ldbu	r2,0(r2)
 800dbcc:	10803fcc 	andi	r2,r2,255
 800dbd0:	1080201c 	xori	r2,r2,128
 800dbd4:	10bfe004 	addi	r2,r2,-128
 800dbd8:	18800035 	stwio	r2,0(r3)
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
 800dbdc:	e0fffd17 	ldw	r3,-12(fp)
 800dbe0:	e0bffb17 	ldw	r2,-20(fp)
 800dbe4:	18bfef36 	bltu	r3,r2,800dba4 <__flash_exceptions_start+0xf7e0cb84>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);

  return count;
 800dbe8:	e0bffe17 	ldw	r2,-8(fp)
}
 800dbec:	e037883a 	mov	sp,fp
 800dbf0:	df000017 	ldw	fp,0(sp)
 800dbf4:	dec00104 	addi	sp,sp,4
 800dbf8:	f800283a 	ret

0800dbfc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 800dbfc:	defffe04 	addi	sp,sp,-8
 800dc00:	df000115 	stw	fp,4(sp)
 800dc04:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 800dc08:	e03fff15 	stw	zero,-4(fp)
 800dc0c:	00000506 	br	800dc24 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 800dc10:	e0bfff17 	ldw	r2,-4(fp)
 800dc14:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 800dc18:	e0bfff17 	ldw	r2,-4(fp)
 800dc1c:	10800804 	addi	r2,r2,32
 800dc20:	e0bfff15 	stw	r2,-4(fp)
 800dc24:	e0bfff17 	ldw	r2,-4(fp)
 800dc28:	10820030 	cmpltui	r2,r2,2048
 800dc2c:	103ff81e 	bne	r2,zero,800dc10 <__flash_exceptions_start+0xf7e0cbf0>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 800dc30:	e037883a 	mov	sp,fp
 800dc34:	df000017 	ldw	fp,0(sp)
 800dc38:	dec00104 	addi	sp,sp,4
 800dc3c:	f800283a 	ret

0800dc40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800dc40:	defffe04 	addi	sp,sp,-8
 800dc44:	dfc00115 	stw	ra,4(sp)
 800dc48:	df000015 	stw	fp,0(sp)
 800dc4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800dc50:	00820074 	movhi	r2,2049
 800dc54:	10bdba04 	addi	r2,r2,-2328
 800dc58:	10800017 	ldw	r2,0(r2)
 800dc5c:	10000526 	beq	r2,zero,800dc74 <alt_get_errno+0x34>
 800dc60:	00820074 	movhi	r2,2049
 800dc64:	10bdba04 	addi	r2,r2,-2328
 800dc68:	10800017 	ldw	r2,0(r2)
 800dc6c:	103ee83a 	callr	r2
 800dc70:	00000206 	br	800dc7c <alt_get_errno+0x3c>
 800dc74:	00820074 	movhi	r2,2049
 800dc78:	10809504 	addi	r2,r2,596
}
 800dc7c:	e037883a 	mov	sp,fp
 800dc80:	dfc00117 	ldw	ra,4(sp)
 800dc84:	df000017 	ldw	fp,0(sp)
 800dc88:	dec00204 	addi	sp,sp,8
 800dc8c:	f800283a 	ret

0800dc90 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 800dc90:	defffa04 	addi	sp,sp,-24
 800dc94:	dfc00515 	stw	ra,20(sp)
 800dc98:	df000415 	stw	fp,16(sp)
 800dc9c:	df000404 	addi	fp,sp,16
 800dca0:	e13ffe15 	stw	r4,-8(fp)
 800dca4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 800dca8:	e0bffe17 	ldw	r2,-8(fp)
 800dcac:	10000326 	beq	r2,zero,800dcbc <alt_dev_llist_insert+0x2c>
 800dcb0:	e0bffe17 	ldw	r2,-8(fp)
 800dcb4:	10800217 	ldw	r2,8(r2)
 800dcb8:	1000061e 	bne	r2,zero,800dcd4 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 800dcbc:	800dc400 	call	800dc40 <alt_get_errno>
 800dcc0:	1007883a 	mov	r3,r2
 800dcc4:	00800584 	movi	r2,22
 800dcc8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 800dccc:	00bffa84 	movi	r2,-22
 800dcd0:	00001306 	br	800dd20 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 800dcd4:	e0bffe17 	ldw	r2,-8(fp)
 800dcd8:	e0ffff17 	ldw	r3,-4(fp)
 800dcdc:	e0fffc15 	stw	r3,-16(fp)
 800dce0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 800dce4:	e0bffd17 	ldw	r2,-12(fp)
 800dce8:	e0fffc17 	ldw	r3,-16(fp)
 800dcec:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 800dcf0:	e0bffc17 	ldw	r2,-16(fp)
 800dcf4:	10c00017 	ldw	r3,0(r2)
 800dcf8:	e0bffd17 	ldw	r2,-12(fp)
 800dcfc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 800dd00:	e0bffc17 	ldw	r2,-16(fp)
 800dd04:	10800017 	ldw	r2,0(r2)
 800dd08:	e0fffd17 	ldw	r3,-12(fp)
 800dd0c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 800dd10:	e0bffc17 	ldw	r2,-16(fp)
 800dd14:	e0fffd17 	ldw	r3,-12(fp)
 800dd18:	10c00015 	stw	r3,0(r2)

  return 0;  
 800dd1c:	0005883a 	mov	r2,zero
}
 800dd20:	e037883a 	mov	sp,fp
 800dd24:	dfc00117 	ldw	ra,4(sp)
 800dd28:	df000017 	ldw	fp,0(sp)
 800dd2c:	dec00204 	addi	sp,sp,8
 800dd30:	f800283a 	ret

0800dd34 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 800dd34:	defffd04 	addi	sp,sp,-12
 800dd38:	dfc00215 	stw	ra,8(sp)
 800dd3c:	df000115 	stw	fp,4(sp)
 800dd40:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 800dd44:	00820074 	movhi	r2,2049
 800dd48:	10ba1b04 	addi	r2,r2,-6036
 800dd4c:	e0bfff15 	stw	r2,-4(fp)
 800dd50:	00000606 	br	800dd6c <_do_ctors+0x38>
        (*ctor) (); 
 800dd54:	e0bfff17 	ldw	r2,-4(fp)
 800dd58:	10800017 	ldw	r2,0(r2)
 800dd5c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 800dd60:	e0bfff17 	ldw	r2,-4(fp)
 800dd64:	10bfff04 	addi	r2,r2,-4
 800dd68:	e0bfff15 	stw	r2,-4(fp)
 800dd6c:	e0ffff17 	ldw	r3,-4(fp)
 800dd70:	00820074 	movhi	r2,2049
 800dd74:	10ba1c04 	addi	r2,r2,-6032
 800dd78:	18bff62e 	bgeu	r3,r2,800dd54 <__flash_exceptions_start+0xf7e0cd34>
        (*ctor) (); 
}
 800dd7c:	e037883a 	mov	sp,fp
 800dd80:	dfc00117 	ldw	ra,4(sp)
 800dd84:	df000017 	ldw	fp,0(sp)
 800dd88:	dec00204 	addi	sp,sp,8
 800dd8c:	f800283a 	ret

0800dd90 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 800dd90:	defffd04 	addi	sp,sp,-12
 800dd94:	dfc00215 	stw	ra,8(sp)
 800dd98:	df000115 	stw	fp,4(sp)
 800dd9c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 800dda0:	00820074 	movhi	r2,2049
 800dda4:	10ba1b04 	addi	r2,r2,-6036
 800dda8:	e0bfff15 	stw	r2,-4(fp)
 800ddac:	00000606 	br	800ddc8 <_do_dtors+0x38>
        (*dtor) (); 
 800ddb0:	e0bfff17 	ldw	r2,-4(fp)
 800ddb4:	10800017 	ldw	r2,0(r2)
 800ddb8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 800ddbc:	e0bfff17 	ldw	r2,-4(fp)
 800ddc0:	10bfff04 	addi	r2,r2,-4
 800ddc4:	e0bfff15 	stw	r2,-4(fp)
 800ddc8:	e0ffff17 	ldw	r3,-4(fp)
 800ddcc:	00820074 	movhi	r2,2049
 800ddd0:	10ba1c04 	addi	r2,r2,-6032
 800ddd4:	18bff62e 	bgeu	r3,r2,800ddb0 <__flash_exceptions_start+0xf7e0cd90>
        (*dtor) (); 
}
 800ddd8:	e037883a 	mov	sp,fp
 800dddc:	dfc00117 	ldw	ra,4(sp)
 800dde0:	df000017 	ldw	fp,0(sp)
 800dde4:	dec00204 	addi	sp,sp,8
 800dde8:	f800283a 	ret

0800ddec <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 800ddec:	defffe04 	addi	sp,sp,-8
 800ddf0:	dfc00115 	stw	ra,4(sp)
 800ddf4:	df000015 	stw	fp,0(sp)
 800ddf8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 800ddfc:	0009883a 	mov	r4,zero
 800de00:	01440004 	movi	r5,4096
 800de04:	800e4400 	call	800e440 <alt_icache_flush>
#endif
}
 800de08:	e037883a 	mov	sp,fp
 800de0c:	dfc00117 	ldw	ra,4(sp)
 800de10:	df000017 	ldw	fp,0(sp)
 800de14:	dec00204 	addi	sp,sp,8
 800de18:	f800283a 	ret

0800de1c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 800de1c:	defff904 	addi	sp,sp,-28
 800de20:	dfc00615 	stw	ra,24(sp)
 800de24:	df000515 	stw	fp,20(sp)
 800de28:	df000504 	addi	fp,sp,20
 800de2c:	e13ffc15 	stw	r4,-16(fp)
 800de30:	e17ffd15 	stw	r5,-12(fp)
 800de34:	e1bffe15 	stw	r6,-8(fp)
 800de38:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 800de3c:	e13ffd17 	ldw	r4,-12(fp)
 800de40:	e17ffe17 	ldw	r5,-8(fp)
 800de44:	e1bfff17 	ldw	r6,-4(fp)
 800de48:	800e0700 	call	800e070 <open>
 800de4c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 800de50:	e0bffb17 	ldw	r2,-20(fp)
 800de54:	10001c16 	blt	r2,zero,800dec8 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 800de58:	00820074 	movhi	r2,2049
 800de5c:	10bd1e04 	addi	r2,r2,-2952
 800de60:	e0fffb17 	ldw	r3,-20(fp)
 800de64:	18c00324 	muli	r3,r3,12
 800de68:	10c5883a 	add	r2,r2,r3
 800de6c:	10c00017 	ldw	r3,0(r2)
 800de70:	e0bffc17 	ldw	r2,-16(fp)
 800de74:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 800de78:	00820074 	movhi	r2,2049
 800de7c:	10bd1e04 	addi	r2,r2,-2952
 800de80:	e0fffb17 	ldw	r3,-20(fp)
 800de84:	18c00324 	muli	r3,r3,12
 800de88:	18c00104 	addi	r3,r3,4
 800de8c:	10c5883a 	add	r2,r2,r3
 800de90:	10c00017 	ldw	r3,0(r2)
 800de94:	e0bffc17 	ldw	r2,-16(fp)
 800de98:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 800de9c:	00820074 	movhi	r2,2049
 800dea0:	10bd1e04 	addi	r2,r2,-2952
 800dea4:	e0fffb17 	ldw	r3,-20(fp)
 800dea8:	18c00324 	muli	r3,r3,12
 800deac:	18c00204 	addi	r3,r3,8
 800deb0:	10c5883a 	add	r2,r2,r3
 800deb4:	10c00017 	ldw	r3,0(r2)
 800deb8:	e0bffc17 	ldw	r2,-16(fp)
 800debc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 800dec0:	e13ffb17 	ldw	r4,-20(fp)
 800dec4:	800d4e80 	call	800d4e8 <alt_release_fd>
  }
} 
 800dec8:	e037883a 	mov	sp,fp
 800decc:	dfc00117 	ldw	ra,4(sp)
 800ded0:	df000017 	ldw	fp,0(sp)
 800ded4:	dec00204 	addi	sp,sp,8
 800ded8:	f800283a 	ret

0800dedc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 800dedc:	defffb04 	addi	sp,sp,-20
 800dee0:	dfc00415 	stw	ra,16(sp)
 800dee4:	df000315 	stw	fp,12(sp)
 800dee8:	df000304 	addi	fp,sp,12
 800deec:	e13ffd15 	stw	r4,-12(fp)
 800def0:	e17ffe15 	stw	r5,-8(fp)
 800def4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 800def8:	01020074 	movhi	r4,2049
 800defc:	213d2104 	addi	r4,r4,-2940
 800df00:	e17ffd17 	ldw	r5,-12(fp)
 800df04:	01800044 	movi	r6,1
 800df08:	01c07fc4 	movi	r7,511
 800df0c:	800de1c0 	call	800de1c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 800df10:	01020074 	movhi	r4,2049
 800df14:	213d1e04 	addi	r4,r4,-2952
 800df18:	e17ffe17 	ldw	r5,-8(fp)
 800df1c:	000d883a 	mov	r6,zero
 800df20:	01c07fc4 	movi	r7,511
 800df24:	800de1c0 	call	800de1c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 800df28:	01020074 	movhi	r4,2049
 800df2c:	213d2404 	addi	r4,r4,-2928
 800df30:	e17fff17 	ldw	r5,-4(fp)
 800df34:	01800044 	movi	r6,1
 800df38:	01c07fc4 	movi	r7,511
 800df3c:	800de1c0 	call	800de1c <alt_open_fd>
}  
 800df40:	e037883a 	mov	sp,fp
 800df44:	dfc00117 	ldw	ra,4(sp)
 800df48:	df000017 	ldw	fp,0(sp)
 800df4c:	dec00204 	addi	sp,sp,8
 800df50:	f800283a 	ret

0800df54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 800df54:	defffe04 	addi	sp,sp,-8
 800df58:	dfc00115 	stw	ra,4(sp)
 800df5c:	df000015 	stw	fp,0(sp)
 800df60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 800df64:	00820074 	movhi	r2,2049
 800df68:	10bdba04 	addi	r2,r2,-2328
 800df6c:	10800017 	ldw	r2,0(r2)
 800df70:	10000526 	beq	r2,zero,800df88 <alt_get_errno+0x34>
 800df74:	00820074 	movhi	r2,2049
 800df78:	10bdba04 	addi	r2,r2,-2328
 800df7c:	10800017 	ldw	r2,0(r2)
 800df80:	103ee83a 	callr	r2
 800df84:	00000206 	br	800df90 <alt_get_errno+0x3c>
 800df88:	00820074 	movhi	r2,2049
 800df8c:	10809504 	addi	r2,r2,596
}
 800df90:	e037883a 	mov	sp,fp
 800df94:	dfc00117 	ldw	ra,4(sp)
 800df98:	df000017 	ldw	fp,0(sp)
 800df9c:	dec00204 	addi	sp,sp,8
 800dfa0:	f800283a 	ret

0800dfa4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 800dfa4:	defffd04 	addi	sp,sp,-12
 800dfa8:	df000215 	stw	fp,8(sp)
 800dfac:	df000204 	addi	fp,sp,8
 800dfb0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 800dfb4:	e0bfff17 	ldw	r2,-4(fp)
 800dfb8:	10800217 	ldw	r2,8(r2)
 800dfbc:	10d00034 	orhi	r3,r2,16384
 800dfc0:	e0bfff17 	ldw	r2,-4(fp)
 800dfc4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 800dfc8:	e03ffe15 	stw	zero,-8(fp)
 800dfcc:	00001d06 	br	800e044 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 800dfd0:	00820074 	movhi	r2,2049
 800dfd4:	10bd1e04 	addi	r2,r2,-2952
 800dfd8:	e0fffe17 	ldw	r3,-8(fp)
 800dfdc:	18c00324 	muli	r3,r3,12
 800dfe0:	10c5883a 	add	r2,r2,r3
 800dfe4:	10c00017 	ldw	r3,0(r2)
 800dfe8:	e0bfff17 	ldw	r2,-4(fp)
 800dfec:	10800017 	ldw	r2,0(r2)
 800dff0:	1880111e 	bne	r3,r2,800e038 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 800dff4:	00820074 	movhi	r2,2049
 800dff8:	10bd1e04 	addi	r2,r2,-2952
 800dffc:	e0fffe17 	ldw	r3,-8(fp)
 800e000:	18c00324 	muli	r3,r3,12
 800e004:	18c00204 	addi	r3,r3,8
 800e008:	10c5883a 	add	r2,r2,r3
 800e00c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 800e010:	1000090e 	bge	r2,zero,800e038 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 800e014:	e0bffe17 	ldw	r2,-8(fp)
 800e018:	10c00324 	muli	r3,r2,12
 800e01c:	00820074 	movhi	r2,2049
 800e020:	10bd1e04 	addi	r2,r2,-2952
 800e024:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 800e028:	e0bfff17 	ldw	r2,-4(fp)
 800e02c:	18800226 	beq	r3,r2,800e038 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 800e030:	00bffcc4 	movi	r2,-13
 800e034:	00000a06 	br	800e060 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 800e038:	e0bffe17 	ldw	r2,-8(fp)
 800e03c:	10800044 	addi	r2,r2,1
 800e040:	e0bffe15 	stw	r2,-8(fp)
 800e044:	00820074 	movhi	r2,2049
 800e048:	10bdb904 	addi	r2,r2,-2332
 800e04c:	10800017 	ldw	r2,0(r2)
 800e050:	1007883a 	mov	r3,r2
 800e054:	e0bffe17 	ldw	r2,-8(fp)
 800e058:	18bfdd2e 	bgeu	r3,r2,800dfd0 <__flash_exceptions_start+0xf7e0cfb0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 800e05c:	0005883a 	mov	r2,zero
}
 800e060:	e037883a 	mov	sp,fp
 800e064:	df000017 	ldw	fp,0(sp)
 800e068:	dec00104 	addi	sp,sp,4
 800e06c:	f800283a 	ret

0800e070 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 800e070:	defff604 	addi	sp,sp,-40
 800e074:	dfc00915 	stw	ra,36(sp)
 800e078:	df000815 	stw	fp,32(sp)
 800e07c:	df000804 	addi	fp,sp,32
 800e080:	e13ffd15 	stw	r4,-12(fp)
 800e084:	e17ffe15 	stw	r5,-8(fp)
 800e088:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 800e08c:	00bfffc4 	movi	r2,-1
 800e090:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 800e094:	00bffb44 	movi	r2,-19
 800e098:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 800e09c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 800e0a0:	e13ffd17 	ldw	r4,-12(fp)
 800e0a4:	01420074 	movhi	r5,2049
 800e0a8:	297db704 	addi	r5,r5,-2340
 800e0ac:	800e1e80 	call	800e1e8 <alt_find_dev>
 800e0b0:	e0bff815 	stw	r2,-32(fp)
 800e0b4:	e0bff817 	ldw	r2,-32(fp)
 800e0b8:	1000051e 	bne	r2,zero,800e0d0 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 800e0bc:	e13ffd17 	ldw	r4,-12(fp)
 800e0c0:	800e2780 	call	800e278 <alt_find_file>
 800e0c4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 800e0c8:	00800044 	movi	r2,1
 800e0cc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 800e0d0:	e0bff817 	ldw	r2,-32(fp)
 800e0d4:	10002926 	beq	r2,zero,800e17c <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
 800e0d8:	e13ff817 	ldw	r4,-32(fp)
 800e0dc:	800e38c0 	call	800e38c <alt_get_fd>
 800e0e0:	e0bff915 	stw	r2,-28(fp)
 800e0e4:	e0bff917 	ldw	r2,-28(fp)
 800e0e8:	1000030e 	bge	r2,zero,800e0f8 <open+0x88>
    {
      status = index;
 800e0ec:	e0bff917 	ldw	r2,-28(fp)
 800e0f0:	e0bffa15 	stw	r2,-24(fp)
 800e0f4:	00002306 	br	800e184 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
 800e0f8:	e0bff917 	ldw	r2,-28(fp)
 800e0fc:	10c00324 	muli	r3,r2,12
 800e100:	00820074 	movhi	r2,2049
 800e104:	10bd1e04 	addi	r2,r2,-2952
 800e108:	1885883a 	add	r2,r3,r2
 800e10c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 800e110:	e0fffe17 	ldw	r3,-8(fp)
 800e114:	00900034 	movhi	r2,16384
 800e118:	10bfffc4 	addi	r2,r2,-1
 800e11c:	1886703a 	and	r3,r3,r2
 800e120:	e0bffc17 	ldw	r2,-16(fp)
 800e124:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 800e128:	e0bffb17 	ldw	r2,-20(fp)
 800e12c:	1000051e 	bne	r2,zero,800e144 <open+0xd4>
 800e130:	e13ffc17 	ldw	r4,-16(fp)
 800e134:	800dfa40 	call	800dfa4 <alt_file_locked>
 800e138:	e0bffa15 	stw	r2,-24(fp)
 800e13c:	e0bffa17 	ldw	r2,-24(fp)
 800e140:	10001016 	blt	r2,zero,800e184 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 800e144:	e0bff817 	ldw	r2,-32(fp)
 800e148:	10800317 	ldw	r2,12(r2)
 800e14c:	10000826 	beq	r2,zero,800e170 <open+0x100>
 800e150:	e0bff817 	ldw	r2,-32(fp)
 800e154:	10800317 	ldw	r2,12(r2)
 800e158:	e13ffc17 	ldw	r4,-16(fp)
 800e15c:	e17ffd17 	ldw	r5,-12(fp)
 800e160:	e1bffe17 	ldw	r6,-8(fp)
 800e164:	e1ffff17 	ldw	r7,-4(fp)
 800e168:	103ee83a 	callr	r2
 800e16c:	00000106 	br	800e174 <open+0x104>
 800e170:	0005883a 	mov	r2,zero
 800e174:	e0bffa15 	stw	r2,-24(fp)
 800e178:	00000206 	br	800e184 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
 800e17c:	00bffb44 	movi	r2,-19
 800e180:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 800e184:	e0bffa17 	ldw	r2,-24(fp)
 800e188:	1000090e 	bge	r2,zero,800e1b0 <open+0x140>
  {
    alt_release_fd (index);  
 800e18c:	e13ff917 	ldw	r4,-28(fp)
 800e190:	800d4e80 	call	800d4e8 <alt_release_fd>
    ALT_ERRNO = -status;
 800e194:	800df540 	call	800df54 <alt_get_errno>
 800e198:	1007883a 	mov	r3,r2
 800e19c:	e0bffa17 	ldw	r2,-24(fp)
 800e1a0:	0085c83a 	sub	r2,zero,r2
 800e1a4:	18800015 	stw	r2,0(r3)
    return -1;
 800e1a8:	00bfffc4 	movi	r2,-1
 800e1ac:	00000106 	br	800e1b4 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 800e1b0:	e0bff917 	ldw	r2,-28(fp)
}
 800e1b4:	e037883a 	mov	sp,fp
 800e1b8:	dfc00117 	ldw	ra,4(sp)
 800e1bc:	df000017 	ldw	fp,0(sp)
 800e1c0:	dec00204 	addi	sp,sp,8
 800e1c4:	f800283a 	ret

0800e1c8 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 800e1c8:	deffff04 	addi	sp,sp,-4
 800e1cc:	df000015 	stw	fp,0(sp)
 800e1d0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 800e1d4:	000170fa 	wrctl	ienable,zero
}
 800e1d8:	e037883a 	mov	sp,fp
 800e1dc:	df000017 	ldw	fp,0(sp)
 800e1e0:	dec00104 	addi	sp,sp,4
 800e1e4:	f800283a 	ret

0800e1e8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 800e1e8:	defffa04 	addi	sp,sp,-24
 800e1ec:	dfc00515 	stw	ra,20(sp)
 800e1f0:	df000415 	stw	fp,16(sp)
 800e1f4:	df000404 	addi	fp,sp,16
 800e1f8:	e13ffe15 	stw	r4,-8(fp)
 800e1fc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 800e200:	e0bfff17 	ldw	r2,-4(fp)
 800e204:	10800017 	ldw	r2,0(r2)
 800e208:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 800e20c:	e13ffe17 	ldw	r4,-8(fp)
 800e210:	8000b000 	call	8000b00 <strlen>
 800e214:	10800044 	addi	r2,r2,1
 800e218:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 800e21c:	00000d06 	br	800e254 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 800e220:	e0bffc17 	ldw	r2,-16(fp)
 800e224:	10c00217 	ldw	r3,8(r2)
 800e228:	e0bffd17 	ldw	r2,-12(fp)
 800e22c:	1809883a 	mov	r4,r3
 800e230:	e17ffe17 	ldw	r5,-8(fp)
 800e234:	100d883a 	mov	r6,r2
 800e238:	800e5180 	call	800e518 <memcmp>
 800e23c:	1000021e 	bne	r2,zero,800e248 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 800e240:	e0bffc17 	ldw	r2,-16(fp)
 800e244:	00000706 	br	800e264 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 800e248:	e0bffc17 	ldw	r2,-16(fp)
 800e24c:	10800017 	ldw	r2,0(r2)
 800e250:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 800e254:	e0fffc17 	ldw	r3,-16(fp)
 800e258:	e0bfff17 	ldw	r2,-4(fp)
 800e25c:	18bff01e 	bne	r3,r2,800e220 <__flash_exceptions_start+0xf7e0d200>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 800e260:	0005883a 	mov	r2,zero
}
 800e264:	e037883a 	mov	sp,fp
 800e268:	dfc00117 	ldw	ra,4(sp)
 800e26c:	df000017 	ldw	fp,0(sp)
 800e270:	dec00204 	addi	sp,sp,8
 800e274:	f800283a 	ret

0800e278 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 800e278:	defffb04 	addi	sp,sp,-20
 800e27c:	dfc00415 	stw	ra,16(sp)
 800e280:	df000315 	stw	fp,12(sp)
 800e284:	df000304 	addi	fp,sp,12
 800e288:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 800e28c:	00820074 	movhi	r2,2049
 800e290:	10bdb504 	addi	r2,r2,-2348
 800e294:	10800017 	ldw	r2,0(r2)
 800e298:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 800e29c:	00003106 	br	800e364 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 800e2a0:	e0bffd17 	ldw	r2,-12(fp)
 800e2a4:	10800217 	ldw	r2,8(r2)
 800e2a8:	1009883a 	mov	r4,r2
 800e2ac:	8000b000 	call	8000b00 <strlen>
 800e2b0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 800e2b4:	e0bffd17 	ldw	r2,-12(fp)
 800e2b8:	10c00217 	ldw	r3,8(r2)
 800e2bc:	e0bffe17 	ldw	r2,-8(fp)
 800e2c0:	10bfffc4 	addi	r2,r2,-1
 800e2c4:	1885883a 	add	r2,r3,r2
 800e2c8:	10800003 	ldbu	r2,0(r2)
 800e2cc:	10803fcc 	andi	r2,r2,255
 800e2d0:	1080201c 	xori	r2,r2,128
 800e2d4:	10bfe004 	addi	r2,r2,-128
 800e2d8:	10800bd8 	cmpnei	r2,r2,47
 800e2dc:	1000031e 	bne	r2,zero,800e2ec <alt_find_file+0x74>
    {
      len -= 1;
 800e2e0:	e0bffe17 	ldw	r2,-8(fp)
 800e2e4:	10bfffc4 	addi	r2,r2,-1
 800e2e8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 800e2ec:	e0bffe17 	ldw	r2,-8(fp)
 800e2f0:	e0ffff17 	ldw	r3,-4(fp)
 800e2f4:	1885883a 	add	r2,r3,r2
 800e2f8:	10800003 	ldbu	r2,0(r2)
 800e2fc:	10803fcc 	andi	r2,r2,255
 800e300:	1080201c 	xori	r2,r2,128
 800e304:	10bfe004 	addi	r2,r2,-128
 800e308:	10800be0 	cmpeqi	r2,r2,47
 800e30c:	1000081e 	bne	r2,zero,800e330 <alt_find_file+0xb8>
 800e310:	e0bffe17 	ldw	r2,-8(fp)
 800e314:	e0ffff17 	ldw	r3,-4(fp)
 800e318:	1885883a 	add	r2,r3,r2
 800e31c:	10800003 	ldbu	r2,0(r2)
 800e320:	10803fcc 	andi	r2,r2,255
 800e324:	1080201c 	xori	r2,r2,128
 800e328:	10bfe004 	addi	r2,r2,-128
 800e32c:	10000a1e 	bne	r2,zero,800e358 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 800e330:	e0bffd17 	ldw	r2,-12(fp)
 800e334:	10c00217 	ldw	r3,8(r2)
 800e338:	e0bffe17 	ldw	r2,-8(fp)
 800e33c:	1809883a 	mov	r4,r3
 800e340:	e17fff17 	ldw	r5,-4(fp)
 800e344:	100d883a 	mov	r6,r2
 800e348:	800e5180 	call	800e518 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 800e34c:	1000021e 	bne	r2,zero,800e358 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 800e350:	e0bffd17 	ldw	r2,-12(fp)
 800e354:	00000806 	br	800e378 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 800e358:	e0bffd17 	ldw	r2,-12(fp)
 800e35c:	10800017 	ldw	r2,0(r2)
 800e360:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 800e364:	e0fffd17 	ldw	r3,-12(fp)
 800e368:	00820074 	movhi	r2,2049
 800e36c:	10bdb504 	addi	r2,r2,-2348
 800e370:	18bfcb1e 	bne	r3,r2,800e2a0 <__flash_exceptions_start+0xf7e0d280>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 800e374:	0005883a 	mov	r2,zero
}
 800e378:	e037883a 	mov	sp,fp
 800e37c:	dfc00117 	ldw	ra,4(sp)
 800e380:	df000017 	ldw	fp,0(sp)
 800e384:	dec00204 	addi	sp,sp,8
 800e388:	f800283a 	ret

0800e38c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 800e38c:	defffc04 	addi	sp,sp,-16
 800e390:	df000315 	stw	fp,12(sp)
 800e394:	df000304 	addi	fp,sp,12
 800e398:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 800e39c:	00bffa04 	movi	r2,-24
 800e3a0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 800e3a4:	e03ffd15 	stw	zero,-12(fp)
 800e3a8:	00001d06 	br	800e420 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 800e3ac:	00820074 	movhi	r2,2049
 800e3b0:	10bd1e04 	addi	r2,r2,-2952
 800e3b4:	e0fffd17 	ldw	r3,-12(fp)
 800e3b8:	18c00324 	muli	r3,r3,12
 800e3bc:	10c5883a 	add	r2,r2,r3
 800e3c0:	10800017 	ldw	r2,0(r2)
 800e3c4:	1000131e 	bne	r2,zero,800e414 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 800e3c8:	00820074 	movhi	r2,2049
 800e3cc:	10bd1e04 	addi	r2,r2,-2952
 800e3d0:	e0fffd17 	ldw	r3,-12(fp)
 800e3d4:	18c00324 	muli	r3,r3,12
 800e3d8:	10c5883a 	add	r2,r2,r3
 800e3dc:	e0ffff17 	ldw	r3,-4(fp)
 800e3e0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 800e3e4:	00820074 	movhi	r2,2049
 800e3e8:	10bdb904 	addi	r2,r2,-2332
 800e3ec:	10c00017 	ldw	r3,0(r2)
 800e3f0:	e0bffd17 	ldw	r2,-12(fp)
 800e3f4:	1880040e 	bge	r3,r2,800e408 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 800e3f8:	00820074 	movhi	r2,2049
 800e3fc:	10bdb904 	addi	r2,r2,-2332
 800e400:	e0fffd17 	ldw	r3,-12(fp)
 800e404:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 800e408:	e0bffd17 	ldw	r2,-12(fp)
 800e40c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 800e410:	00000606 	br	800e42c <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 800e414:	e0bffd17 	ldw	r2,-12(fp)
 800e418:	10800044 	addi	r2,r2,1
 800e41c:	e0bffd15 	stw	r2,-12(fp)
 800e420:	e0bffd17 	ldw	r2,-12(fp)
 800e424:	10800810 	cmplti	r2,r2,32
 800e428:	103fe01e 	bne	r2,zero,800e3ac <__flash_exceptions_start+0xf7e0d38c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 800e42c:	e0bffe17 	ldw	r2,-8(fp)
}
 800e430:	e037883a 	mov	sp,fp
 800e434:	df000017 	ldw	fp,0(sp)
 800e438:	dec00104 	addi	sp,sp,4
 800e43c:	f800283a 	ret

0800e440 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 800e440:	defffb04 	addi	sp,sp,-20
 800e444:	df000415 	stw	fp,16(sp)
 800e448:	df000404 	addi	fp,sp,16
 800e44c:	e13ffe15 	stw	r4,-8(fp)
 800e450:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 800e454:	e0bfff17 	ldw	r2,-4(fp)
 800e458:	10840070 	cmpltui	r2,r2,4097
 800e45c:	1000021e 	bne	r2,zero,800e468 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 800e460:	00840004 	movi	r2,4096
 800e464:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 800e468:	e0fffe17 	ldw	r3,-8(fp)
 800e46c:	e0bfff17 	ldw	r2,-4(fp)
 800e470:	1885883a 	add	r2,r3,r2
 800e474:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 800e478:	e0bffe17 	ldw	r2,-8(fp)
 800e47c:	e0bffc15 	stw	r2,-16(fp)
 800e480:	00000506 	br	800e498 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 800e484:	e0bffc17 	ldw	r2,-16(fp)
 800e488:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 800e48c:	e0bffc17 	ldw	r2,-16(fp)
 800e490:	10800804 	addi	r2,r2,32
 800e494:	e0bffc15 	stw	r2,-16(fp)
 800e498:	e0fffc17 	ldw	r3,-16(fp)
 800e49c:	e0bffd17 	ldw	r2,-12(fp)
 800e4a0:	18bff836 	bltu	r3,r2,800e484 <__flash_exceptions_start+0xf7e0d464>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 800e4a4:	e0bffe17 	ldw	r2,-8(fp)
 800e4a8:	108007cc 	andi	r2,r2,31
 800e4ac:	10000226 	beq	r2,zero,800e4b8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 800e4b0:	e0bffc17 	ldw	r2,-16(fp)
 800e4b4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 800e4b8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 800e4bc:	e037883a 	mov	sp,fp
 800e4c0:	df000017 	ldw	fp,0(sp)
 800e4c4:	dec00104 	addi	sp,sp,4
 800e4c8:	f800283a 	ret

0800e4cc <atexit>:
 800e4cc:	200b883a 	mov	r5,r4
 800e4d0:	000d883a 	mov	r6,zero
 800e4d4:	0009883a 	mov	r4,zero
 800e4d8:	000f883a 	mov	r7,zero
 800e4dc:	800e5941 	jmpi	800e594 <__register_exitproc>

0800e4e0 <exit>:
 800e4e0:	defffe04 	addi	sp,sp,-8
 800e4e4:	000b883a 	mov	r5,zero
 800e4e8:	dc000015 	stw	r16,0(sp)
 800e4ec:	dfc00115 	stw	ra,4(sp)
 800e4f0:	2021883a 	mov	r16,r4
 800e4f4:	800e6a80 	call	800e6a8 <__call_exitprocs>
 800e4f8:	00820074 	movhi	r2,2049
 800e4fc:	10bdaf04 	addi	r2,r2,-2372
 800e500:	11000017 	ldw	r4,0(r2)
 800e504:	20800f17 	ldw	r2,60(r4)
 800e508:	10000126 	beq	r2,zero,800e510 <exit+0x30>
 800e50c:	103ee83a 	callr	r2
 800e510:	8009883a 	mov	r4,r16
 800e514:	800e83c0 	call	800e83c <_exit>

0800e518 <memcmp>:
 800e518:	01c000c4 	movi	r7,3
 800e51c:	3980192e 	bgeu	r7,r6,800e584 <memcmp+0x6c>
 800e520:	2144b03a 	or	r2,r4,r5
 800e524:	11c4703a 	and	r2,r2,r7
 800e528:	10000f26 	beq	r2,zero,800e568 <memcmp+0x50>
 800e52c:	20800003 	ldbu	r2,0(r4)
 800e530:	28c00003 	ldbu	r3,0(r5)
 800e534:	10c0151e 	bne	r2,r3,800e58c <memcmp+0x74>
 800e538:	31bfff84 	addi	r6,r6,-2
 800e53c:	01ffffc4 	movi	r7,-1
 800e540:	00000406 	br	800e554 <memcmp+0x3c>
 800e544:	20800003 	ldbu	r2,0(r4)
 800e548:	28c00003 	ldbu	r3,0(r5)
 800e54c:	31bfffc4 	addi	r6,r6,-1
 800e550:	10c00e1e 	bne	r2,r3,800e58c <memcmp+0x74>
 800e554:	21000044 	addi	r4,r4,1
 800e558:	29400044 	addi	r5,r5,1
 800e55c:	31fff91e 	bne	r6,r7,800e544 <__flash_exceptions_start+0xf7e0d524>
 800e560:	0005883a 	mov	r2,zero
 800e564:	f800283a 	ret
 800e568:	20c00017 	ldw	r3,0(r4)
 800e56c:	28800017 	ldw	r2,0(r5)
 800e570:	1880041e 	bne	r3,r2,800e584 <memcmp+0x6c>
 800e574:	31bfff04 	addi	r6,r6,-4
 800e578:	21000104 	addi	r4,r4,4
 800e57c:	29400104 	addi	r5,r5,4
 800e580:	39bff936 	bltu	r7,r6,800e568 <__flash_exceptions_start+0xf7e0d548>
 800e584:	303fe91e 	bne	r6,zero,800e52c <__flash_exceptions_start+0xf7e0d50c>
 800e588:	003ff506 	br	800e560 <__flash_exceptions_start+0xf7e0d540>
 800e58c:	10c5c83a 	sub	r2,r2,r3
 800e590:	f800283a 	ret

0800e594 <__register_exitproc>:
 800e594:	00820074 	movhi	r2,2049
 800e598:	defffa04 	addi	sp,sp,-24
 800e59c:	10bdaf04 	addi	r2,r2,-2372
 800e5a0:	dc000315 	stw	r16,12(sp)
 800e5a4:	14000017 	ldw	r16,0(r2)
 800e5a8:	dc400415 	stw	r17,16(sp)
 800e5ac:	dfc00515 	stw	ra,20(sp)
 800e5b0:	80805217 	ldw	r2,328(r16)
 800e5b4:	2023883a 	mov	r17,r4
 800e5b8:	10003626 	beq	r2,zero,800e694 <__register_exitproc+0x100>
 800e5bc:	10c00117 	ldw	r3,4(r2)
 800e5c0:	010007c4 	movi	r4,31
 800e5c4:	20c00e16 	blt	r4,r3,800e600 <__register_exitproc+0x6c>
 800e5c8:	1a400044 	addi	r9,r3,1
 800e5cc:	8800211e 	bne	r17,zero,800e654 <__register_exitproc+0xc0>
 800e5d0:	18c00084 	addi	r3,r3,2
 800e5d4:	18c7883a 	add	r3,r3,r3
 800e5d8:	18c7883a 	add	r3,r3,r3
 800e5dc:	12400115 	stw	r9,4(r2)
 800e5e0:	10c7883a 	add	r3,r2,r3
 800e5e4:	19400015 	stw	r5,0(r3)
 800e5e8:	0005883a 	mov	r2,zero
 800e5ec:	dfc00517 	ldw	ra,20(sp)
 800e5f0:	dc400417 	ldw	r17,16(sp)
 800e5f4:	dc000317 	ldw	r16,12(sp)
 800e5f8:	dec00604 	addi	sp,sp,24
 800e5fc:	f800283a 	ret
 800e600:	00800034 	movhi	r2,0
 800e604:	10800004 	addi	r2,r2,0
 800e608:	10002526 	beq	r2,zero,800e6a0 <__register_exitproc+0x10c>
 800e60c:	01006404 	movi	r4,400
 800e610:	d9400015 	stw	r5,0(sp)
 800e614:	d9800115 	stw	r6,4(sp)
 800e618:	d9c00215 	stw	r7,8(sp)
 800e61c:	00000000 	call	0 <_start-0x8000000>
 800e620:	d9400017 	ldw	r5,0(sp)
 800e624:	d9800117 	ldw	r6,4(sp)
 800e628:	d9c00217 	ldw	r7,8(sp)
 800e62c:	10001c26 	beq	r2,zero,800e6a0 <__register_exitproc+0x10c>
 800e630:	80c05217 	ldw	r3,328(r16)
 800e634:	10000115 	stw	zero,4(r2)
 800e638:	02400044 	movi	r9,1
 800e63c:	10c00015 	stw	r3,0(r2)
 800e640:	80805215 	stw	r2,328(r16)
 800e644:	10006215 	stw	zero,392(r2)
 800e648:	10006315 	stw	zero,396(r2)
 800e64c:	0007883a 	mov	r3,zero
 800e650:	883fdf26 	beq	r17,zero,800e5d0 <__flash_exceptions_start+0xf7e0d5b0>
 800e654:	18d1883a 	add	r8,r3,r3
 800e658:	4211883a 	add	r8,r8,r8
 800e65c:	1211883a 	add	r8,r2,r8
 800e660:	41802215 	stw	r6,136(r8)
 800e664:	01000044 	movi	r4,1
 800e668:	11806217 	ldw	r6,392(r2)
 800e66c:	20c8983a 	sll	r4,r4,r3
 800e670:	310cb03a 	or	r6,r6,r4
 800e674:	11806215 	stw	r6,392(r2)
 800e678:	41c04215 	stw	r7,264(r8)
 800e67c:	01800084 	movi	r6,2
 800e680:	89bfd31e 	bne	r17,r6,800e5d0 <__flash_exceptions_start+0xf7e0d5b0>
 800e684:	11806317 	ldw	r6,396(r2)
 800e688:	3108b03a 	or	r4,r6,r4
 800e68c:	11006315 	stw	r4,396(r2)
 800e690:	003fcf06 	br	800e5d0 <__flash_exceptions_start+0xf7e0d5b0>
 800e694:	80805304 	addi	r2,r16,332
 800e698:	80805215 	stw	r2,328(r16)
 800e69c:	003fc706 	br	800e5bc <__flash_exceptions_start+0xf7e0d59c>
 800e6a0:	00bfffc4 	movi	r2,-1
 800e6a4:	003fd106 	br	800e5ec <__flash_exceptions_start+0xf7e0d5cc>

0800e6a8 <__call_exitprocs>:
 800e6a8:	00820074 	movhi	r2,2049
 800e6ac:	10bdaf04 	addi	r2,r2,-2372
 800e6b0:	10800017 	ldw	r2,0(r2)
 800e6b4:	defff404 	addi	sp,sp,-48
 800e6b8:	dd800815 	stw	r22,32(sp)
 800e6bc:	d8800015 	stw	r2,0(sp)
 800e6c0:	10805204 	addi	r2,r2,328
 800e6c4:	dd000615 	stw	r20,24(sp)
 800e6c8:	dc800415 	stw	r18,16(sp)
 800e6cc:	dfc00b15 	stw	ra,44(sp)
 800e6d0:	df000a15 	stw	fp,40(sp)
 800e6d4:	ddc00915 	stw	r23,36(sp)
 800e6d8:	dd400715 	stw	r21,28(sp)
 800e6dc:	dcc00515 	stw	r19,20(sp)
 800e6e0:	dc400315 	stw	r17,12(sp)
 800e6e4:	dc000215 	stw	r16,8(sp)
 800e6e8:	2025883a 	mov	r18,r4
 800e6ec:	2829883a 	mov	r20,r5
 800e6f0:	d8800115 	stw	r2,4(sp)
 800e6f4:	05bfffc4 	movi	r22,-1
 800e6f8:	d8800017 	ldw	r2,0(sp)
 800e6fc:	14c05217 	ldw	r19,328(r2)
 800e700:	98001d26 	beq	r19,zero,800e778 <__call_exitprocs+0xd0>
 800e704:	dd400117 	ldw	r21,4(sp)
 800e708:	98800117 	ldw	r2,4(r19)
 800e70c:	173fffc4 	addi	fp,r2,-1
 800e710:	e0000d16 	blt	fp,zero,800e748 <__call_exitprocs+0xa0>
 800e714:	14000044 	addi	r16,r2,1
 800e718:	8421883a 	add	r16,r16,r16
 800e71c:	8421883a 	add	r16,r16,r16
 800e720:	84402004 	addi	r17,r16,128
 800e724:	9c63883a 	add	r17,r19,r17
 800e728:	9c21883a 	add	r16,r19,r16
 800e72c:	a0001e26 	beq	r20,zero,800e7a8 <__call_exitprocs+0x100>
 800e730:	80804017 	ldw	r2,256(r16)
 800e734:	15001c26 	beq	r2,r20,800e7a8 <__call_exitprocs+0x100>
 800e738:	e73fffc4 	addi	fp,fp,-1
 800e73c:	843fff04 	addi	r16,r16,-4
 800e740:	8c7fff04 	addi	r17,r17,-4
 800e744:	e5bff91e 	bne	fp,r22,800e72c <__flash_exceptions_start+0xf7e0d70c>
 800e748:	00800034 	movhi	r2,0
 800e74c:	10800004 	addi	r2,r2,0
 800e750:	10000926 	beq	r2,zero,800e778 <__call_exitprocs+0xd0>
 800e754:	98800117 	ldw	r2,4(r19)
 800e758:	1000311e 	bne	r2,zero,800e820 <__call_exitprocs+0x178>
 800e75c:	98800017 	ldw	r2,0(r19)
 800e760:	10003426 	beq	r2,zero,800e834 <__call_exitprocs+0x18c>
 800e764:	9809883a 	mov	r4,r19
 800e768:	a8800015 	stw	r2,0(r21)
 800e76c:	00000000 	call	0 <_start-0x8000000>
 800e770:	acc00017 	ldw	r19,0(r21)
 800e774:	983fe41e 	bne	r19,zero,800e708 <__flash_exceptions_start+0xf7e0d6e8>
 800e778:	dfc00b17 	ldw	ra,44(sp)
 800e77c:	df000a17 	ldw	fp,40(sp)
 800e780:	ddc00917 	ldw	r23,36(sp)
 800e784:	dd800817 	ldw	r22,32(sp)
 800e788:	dd400717 	ldw	r21,28(sp)
 800e78c:	dd000617 	ldw	r20,24(sp)
 800e790:	dcc00517 	ldw	r19,20(sp)
 800e794:	dc800417 	ldw	r18,16(sp)
 800e798:	dc400317 	ldw	r17,12(sp)
 800e79c:	dc000217 	ldw	r16,8(sp)
 800e7a0:	dec00c04 	addi	sp,sp,48
 800e7a4:	f800283a 	ret
 800e7a8:	98800117 	ldw	r2,4(r19)
 800e7ac:	80c00017 	ldw	r3,0(r16)
 800e7b0:	10bfffc4 	addi	r2,r2,-1
 800e7b4:	17001526 	beq	r2,fp,800e80c <__call_exitprocs+0x164>
 800e7b8:	80000015 	stw	zero,0(r16)
 800e7bc:	183fde26 	beq	r3,zero,800e738 <__flash_exceptions_start+0xf7e0d718>
 800e7c0:	00800044 	movi	r2,1
 800e7c4:	1708983a 	sll	r4,r2,fp
 800e7c8:	98806217 	ldw	r2,392(r19)
 800e7cc:	9dc00117 	ldw	r23,4(r19)
 800e7d0:	2084703a 	and	r2,r4,r2
 800e7d4:	1000061e 	bne	r2,zero,800e7f0 <__call_exitprocs+0x148>
 800e7d8:	183ee83a 	callr	r3
 800e7dc:	98800117 	ldw	r2,4(r19)
 800e7e0:	15ffc51e 	bne	r2,r23,800e6f8 <__flash_exceptions_start+0xf7e0d6d8>
 800e7e4:	a8800017 	ldw	r2,0(r21)
 800e7e8:	14ffd326 	beq	r2,r19,800e738 <__flash_exceptions_start+0xf7e0d718>
 800e7ec:	003fc206 	br	800e6f8 <__flash_exceptions_start+0xf7e0d6d8>
 800e7f0:	98806317 	ldw	r2,396(r19)
 800e7f4:	2084703a 	and	r2,r4,r2
 800e7f8:	1000061e 	bne	r2,zero,800e814 <__call_exitprocs+0x16c>
 800e7fc:	89400017 	ldw	r5,0(r17)
 800e800:	9009883a 	mov	r4,r18
 800e804:	183ee83a 	callr	r3
 800e808:	003ff406 	br	800e7dc <__flash_exceptions_start+0xf7e0d7bc>
 800e80c:	9f000115 	stw	fp,4(r19)
 800e810:	003fea06 	br	800e7bc <__flash_exceptions_start+0xf7e0d79c>
 800e814:	89000017 	ldw	r4,0(r17)
 800e818:	183ee83a 	callr	r3
 800e81c:	003fef06 	br	800e7dc <__flash_exceptions_start+0xf7e0d7bc>
 800e820:	98800017 	ldw	r2,0(r19)
 800e824:	982b883a 	mov	r21,r19
 800e828:	1027883a 	mov	r19,r2
 800e82c:	983fb61e 	bne	r19,zero,800e708 <__flash_exceptions_start+0xf7e0d6e8>
 800e830:	003fd106 	br	800e778 <__flash_exceptions_start+0xf7e0d758>
 800e834:	0005883a 	mov	r2,zero
 800e838:	003ffa06 	br	800e824 <__flash_exceptions_start+0xf7e0d804>

0800e83c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 800e83c:	defffd04 	addi	sp,sp,-12
 800e840:	df000215 	stw	fp,8(sp)
 800e844:	df000204 	addi	fp,sp,8
 800e848:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 800e84c:	0001883a 	nop
 800e850:	e0bfff17 	ldw	r2,-4(fp)
 800e854:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 800e858:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 800e85c:	10000226 	beq	r2,zero,800e868 <_exit+0x2c>
    ALT_SIM_FAIL();
 800e860:	002af070 	cmpltui	zero,zero,43969
 800e864:	00000106 	br	800e86c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 800e868:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 800e86c:	003fff06 	br	800e86c <__flash_exceptions_start+0xf7e0d84c>
